{"text": " All right, welcome to class. Let's get started. So some of you may have seen some cool news today. Let me hit the lights. Google, or the CEO of Google, just put this out. An important next step for our AI journey. Some of you have probably been following GPT-3 and 3.5, chat GPT, that sort of stuff. Google has an AI model similar to GPT-3 that's literally three times larger. And they've had it forever. They just haven't been letting anybody use it. They announced today what they're calling BARD, which is effectively chat GPT, but Google branded. It's their version. With potentially a model that's significantly more powerful. So some fun stuff in the news today. We don't get access to it for a little bit longer, but that's Google for you. So just thought I'd give you that update in case you haven't seen it. Today... Oh, yeah? What do companies do keeping it internal? What do companies do keeping it internal? What do you mean? So something like chat GPT. I know it's not making any money for Microsoft just yet. But it's, like, good marketing. Right? But unless Google is integrating this into one of their services, what is the point of keeping it on your laptop? Yeah. So what's the point of keeping... As a business, what's the point of keeping a service that you've created internal and not allowing kind of open access to it? I think the first thing is... Why allow open access to something? The pro is... You might make money. You can potentially sell the service. That's great. The con is that people are gonna be messing around with your service. And maybe they're gonna be able to do things that you aren't expecting them to do. You might get really bad PR, especially. Google is very conscious of their PR. When it comes to AI, they don't want to be too scary. So keeping things internal keeps their PR presence contained. It means that when chat GPT says something racist or very out there and problematic, that's on open AI. Open AI has released that model. Anybody can use it. Google doesn't have that problem, because Google has not released their model. The benefits of keeping something internal, though, go beyond just having something internal. They can still use it. Open AI has built something that a lot of engineers are using now. So Copilot is something done by open AI that's great and useful. But beyond that, their GPT model is useful for all sorts of data processing. Google definitely uses Lambda, their GPT equivalent, internally to do data processing. Yeah. So there's a lot of benefit to having it. Even if it's not directly generating funds. That's not what we're talking about today. That's a future lecture, if we have time. Today, what we're talking about is fundamentals of Lambda calculus. Today, what we're talking about is fundamentals of Lambda calculus. Before we get started, a couple of quick notes. Homework 2 and PA2 are released. Homework 2 is decently harder than Homework 1. It's longer. There are more questions on it. Homework 1 had seven pretty short questions that you could kind of just throw into Node and see what happens. Homework 2 has, I think, four times as many questions. Start earlier. PA2, though, is a bit easier. It's just got, like, three or four functions that you have to implement. Video recordings seem to be a success. I have another one going now. So hopefully you'll always be able to watch these recordings as you study later. Any questions on those two before the third one? Oh, yeah. That's me. Sorry. I normally turn that off at the start of class. I got excited by this Google announcement. It's really cool. It's three times bigger than OpenAI. Not necessarily. No. It is likely better, but it's not guaranteed to be. Whole different training regimen. So... Could be anything. Questions. Questions. Questions. Okay. Then the form here that I have is a quick... Like it should take two minutes. It's a form that I have hosted on my website. If you go to uw.pister.dev... There's this DEIB form here. It'll take you to a Google form where I'm asking a simple set of questions. It's not... Oh. Okay. It apparently needs you to log in. It does not collect your email or anything of the sort. It's completely anonymous. I am not recording names or anything like that. But this is part of the micro grant that I received where I'm trying to figure out how to engage best for your learning. So if you could answer those questions as honestly as you can. If you don't have a computer with you today, I mean, you could probably do it on your phone, because it's a Google form. But the slides are up with the links, so please do it later. I'll give you guys two to three minutes right now, though, just to fill it out. Don't spend... You don't need to put a lot of effort. Just whatever first comes to mind. Yeah. Yeah. The link is... Somewhere. Is it working? You guys can access it? Okay. Okay. Okay. Okay. Okay. All right. If you were able to fill out the form, thank you. I appreciate your input. It will improve my teaching down the line. If you weren't able to fill out the form, either you need more time or you didn't have your computer, please find time later tonight to do that. It really just takes, like, two minutes. Now we're going to move on to LambdaCalc, though. So I did a sign reading. A sign reading. I uploaded, like, a few photos from my phone of a book. How many of you were able to read the PDF that I uploaded? Okay. Decent number of you. Then some decent number of you understand what this line of code means. But we're going to dive into it pretty explicitly. So what I'm saying here is an expression can become a variable X, or it can become a function that takes a parameter X and has an expression for a body, or it can become an expression with another expression passed in as an argument. That's the English way of reading this line of code. So how can we use that? If we wanted to... This is... Sorry. Backing up a step. This is the grammar for LambdaCalculus. This is the CFG, the context-free grammar, for the language LambdaCalculus. That's all that you need. So what this means is that we can start from E and turn this into a valid LambdaCalculus program. That's one step that we could take from E to generate a valid LambdaCalculus program. Yeah, so we can use E goes to an X and turn this into the variable X. X is a LambdaCalculus program. All it is is a variable called X. That's the program. Pretty simple. What if we wanted a slightly more complex program? What's a different step that we could take right here that would lead us down that path? What else could we do? Apply E to itself. So we can use this third rule to turn E into E1, E2, where these are different Es. What's another step that we can take from this program? This is a partial program. It's not complete. What can we do to this one? To E1, E2? Yeah, so let's turn this... Either one. Either one or both. We could turn into X. So we could say that this E1 becomes an X, and then we still have our E2. So E1, by this production rule, we could turn E into X. So we've turned E into X. We've turned E1 into X specifically. We still have E2. What else can we do to continue simplifying or turning this into a real program? Yeah, so let's turn this E2, using the second rule, into lambdaX.E. So this would turn into X, lambdaX.E. I'm putting parentheses just to keep that together, because this one E, E2, turned into lambdaX.E by our second production rule. But it's still not done. We have an E in here. What can we do? Yeah, sure, we could turn this E into an X, using the first rule. And our final result here would be X, lambdaX.X. This is another valid program in lambda calculus. I don't know what it means or what it does. Right now, we don't actually care. But we know that it's valid, because we used the syntax, the grammar that we've been given, to generate it. We're gonna spend a little bit more time with the slides, like, diving into what's valid, what's not valid. But these steps that we take here are the fundamental steps of developing a program from a grammar. You do it with everything that you do. When you write code, JavaScript has a grammar that's way more complicated than this, but it fundamentally turns into something like that. English as well has a grammar where we start from expressions and build things out with noun phrases and replace the noun in the noun phrase with this or that. So context-free grammars have applications everywhere. Here what we're using them for is to generate valid programs. Yeah? Yeah, so what's the deal with these 1, 2? Why doesn't this one have one? The numbers here are arbitrary. We could give them any name we wanted. We could say that this is E1, and E1 turns into E2, E3, which turns into XE3, which turns into E4. So each of these are their own expression, independent of the other expressions. That's what the context-free part of context-free grammar means. Yeah? Yeah, so what's the deal with this X? Or this X or this X, right? Or even this X. So all of these are variables in our language. They're just like in JavaScript when we say let X equal 3. This X here. They're the variables that are gonna capture some meaning. We can actually use whatever we want here. So we could say this is actually the variable Y. You know, use a different name. I've just put X to keep things simple. We can name it whatever we want. Just don't name it E, because E is our expression. I think for clarity, could you explain the difference between the X, which is a variable, and an expression, which is E, right? Right. So what's the difference between this and this? The key difference, E has somewhere to go. It is non-terminal. E can turn into one of these three things. X is what's called a terminal. There's nowhere that X can go. It can't turn into anything else. We don't have a rule that says X is equal to, I don't know, what would even make sense here. Let's say X is equal to 3. If we had a rule like this, that means when we're generating our program, we have to turn these Xs into their corresponding value, in this case, 3. Because we don't have a production rule with X in it, X is a terminal value, and that's just part of our language. It's a feature of our language. So this is the syntax. It's the grammar. Do you have another question? Yeah. Again, could you also just explain what lambda is? Ah, yeah, sure. What is lambda? What is dot? What do these things mean? At this point, it doesn't matter. We're talking not about meaning. We're just talking about what is valid and what's not valid. What programs can exist? The meaning is something that we're going to dive into of, like, what does each of these characters represent? But that's semantics. This is syntax. And I want those two to be pretty separate in your mind. What is a valid thing in lambda calculus? And then once I know that it's valid, what does that valid thing mean? The one thing that I've put in here that's not actually in our grammar is these parentheses. Parentheses help us just to associate things together, just like we would do in math, where you say, like, multiply these two things first, then do the division. So any time we turn E into one of these three, we're effectively putting parentheses around it. And we could, if we wanted, put parentheses around each of those production rules. Yeah? Shouldn't it just start by, like, readability, which is, like, names, and stuff like that? Well, so... Do they actually change the...? Right. Yes and no. And this, our equivalent... In this case, it is just readability. At some points, parentheses will matter. So having them helps from the start. But they will matter. Yeah. Okay. Any other questions on syntax here? If this is the first time you've seen context-free grammars, I recognize it's tricky. They're different. And it's a new way of expressing language. Read the chapter that I uploaded to Piazza. It's ten pages. It's not... And it's a small book. So it will probably take 15, 20 minutes tops. And it will hopefully clarify some of this. Yeah? Does the X in front of the root get the statement that's kind of part of the head, or is the head just the lambda X? The head. I guess, I don't know. I'm just trying to figure out the format of it. I'm trying to figure out the format of it so I can read something that says that the head is the lambda... Oh! In lambda calculus, you mean. Yeah, yeah, yeah. So there's... This is its own expression. This X. You're asking about this piece, right? Yeah. So this piece here, this lambda X dot, which corresponds to this piece here, that's what we're going to dive into with semantics. Yeah. Okay. So let's start talking about semantics. Because that's what you guys keep asking about. Which is fair. Because that's what the language actually is. Okay. So we've seen this grammar. That's what I just had up on the board. E can turn into a variable, which we could call X, Y, Z, whatever we wanted. It can turn into a function that takes a parameter named X and returns an expression E. Or it can turn into a function application of E1 onto E2. So we have variables, such as X, Y, Z. We have functions, or lambda abstractions is another way of saying that. I'm going to dive into that part next. But the way to, like, just very straightforwardly think of it is lambda X dot E is equivalent to X arrow E in JavaScript. We've just started working with arrow syntax. But if you're getting more familiar with it, that might help. And then the last thing that we have is function application. Which in JavaScript looks like E1 is the function, where E2 is the argument. So these are the JavaScript conversion rules. Okay. We're sticking with syntax just for a second. One term that we might have is something like lambda X dot 2 plus X. And immediately you might say, hey, wait. You've lied to me. What is 2? What is plus? We don't have those things in our language. We only have X, lambda X, E1, E2. And that's fair. But you can't actually represent numbers and addition with these terms alone. We will do that at the end of next lecture, I believe. So for now, just bear with me. We can pretend that they exist in our language as normal entities. So lambda X dot 2 plus X would be the equivalent of a JavaScript function that takes a variable X and it returns 2 plus X. If we wanted to call that function with the value 5, that would look something like this. Lambda X dot 2 plus X applied to the value 5. So if we looked at it in JavaScript, that would look something like X arrow 2 plus X with the input value of 5. Before we get to this complicated one... Oh, no? Okay. I hit it too many times. I want to take a step and go backwards from what we're looking at there. Which is hard, because they don't give us much whiteboard space. But we'll make it work. So we have lambda X dot 2 plus X applied to 5. They have one more set of parentheses. That's fine. So I want to use the syntax that we have, our grammar that we've defined, and break this apart into the rules that we have. Using X, lambda X dot E, and E1, E2. How can we reverse engineer this statement into the expressions that it's composed of? What would be the steps to do that? Yeah. Let's do a little bit of a simpler one. If we have lambda X dot X, we can go backwards from this state to our expression by saying this is equivalent to lambda X dot E, where we've turned E into X. So we're reversing our production rule. And then this is equivalent to E. Where E is using the production rule, E turns into lambda X dot E. Using the production rule, E turns into X. So if we started with E, we could take this step and then take that step using our production rules. I want to do that same process on this more complicated term. Yeah. Yeah, so let's turn 2 plus X into E. That's a reasonable thing to do here. I guess we don't need this second parenthesis anymore. So what we've done here is, say, we have some complicated expression, 2 plus X. Let's turn that into E. You know, for whatever E is. Then we have this step here. What's another backward step we can take? Turn 5 into E. Yeah, sure. This 5 can be a different E. We'll give this one a new name. We'll call this one E2. Lambda X dot E1. So just to keep them separate. They aren't the same variable E. They're a different expression. Yeah. Yeah, so this lambda X E1, we can call that E3. And then we still have E2. What's our last step? We know that E1, E2 is one of the productions of E. So we can generate some E4. So what we've done here is, we've stepped backwards from a final term, a program, into the base expression. Which means that we have a valid program in lambda calculus. We were able to backward step here. All the way to E. Yeah? Yeah. So what if... In JavaScript, or in any language, really, we can do something like F of 3 times 2. Where we have a complicated expression as a parameter to a function. This is an E. But it's an E in the same exact way that F of 3 is. Both of those are expressions that have a value. That we want to, you know, backwards figure out. Now, the specifics of how we can turn 5, which we're kind of hand waving as being part of our language, into E is fair. What I would say is... We can write this as a full, long lambda expression. But 5 is just shorter. To do that. Yeah. But it would look kind of like 3 times 2. When you write it all out. Other questions about this backwards process that we've taken? Yeah. The three production rules that I gave you are the three rules of lambda calculus. That's all that there is. People put more rules on top of it to create variants of lambda calculus. Things like typed lambda calculus or lambda calculus with objects. But the base lambda calculus only has those three rules. Other questions? Okay. In that case... We have another example term here. Lambda F dot F of 3 applied to lambda X dot X plus 1. Yeah? Yeah. Yeah, so we went in a very specific order here. Does that order matter? Could we have gone in another order? And would it have still worked? You are nodding. Right. Exactly. So we could have swapped some of these things around and done them in a different order. We could have done this 5 to E2 right away. And then done the next rule right after it. And that would be fine. That's another feature of the fact that these are context-free grammars. The order here doesn't matter. So long as you're applying the rules correctly. If you try and turn, like, the whole... Like this piece here into an expression, that's, like, cheating. It doesn't work in the language. So you'll get a different answer. But so long as you apply valid rules from the language, you'll always end up in the same place. Little bit of an asterisk there that we'll cover at the end of the next lecture. So importantly, we can't go back up any way that we want. Once we have created our system here, we're actually storing more information than I've written. For example, we would say this step here works so long as... Where can I write this? So long as E is equal to X plus 2. Or 2 plus X. And then we can take this next step so long as E1 is equal to... Oh, I guess that's what we've said here. So E1 equals that. And then E2 is equal to 5. And then we can take this next step so long as E3 is equal to lambdaX.E1, et cetera. So we're encoding that transformation in this backwards process. But that's not super important towards the class. It's just that that is the way that we're doing it. That's brilliant. All right. Thank you. Thank you for that note. We will use this for the next stuff on the board. Other questions? Okay. Then try and do this same backwards process that we've done on the second example. On this third one, feel free to chat with someone next to you to figure it out. But try and get all the way back to sum E. All right. Let's put it together as a class. I've got the expression up here. Let's go backwards. What's one first step that we could take? Yeah. We can turn this X plus 1 into an E1, let's say. LambdaX.E1. Okay. And then we keep everything else. Cool. What's another step that we could take from here? We could turn the 3 into an E. Yeah. Sure. So here we kind of elided that step. We turned our X plus 1 all into an E. That's fine. We can do the same... Over here, I guess we're going to just do the 3, and that's okay. So F of E2, lambdaX.E1. What else can we do? Yeah. Behind you. Sorry. FE2 into E4. Yeah. We can totally turn that into E4. Cool. All right. So that's good. We're good. We're good. That's fine. We can do that. All right. So let's... We can do a class. That's fine. We're good. Let's go back. What else can we do? Yeah. Oh. Behind you. Sorry. FE2 into E4. Yeah. We can totally turn that into E4, E3. And then... Yeah. One from here. Yep. Turn that into E5, E3. And finally... You guys in the back probably can't see all the way down anymore, but... Turn the last thing into E6. Why not? So we're able to go from this complicated expression, step by step, into a simple E6. And each of these E's has a different value. We've given it some number or some meaning inside of there. But we can forget about that at this point. The point is we were able to get down to E, which means we have a valid program. This is exactly the process that your IDE takes every time it gives you a redline squiggle. And it says, hey, your code is bad. You forgot to write int at the start of this line. Or you forgot the semicolon. It's going through this process constantly, trying to figure out where do you fail to parse your code? That's an error. Same exact process in a more complicated language. Okay. If we wanted to write that one as JavaScript, it might look something like this. The first part of your homework is converting JavaScript into lambda calculus. And then the second part is lambda calculus into JavaScript. So if we wanted to turn a function in JavaScript into lambda calculus, for example, function composition, what would function composition look like in JavaScript? So this is a function where we're applying f of f of x. F of x, instead of fog x. What would this look like? Yeah? Yeah, so the main function body is going to be f of f of x. But we're defining a function to do this. So we might have some sort of x goes to this result. It's a function that takes x and applies f of f of x to it. Or we might go a step further and say it's a function that takes a function f and a value x and then applies f of f of x. That's probably how I would write it in JavaScript. Let's see if that's what I wrote over here. Yes. Basically the same, but I've separated out the parameters. Questions on this composition function? Before we take it a step further? Okay. So... Oh, yeah. That's primarily a preference thing. Yeah. No. No, like, performance or readability for general people, I would assume. Some people prefer one way, some would prefer another. In some cases it matters. But we can talk about that later. All right. So then let's use this function. So the inner part here from f up to these parentheses is the same function that we've written already. But now we're calling it with two parameters. We're calling it with a function that takes in a variable x and returns x plus 1. And we're calling it with the number 4. Right off the bat, what would you assume this program is going to output? What's the return value of this final thing? 6, right? We're going to call x plus 1 on 4 twice. So we get 4 plus 1 is 5, plus 1 is 6. Okay. So this is how we would write and then use function composition. In JavaScript. Let's do it in lambda calculus. Here we've seen this, like, application before, where we're passing things in. I guess we've done that over here. But the 5 is the argument. So what this would look like is something like lambda f dot lambda x dot f of f of x. And what we've done, if we look at it as a transformation, I guess I've put in these extra parentheses. We don't need to. In JavaScript, we had our parameters on the left-hand side of this equal sign. In lambda calc, we have our parameters, x and f, on the left-hand side of these periods. Of the DOM. So x and f are our parameters. And our return is f of f of x. Which is f of f of x. And we could, if we wanted to, put in these extra parentheses, just to make it look more similar. But that would be kind of anti-lambda calc-y. So we'll write it like that much more often. Okay. If we wanted to then pass in our parameters, lambda x dot\ufffd or x goes to x plus 1 and 4, that would look something like this. Where we're turning our x goes to x plus 1 function into lambda x dot x plus 1. Once again, notice the x, the parameter on the left-hand side of the equals corresponds to the x before the period. The right-hand side corresponds to the right-hand side. 4 is 4. We're gonna keep going and see a lot more examples of this. So if it's feeling confusing, that's totally fine. That's very much expected, even. It will get less confusing the more that we look at it. Okay. And one way that we're gonna do this is just by doing a little, like, figure out is this valid, is this not? So if we had a term, lambda x plus y dot 3, is that valid? Give it a second of thought. You can try and go backwards from the final expression to an E, as we've done over here. If you get to E, then you're good. If you don't get to E, then you're bad. Like, I mean, the program is bad, not you. You guys are great. Thanks for showing up to class. But try and figure out, yes or no, is this valid? Okay. So let's do this. So let's do this. Okay. So let's do this. So let's do this. Okay. How many people are voting yes, valid term? How many people are voting no, not a valid term? All right. The nos have it. Why is it not valid? What's the problem here? Yeah, in the back. That's exactly right. So we have x plus y on the left-hand side of that dot. We have a rule that allows us to use lambda x dot E, but we can't turn x plus y into x. We could turn x plus y into E, into another expression, but that's not valid. That's not one of our production rules. So yep, not valid here. What about lambda x dot 3? How many people say yes, valid? No, not valid. All right. Yes, valid. We can turn 3 into E1, and then lambda x dot E1, we just use that second rule to turn it back into E. Great. What about lambda x x of x? Valid, not valid? How many people say valid? How many people say not valid? All right. A majority of valid. Yeah, this one is fine. So we can turn xx, this inside part, into E1, E2, and then E1, E2 turns into E3, and then lambda x E3 turns into E4. How about this one? Very similar, but we've replaced one of the x's with a y. Valid? Not valid. All right. Most people are saying valid here. I'm in agreement. The one caveat being that I've said E goes to x, so long as x is the set of variables. So we can name our variables anything we want. In this case, we're naming one of our variables y instead of x, which is fine. But we don't know what y is. But that's also fine. Okay. Any questions on any of these problems here? Since we're in PL, and PL people are mathematicians, and mathematicians are very tired of writing, there is more compact syntax. So for example, function application, that is E1, E2, is left associative. That means you perform the left application before the right-hand application. So E1, E2, E3 is equivalent to E1 applied to E2, the result of that applied to E3. So we don't need those parentheses if we don't want to use them. Lambdas, on the other hand, that is to say lambda abstraction or functions, bind all the way to the right. What that means is that when we have lambda x dot lambda y dot lambda z dot E, this outside lambda x goes all the way to the end of the E. We're going to go into a lot of examples of how to use this rule. So I'm not going to get too far into it now. But the trick is that you stop the, like, bounds of your lambda when you find an unmatched closing parentheses. You can think of this as the same algorithm with curly braces. When you open a curly brace at the start of a function, that function contains the scope of everything until you close the curly brace for it. Okay. So where do parentheses go in this expression? Lambda x dot x, x. Do they go around the body, the xx, or around the lambda abstraction? Chat with a neighbor. Try and come up with an answer. And a reason why. How many people say A is correct? How many people say B is correct? All right. Why is A correct? Who's got a reason for me? Yeah. Exactly. So lambdas bind all the way to the right until an unmatched closing parentheses. There are no parentheses. So lambdas go all the way. That means everything in the body is part of the lambda. Is this other... Is B a valid expression in lambda calculus? Yes? No. All right. Let's do it again. Is B a valid term in lambda calculus? Yes? No. All right. It is. It is valid. We could replace lambda x dot x using the second rule into E and turn x into E as well. E1, E2. So it's valid. It's just different. It's not what we were saying when we wrote that top term. Yeah. So if we didn't have... Oops. If we didn't have these two rules, it would be ambiguous to say... To give that term up top. We wouldn't know which one this is being represented by. But because we have these two rules, we know what that term means. Yeah. All right. What about this one? Lambda y dot lambda x, x, x. How many people vote A? How many people vote B? How many people vote C? How many people vote... We've spent too much time on it. All right. I mean, you guys all got it. This is great. Yeah. So B here, by the same logic as the previous slide, lambdas go all the way until they find a nonmatched closing parenthesis. All right. I think this is the last one of these. Are these two equivalent? Yes. They are equivalent. No. They are not equivalent. No. They are not equivalent. Great. You guys seem to be getting it. This is awesome. So the summarized rules... Applications are left associative. And precedence-wise, application happens before lambda calculus. I mean, lambda abstractions, sorry. One more way that we can make these things more compact is if we have lambda x dot lambda y dot lambda z dot e, we can just say lambda x, y, z. We aren't giving it one parameter called x, y, z. We're giving it three parameters, x, y, and z. So it's kind of the difference between this function over here, where we have two parameters at once. And if we rewrote that to be taking f, then taking x. Yeah? If you did just want one parameter called x, y, z, would you just, like, put a parenthesis around it? You wouldn't really be a mathematician then, would you? Honestly, I don't know what the notation... Like, the standard thing to do there is. People just always use single-letter variable names. Which is horrible practice. It's, like, exactly what you learn not to do in intro programming. Like, give your variables descriptive names. But because it's kind of math, it's, like... We use x, y much more often. I don't know. If you wanted, maybe, multi-character names, you could do... Then you wouldn't do this. You would keep things all separate. You would keep it like the left-hand side, perhaps. Further questions on syntax? Great. We're done with syntax. Let's get to the exciting thing. Let's actually evaluate this. Let's get to the semantics. So the semantics of lambda calc. There's basically one rule. We're going to try to reduce a term into another term as often as we can. Once we can't reduce it, we're done. That's the one rule. We're going to reduce a term into another term. Once we're done, we're done. The way we reduce is by rewriting terms. Rewriting terms means that we are doing substitution. Oops. So now what we're going to look at is what substitution means in lambda calculus. This is the one rule of lambda calc. It's the one way to do things. But there's a lot to it. So let's go through. So we can go back to our example over here that we had on the board. Lambda X dot 2 plus X of 5. We could rewrite that to JavaScript. And we would expect in JavaScript the answer to be what? The output of this expression to be what? Not a trick question. 7. I heard muttered. So we would get to 7 by substituting X, our parameter, with the value 5. Because we were calling the function with the value 5. The same thing is going to happen. Or I guess... Actually, I think we... Which one goes next? Yeah. Okay. So in lambda calc, the same thing is going to happen. We're going to pass that 5 into the X. And we're going to get 2 plus 5, which then reduces to 7. So what we've done up above, which I can draw, is that we've passed 5 in for the value X. So lambda X dot 2 plus X applied to 5. This is a function. That's the parameter name. We're going to pass 5 in for X. And we're gonna get 2 plus 5. More specifically, what we would write, as an intermediate stage, is we would say we get 2 plus X, where X is equal to 5. Then we would get 2 plus 5, 7. Okay. The more complicated expression. In JavaScript, we have our function here with an argument here. What we would do is we would pass that function argument in for the value F. So we would replace F with the function. And then we would pass the 3 in for the X. And we'd get an output of 4. This is what we would do in JavaScript. I hope I've convinced you at this point, lambda calculus, we aren't doing anything different. It's the same thing as what we would do in JavaScript. We will pass the function argument, lambda X dot X plus 1, in for F. So we replace F with that value. Then we pass in the 3 for the X. Replace X with 3. 3 plus 1. 4. I'll give you a second to digest that. If you have any questions, feel free to ask. Yeah? It is not F multiplied by 3. No. So F3, the F space 3 in the center of that body, is... If we pattern matched it to our rule, we would be matching that to the E equals E1, E2 rule. And this is saying E1 is a function, E2 is the argument to that function. So we would be passing the argument 3 to the function F. Yeah. Any other questions here? Okay. Let's keep getting into it. Maybe this looks easy for now. Maybe it looks hard. If it looks hard, that's fine. If it looks easy, that's also fine. We're gonna make it a little bit trickier, though. But the idea that we've done here is we really just replaced the left-hand variable name F with the input argument. That's all that the substitution was. So substitute the term you're applying to the function for the argument variable. This isn't quite right, though. But if we wanted to use this as, like, a base, which is what we'll do, we could define E1 with the context X equals E2 to mean replace every occurrence of X in E1 with E2. And this is what I've written over here. E1 is 2 plus X. X equals 5 is our X equals E2. So what we're saying is replace every instance of X with the value 5. That's like the theory way of writing it. Our general rule of reduction, then, would be that lambdaX.E1 being applied to E2 reduces to E1 where X equals E2. So any time we have a function application, you take the parameter name, set it equal to the value E2. So function application means rewrite E1 with every instance of X replaced with E2. Questions here? It's just like function application in other languages. And that's actually by design, because function applications all look the same, for the most part. Okay. No questions. That means you guys can do them. Take a second. Or take two minutes. Do both of these with your neighbor. Let's do the first one. What do we get as our next step of evaluation over here? With intermediate stages. What do we get? Yeah. Go for it. That will be... Give me the step right before that. Like the intermediate representation, which I've kind of written over there already. Yeah. Right. So same idea. 2 plus X where X is equal to 5. And then that will reduce a second time. Where we can do this substitution, where we get 2 plus 5. Done. Let's do the second one. These are so fun. What can we do here? First of all, what's the order... Like, which one of these goes first? We got 4, 5, and 6. How many people... Well, so I guess... We want to figure out what goes into X. That's our outermost function variable. We have three options. How many people are gonna vote that it's 4? How many people are voting it's 5? How many people are voting it's 6? Okay. So we have mostly 4 with a little bit of 6. Why would it be 4? Yeah. Outside of parentheses, things go left to right. Function application is left associative. So that means E1, E2, E3 is equivalent to E1, E2 first, then the result of that with E3. So if we wanted to draw parentheses in here, we would do... If we call all of this E1, 4, 5, 6, it would be E1, 4, the result of that, 5, the result of that, 6. Okay? With that knowledge ahead of us, what can we do? How can we reduce this? Can you just do 1 plus 3 and then... You're skipping ahead a little bit. Give me all the simple steps in between. You got an idea? I don't know if it's just simple steps, but the... That's what it is. What do you mean? I mean... I might be misunderstanding. Oh, yeah, yeah. So we could rewrite this X, Y, Z, dot Y plus 3. 4, 5, 6. These are equivalent. They're just different notation. We'll stick with the top one so that we can go one parameter at a time. Very clearly. But those are equivalent. Yeah? If you do Y, Y, dot Y plus 3, dot Y plus 3, where X is equal to 4, and 5, 6... Exactly. So we can pass just the 4 into our function. And what that means is that X is gonna take on the value 4. We're gonna be left with still a function, lambda Y, dot lambda Z, dot Y plus 3, with the two parameters still being passed in. And now we have some state that we've tacked on. X is equal to 4. What would we do next? Yeah? And what are we left with over here? Yep. So we'll keep lambda Z, dot Y plus 3 of 6. And now we have a state X is equal to 4. And Y is equal to 5. Okay? Last piece here. I know you guys know it. Oh! Yeah. Yep. So Y plus 3 is left. We have X equals 4, Y equals 5, and Z equals 6. We can do the last little step of 5 plus 3, because we know Y is 5. And we're done. That's what's on the slides. We've just done the same exact thing. And I've left off the state, but that's not too important. All right. One more before we finish. Actually, we probably don't have time before we finish. So we are going to continue on Wednesday doing more semantics of lambda calc. This is exactly what you're gonna be doing on the homework, where I will give you lambda calculus, you turn it into JavaScript, or I give you JavaScript, you turn it into lambda calculus. Yeah? So I wonder how can we go from here to this expression? So which one was this? Where we can go... So we have... What are we starting with? Lambda F dot F of 3 being applied to lambda X dot X plus 1. Right? Yeah. So... And we're turning them into our E1, E2, right? So we can turn 3 into an expression. Because that's just a complex expression. So we can say lambda F dot F of E1. Lambda X dot X plus 1. And then because of this rule here, E1, E2, we can turn these into E2, E1. Lambda F dot... Well, okay. I guess we're using this rule to turn F into E. Then we use that rule to turn E2, E1 into E3. And now we use the middle rule to turn that into E4. Yeah, that's right. So lambdas bind until they find an unmatched closed parenthesis. So this lambda here, if we take these out, this lambda here goes until it finds an unmatched closed parenthesis. So it's going... Unmatched closed parenthesis. Because it binds outside. So from here, goes and stops here. That means this is the body of the lambda. So that, like, this here goes all the way to that point. Which means we're allowed to then put in these parentheses if we want. Make sure you include the dot there. Yes. Yeah. I think it's... It's kind of faint there. I might have been... I might have forgotten it, but it needs to have a dot. Yeah. The dot needs to stick around. Yeah. Yep. Yep. So, like, I did this how I think it should be based on the load.json file. But it keeps only giving me a 2 out of 5, so I'm not sure if it's the cache being... Yeah. It looks like... So you need to create your own cache. So you want to check, like, after you do work, save that work to the cache so that the next time you then check to say if this work is already done in the cache, return whatever is in the cache. So you're setting cache, but you aren't checking cache. I think is one way to think of it. So if I have some... I'll just write Python, because that's, you know... Then what I can do is I can say if x in cache, return cache at x. Right? So all you need to do is check if obj is already in cache, and then just pass obj back. But then the important thing is also how we store that cache at x is equal to... Right. But yeah. So these are, like, the important before and after steps of the compute. But I just check first if obj is already in that. My hunch is that should resolve your issues. And then my other thing is it says that I have to use load.js file, but it's not... It doesn't believe that it exists. Like, any time I do load.js file, it says that function doesn't exist. Is it on... Is it, like, exported or something? No, because I'm just doing it like this, and it just says that's not... So have you... Wait. So you have a... So I believe with this one, you need to be giving it the information that it needs. So let me double-check on that. But yeah, my... So do we define... Load.js file is defined in require. And it's not exported for you to use somehow? Well, we have require saved, but even if I, like, require is as an object. Yeah. So if I use require, it doesn't exist. But it's exported on require. Like... You mean this? Yeah. Yeah. So you can't require underscore... Oh. Is load.js exported? No, it is not. I don't think so. Yeah. So I think... But it's on the loader. So the idea is we have some before where we have the normal, like, load function that we're running. Or loader function. And then the goal is that...", "segments": [{"id": 0, "seek": 3000, "start": 30.0, "end": 42.68, "text": " All right, welcome to class.", "tokens": [50364, 1057, 558, 11, 2928, 281, 1508, 13, 50998], "temperature": 0.0, "avg_logprob": -0.38363161087036135, "compression_ratio": 1.21, "no_speech_prob": 0.0012063945177942514}, {"id": 1, "seek": 3000, "start": 42.68, "end": 46.760000000000005, "text": " Let's get started.", "tokens": [50998, 961, 311, 483, 1409, 13, 51202], "temperature": 0.0, "avg_logprob": -0.38363161087036135, "compression_ratio": 1.21, "no_speech_prob": 0.0012063945177942514}, {"id": 2, "seek": 3000, "start": 46.760000000000005, "end": 50.36, "text": " So some of you may have seen some cool news today.", "tokens": [51202, 407, 512, 295, 291, 815, 362, 1612, 512, 1627, 2583, 965, 13, 51382], "temperature": 0.0, "avg_logprob": -0.38363161087036135, "compression_ratio": 1.21, "no_speech_prob": 0.0012063945177942514}, {"id": 3, "seek": 3000, "start": 50.36, "end": 52.120000000000005, "text": " Let me hit the lights.", "tokens": [51382, 961, 385, 2045, 264, 5811, 13, 51470], "temperature": 0.0, "avg_logprob": -0.38363161087036135, "compression_ratio": 1.21, "no_speech_prob": 0.0012063945177942514}, {"id": 4, "seek": 5212, "start": 52.12, "end": 60.76, "text": " Google, or the CEO of Google, just put this out.", "tokens": [50364, 3329, 11, 420, 264, 9282, 295, 3329, 11, 445, 829, 341, 484, 13, 50796], "temperature": 0.0, "avg_logprob": -0.2197052240371704, "compression_ratio": 1.46875, "no_speech_prob": 0.0050600627437233925}, {"id": 5, "seek": 5212, "start": 60.76, "end": 63.68, "text": " An important next step for our AI journey.", "tokens": [50796, 1107, 1021, 958, 1823, 337, 527, 7318, 4671, 13, 50942], "temperature": 0.0, "avg_logprob": -0.2197052240371704, "compression_ratio": 1.46875, "no_speech_prob": 0.0050600627437233925}, {"id": 6, "seek": 5212, "start": 63.68, "end": 70.64, "text": " Some of you have probably been following GPT-3 and 3.5, chat GPT, that sort of stuff.", "tokens": [50942, 2188, 295, 291, 362, 1391, 668, 3480, 26039, 51, 12, 18, 293, 805, 13, 20, 11, 5081, 26039, 51, 11, 300, 1333, 295, 1507, 13, 51290], "temperature": 0.0, "avg_logprob": -0.2197052240371704, "compression_ratio": 1.46875, "no_speech_prob": 0.0050600627437233925}, {"id": 7, "seek": 5212, "start": 70.64, "end": 78.28, "text": " Google has an AI model similar to GPT-3 that's literally three times larger.", "tokens": [51290, 3329, 575, 364, 7318, 2316, 2531, 281, 26039, 51, 12, 18, 300, 311, 3736, 1045, 1413, 4833, 13, 51672], "temperature": 0.0, "avg_logprob": -0.2197052240371704, "compression_ratio": 1.46875, "no_speech_prob": 0.0050600627437233925}, {"id": 8, "seek": 5212, "start": 78.28, "end": 79.28, "text": " And they've had it forever.", "tokens": [51672, 400, 436, 600, 632, 309, 5680, 13, 51722], "temperature": 0.0, "avg_logprob": -0.2197052240371704, "compression_ratio": 1.46875, "no_speech_prob": 0.0050600627437233925}, {"id": 9, "seek": 5212, "start": 79.28, "end": 81.68, "text": " They just haven't been letting anybody use it.", "tokens": [51722, 814, 445, 2378, 380, 668, 8295, 4472, 764, 309, 13, 51842], "temperature": 0.0, "avg_logprob": -0.2197052240371704, "compression_ratio": 1.46875, "no_speech_prob": 0.0050600627437233925}, {"id": 10, "seek": 8168, "start": 81.68, "end": 88.72000000000001, "text": " They announced today what they're calling BARD, which is effectively chat GPT, but Google", "tokens": [50364, 814, 7548, 965, 437, 436, 434, 5141, 363, 13259, 11, 597, 307, 8659, 5081, 26039, 51, 11, 457, 3329, 50716], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 11, "seek": 8168, "start": 88.72000000000001, "end": 89.72000000000001, "text": " branded.", "tokens": [50716, 38510, 13, 50766], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 12, "seek": 8168, "start": 89.72000000000001, "end": 90.92, "text": " It's their version.", "tokens": [50766, 467, 311, 641, 3037, 13, 50826], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 13, "seek": 8168, "start": 90.92, "end": 93.92, "text": " With potentially a model that's significantly more powerful.", "tokens": [50826, 2022, 7263, 257, 2316, 300, 311, 10591, 544, 4005, 13, 50976], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 14, "seek": 8168, "start": 93.92, "end": 97.16000000000001, "text": " So some fun stuff in the news today.", "tokens": [50976, 407, 512, 1019, 1507, 294, 264, 2583, 965, 13, 51138], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 15, "seek": 8168, "start": 97.16000000000001, "end": 100.46000000000001, "text": " We don't get access to it for a little bit longer, but that's Google for you.", "tokens": [51138, 492, 500, 380, 483, 2105, 281, 309, 337, 257, 707, 857, 2854, 11, 457, 300, 311, 3329, 337, 291, 13, 51303], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 16, "seek": 8168, "start": 100.46000000000001, "end": 108.36000000000001, "text": " So just thought I'd give you that update in case you haven't seen it.", "tokens": [51303, 407, 445, 1194, 286, 1116, 976, 291, 300, 5623, 294, 1389, 291, 2378, 380, 1612, 309, 13, 51698], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 17, "seek": 8168, "start": 108.36000000000001, "end": 109.36000000000001, "text": " Today...", "tokens": [51698, 2692, 485, 51748], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 18, "seek": 8168, "start": 109.36000000000001, "end": 110.36000000000001, "text": " Oh, yeah?", "tokens": [51748, 876, 11, 1338, 30, 51798], "temperature": 0.0, "avg_logprob": -0.24650547239515516, "compression_ratio": 1.5258964143426295, "no_speech_prob": 0.008711161091923714}, {"id": 19, "seek": 11036, "start": 110.36, "end": 112.92, "text": " What do companies do keeping it internal?", "tokens": [50364, 708, 360, 3431, 360, 5145, 309, 6920, 30, 50492], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 20, "seek": 11036, "start": 112.92, "end": 115.03999999999999, "text": " What do companies do keeping it internal?", "tokens": [50492, 708, 360, 3431, 360, 5145, 309, 6920, 30, 50598], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 21, "seek": 11036, "start": 115.03999999999999, "end": 116.03999999999999, "text": " What do you mean?", "tokens": [50598, 708, 360, 291, 914, 30, 50648], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 22, "seek": 11036, "start": 116.03999999999999, "end": 117.03999999999999, "text": " So something like chat GPT.", "tokens": [50648, 407, 746, 411, 5081, 26039, 51, 13, 50698], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 23, "seek": 11036, "start": 117.03999999999999, "end": 118.03999999999999, "text": " I know it's not making any money for Microsoft just yet.", "tokens": [50698, 286, 458, 309, 311, 406, 1455, 604, 1460, 337, 8116, 445, 1939, 13, 50748], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 24, "seek": 11036, "start": 118.03999999999999, "end": 119.03999999999999, "text": " But it's, like, good marketing.", "tokens": [50748, 583, 309, 311, 11, 411, 11, 665, 6370, 13, 50798], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 25, "seek": 11036, "start": 119.03999999999999, "end": 120.03999999999999, "text": " Right?", "tokens": [50798, 1779, 30, 50848], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 26, "seek": 11036, "start": 120.03999999999999, "end": 121.03999999999999, "text": " But unless Google is integrating this into one of their services, what is the point of", "tokens": [50848, 583, 5969, 3329, 307, 26889, 341, 666, 472, 295, 641, 3328, 11, 437, 307, 264, 935, 295, 50898], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 27, "seek": 11036, "start": 121.03999999999999, "end": 134.04, "text": " keeping it on your laptop?", "tokens": [50898, 5145, 309, 322, 428, 10732, 30, 51548], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 28, "seek": 11036, "start": 134.04, "end": 135.04, "text": " Yeah.", "tokens": [51548, 865, 13, 51598], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 29, "seek": 11036, "start": 135.04, "end": 136.64, "text": " So what's the point of keeping...", "tokens": [51598, 407, 437, 311, 264, 935, 295, 5145, 485, 51678], "temperature": 0.0, "avg_logprob": -0.3955952705593284, "compression_ratio": 1.7465437788018434, "no_speech_prob": 0.14032748341560364}, {"id": 30, "seek": 13664, "start": 136.64, "end": 141.04, "text": " As a business, what's the point of keeping a service that you've created internal and", "tokens": [50364, 1018, 257, 1606, 11, 437, 311, 264, 935, 295, 5145, 257, 2643, 300, 291, 600, 2942, 6920, 293, 50584], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 31, "seek": 13664, "start": 141.04, "end": 144.51999999999998, "text": " not allowing kind of open access to it?", "tokens": [50584, 406, 8293, 733, 295, 1269, 2105, 281, 309, 30, 50758], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 32, "seek": 13664, "start": 144.51999999999998, "end": 146.72, "text": " I think the first thing is...", "tokens": [50758, 286, 519, 264, 700, 551, 307, 485, 50868], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 33, "seek": 13664, "start": 146.72, "end": 149.05999999999997, "text": " Why allow open access to something?", "tokens": [50868, 1545, 2089, 1269, 2105, 281, 746, 30, 50985], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 34, "seek": 13664, "start": 149.05999999999997, "end": 150.76, "text": " The pro is...", "tokens": [50985, 440, 447, 307, 485, 51070], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 35, "seek": 13664, "start": 150.76, "end": 151.92, "text": " You might make money.", "tokens": [51070, 509, 1062, 652, 1460, 13, 51128], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 36, "seek": 13664, "start": 151.92, "end": 153.83999999999997, "text": " You can potentially sell the service.", "tokens": [51128, 509, 393, 7263, 3607, 264, 2643, 13, 51224], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 37, "seek": 13664, "start": 153.83999999999997, "end": 154.88, "text": " That's great.", "tokens": [51224, 663, 311, 869, 13, 51276], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 38, "seek": 13664, "start": 154.88, "end": 158.07999999999998, "text": " The con is that people are gonna be messing around with your service.", "tokens": [51276, 440, 416, 307, 300, 561, 366, 799, 312, 23258, 926, 365, 428, 2643, 13, 51436], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 39, "seek": 13664, "start": 158.07999999999998, "end": 161.04, "text": " And maybe they're gonna be able to do things that you aren't expecting them to do.", "tokens": [51436, 400, 1310, 436, 434, 799, 312, 1075, 281, 360, 721, 300, 291, 3212, 380, 9650, 552, 281, 360, 13, 51584], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 40, "seek": 13664, "start": 161.04, "end": 164.92, "text": " You might get really bad PR, especially.", "tokens": [51584, 509, 1062, 483, 534, 1578, 11568, 11, 2318, 13, 51778], "temperature": 0.0, "avg_logprob": -0.22397493377445252, "compression_ratio": 1.7326007326007327, "no_speech_prob": 0.2173215001821518}, {"id": 41, "seek": 16492, "start": 164.92, "end": 168.44, "text": " Google is very conscious of their PR.", "tokens": [50364, 3329, 307, 588, 6648, 295, 641, 11568, 13, 50540], "temperature": 0.0, "avg_logprob": -0.215317930494036, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.055002257227897644}, {"id": 42, "seek": 16492, "start": 168.44, "end": 173.56, "text": " When it comes to AI, they don't want to be too scary.", "tokens": [50540, 1133, 309, 1487, 281, 7318, 11, 436, 500, 380, 528, 281, 312, 886, 6958, 13, 50796], "temperature": 0.0, "avg_logprob": -0.215317930494036, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.055002257227897644}, {"id": 43, "seek": 16492, "start": 173.56, "end": 179.11999999999998, "text": " So keeping things internal keeps their PR presence contained.", "tokens": [50796, 407, 5145, 721, 6920, 5965, 641, 11568, 6814, 16212, 13, 51074], "temperature": 0.0, "avg_logprob": -0.215317930494036, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.055002257227897644}, {"id": 44, "seek": 16492, "start": 179.11999999999998, "end": 187.16, "text": " It means that when chat GPT says something racist or very out there and problematic,", "tokens": [51074, 467, 1355, 300, 562, 5081, 26039, 51, 1619, 746, 16419, 420, 588, 484, 456, 293, 19011, 11, 51476], "temperature": 0.0, "avg_logprob": -0.215317930494036, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.055002257227897644}, {"id": 45, "seek": 16492, "start": 187.16, "end": 188.51999999999998, "text": " that's on open AI.", "tokens": [51476, 300, 311, 322, 1269, 7318, 13, 51544], "temperature": 0.0, "avg_logprob": -0.215317930494036, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.055002257227897644}, {"id": 46, "seek": 16492, "start": 188.51999999999998, "end": 191.0, "text": " Open AI has released that model.", "tokens": [51544, 7238, 7318, 575, 4736, 300, 2316, 13, 51668], "temperature": 0.0, "avg_logprob": -0.215317930494036, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.055002257227897644}, {"id": 47, "seek": 16492, "start": 191.0, "end": 192.23999999999998, "text": " Anybody can use it.", "tokens": [51668, 19082, 393, 764, 309, 13, 51730], "temperature": 0.0, "avg_logprob": -0.215317930494036, "compression_ratio": 1.4832535885167464, "no_speech_prob": 0.055002257227897644}, {"id": 48, "seek": 19224, "start": 192.24, "end": 196.72, "text": " Google doesn't have that problem, because Google has not released their model.", "tokens": [50364, 3329, 1177, 380, 362, 300, 1154, 11, 570, 3329, 575, 406, 4736, 641, 2316, 13, 50588], "temperature": 0.0, "avg_logprob": -0.2096622899635551, "compression_ratio": 1.6833333333333333, "no_speech_prob": 0.04535146802663803}, {"id": 49, "seek": 19224, "start": 196.72, "end": 201.52, "text": " The benefits of keeping something internal, though, go beyond just having something internal.", "tokens": [50588, 440, 5311, 295, 5145, 746, 6920, 11, 1673, 11, 352, 4399, 445, 1419, 746, 6920, 13, 50828], "temperature": 0.0, "avg_logprob": -0.2096622899635551, "compression_ratio": 1.6833333333333333, "no_speech_prob": 0.04535146802663803}, {"id": 50, "seek": 19224, "start": 201.52, "end": 203.8, "text": " They can still use it.", "tokens": [50828, 814, 393, 920, 764, 309, 13, 50942], "temperature": 0.0, "avg_logprob": -0.2096622899635551, "compression_ratio": 1.6833333333333333, "no_speech_prob": 0.04535146802663803}, {"id": 51, "seek": 19224, "start": 203.8, "end": 207.84, "text": " Open AI has built something that a lot of engineers are using now.", "tokens": [50942, 7238, 7318, 575, 3094, 746, 300, 257, 688, 295, 11955, 366, 1228, 586, 13, 51144], "temperature": 0.0, "avg_logprob": -0.2096622899635551, "compression_ratio": 1.6833333333333333, "no_speech_prob": 0.04535146802663803}, {"id": 52, "seek": 19224, "start": 207.84, "end": 212.84, "text": " So Copilot is something done by open AI that's great and useful.", "tokens": [51144, 407, 11579, 31516, 307, 746, 1096, 538, 1269, 7318, 300, 311, 869, 293, 4420, 13, 51394], "temperature": 0.0, "avg_logprob": -0.2096622899635551, "compression_ratio": 1.6833333333333333, "no_speech_prob": 0.04535146802663803}, {"id": 53, "seek": 19224, "start": 212.84, "end": 218.08, "text": " But beyond that, their GPT model is useful for all sorts of data processing.", "tokens": [51394, 583, 4399, 300, 11, 641, 26039, 51, 2316, 307, 4420, 337, 439, 7527, 295, 1412, 9007, 13, 51656], "temperature": 0.0, "avg_logprob": -0.2096622899635551, "compression_ratio": 1.6833333333333333, "no_speech_prob": 0.04535146802663803}, {"id": 54, "seek": 21808, "start": 218.08, "end": 224.4, "text": " Google definitely uses Lambda, their GPT equivalent, internally to do data processing.", "tokens": [50364, 3329, 2138, 4960, 45691, 11, 641, 26039, 51, 10344, 11, 19501, 281, 360, 1412, 9007, 13, 50680], "temperature": 0.0, "avg_logprob": -0.30081588571721857, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.10970113426446915}, {"id": 55, "seek": 21808, "start": 224.4, "end": 225.4, "text": " Yeah.", "tokens": [50680, 865, 13, 50730], "temperature": 0.0, "avg_logprob": -0.30081588571721857, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.10970113426446915}, {"id": 56, "seek": 21808, "start": 225.4, "end": 229.04000000000002, "text": " So there's a lot of benefit to having it.", "tokens": [50730, 407, 456, 311, 257, 688, 295, 5121, 281, 1419, 309, 13, 50912], "temperature": 0.0, "avg_logprob": -0.30081588571721857, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.10970113426446915}, {"id": 57, "seek": 21808, "start": 229.04000000000002, "end": 233.64000000000001, "text": " Even if it's not directly generating funds.", "tokens": [50912, 2754, 498, 309, 311, 406, 3838, 17746, 8271, 13, 51142], "temperature": 0.0, "avg_logprob": -0.30081588571721857, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.10970113426446915}, {"id": 58, "seek": 21808, "start": 233.64000000000001, "end": 234.96, "text": " That's not what we're talking about today.", "tokens": [51142, 663, 311, 406, 437, 321, 434, 1417, 466, 965, 13, 51208], "temperature": 0.0, "avg_logprob": -0.30081588571721857, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.10970113426446915}, {"id": 59, "seek": 21808, "start": 234.96, "end": 237.48000000000002, "text": " That's a future lecture, if we have time.", "tokens": [51208, 663, 311, 257, 2027, 7991, 11, 498, 321, 362, 565, 13, 51334], "temperature": 0.0, "avg_logprob": -0.30081588571721857, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.10970113426446915}, {"id": 60, "seek": 21808, "start": 237.48000000000002, "end": 244.4, "text": " Today, what we're talking about is fundamentals of Lambda calculus.", "tokens": [51334, 2692, 11, 437, 321, 434, 1417, 466, 307, 29505, 295, 45691, 33400, 13, 51680], "temperature": 0.0, "avg_logprob": -0.30081588571721857, "compression_ratio": 1.5761904761904761, "no_speech_prob": 0.10970113426446915}, {"id": 61, "seek": 24440, "start": 244.4, "end": 253.68, "text": " Today, what we're talking about is fundamentals of Lambda calculus.", "tokens": [50364, 2692, 11, 437, 321, 434, 1417, 466, 307, 29505, 295, 45691, 33400, 13, 50828], "temperature": 0.0, "avg_logprob": -0.20723130305608115, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.0028008827939629555}, {"id": 62, "seek": 24440, "start": 253.68, "end": 257.0, "text": " Before we get started, a couple of quick notes.", "tokens": [50828, 4546, 321, 483, 1409, 11, 257, 1916, 295, 1702, 5570, 13, 50994], "temperature": 0.0, "avg_logprob": -0.20723130305608115, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.0028008827939629555}, {"id": 63, "seek": 24440, "start": 257.0, "end": 259.56, "text": " Homework 2 and PA2 are released.", "tokens": [50994, 8719, 1902, 568, 293, 17718, 17, 366, 4736, 13, 51122], "temperature": 0.0, "avg_logprob": -0.20723130305608115, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.0028008827939629555}, {"id": 64, "seek": 24440, "start": 259.56, "end": 263.0, "text": " Homework 2 is decently harder than Homework 1.", "tokens": [51122, 8719, 1902, 568, 307, 979, 2276, 6081, 813, 8719, 1902, 502, 13, 51294], "temperature": 0.0, "avg_logprob": -0.20723130305608115, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.0028008827939629555}, {"id": 65, "seek": 24440, "start": 263.0, "end": 264.0, "text": " It's longer.", "tokens": [51294, 467, 311, 2854, 13, 51344], "temperature": 0.0, "avg_logprob": -0.20723130305608115, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.0028008827939629555}, {"id": 66, "seek": 24440, "start": 264.0, "end": 265.08, "text": " There are more questions on it.", "tokens": [51344, 821, 366, 544, 1651, 322, 309, 13, 51398], "temperature": 0.0, "avg_logprob": -0.20723130305608115, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.0028008827939629555}, {"id": 67, "seek": 24440, "start": 265.08, "end": 269.6, "text": " Homework 1 had seven pretty short questions that you could kind of just throw into Node", "tokens": [51398, 8719, 1902, 502, 632, 3407, 1238, 2099, 1651, 300, 291, 727, 733, 295, 445, 3507, 666, 38640, 51624], "temperature": 0.0, "avg_logprob": -0.20723130305608115, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.0028008827939629555}, {"id": 68, "seek": 24440, "start": 269.6, "end": 271.24, "text": " and see what happens.", "tokens": [51624, 293, 536, 437, 2314, 13, 51706], "temperature": 0.0, "avg_logprob": -0.20723130305608115, "compression_ratio": 1.5350877192982457, "no_speech_prob": 0.0028008827939629555}, {"id": 69, "seek": 27124, "start": 271.24, "end": 275.48, "text": " Homework 2 has, I think, four times as many questions.", "tokens": [50364, 8719, 1902, 568, 575, 11, 286, 519, 11, 1451, 1413, 382, 867, 1651, 13, 50576], "temperature": 0.0, "avg_logprob": -0.22759267195914556, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.050326164811849594}, {"id": 70, "seek": 27124, "start": 275.48, "end": 276.48, "text": " Start earlier.", "tokens": [50576, 6481, 3071, 13, 50626], "temperature": 0.0, "avg_logprob": -0.22759267195914556, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.050326164811849594}, {"id": 71, "seek": 27124, "start": 276.48, "end": 279.0, "text": " PA2, though, is a bit easier.", "tokens": [50626, 17718, 17, 11, 1673, 11, 307, 257, 857, 3571, 13, 50752], "temperature": 0.0, "avg_logprob": -0.22759267195914556, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.050326164811849594}, {"id": 72, "seek": 27124, "start": 279.0, "end": 283.92, "text": " It's just got, like, three or four functions that you have to implement.", "tokens": [50752, 467, 311, 445, 658, 11, 411, 11, 1045, 420, 1451, 6828, 300, 291, 362, 281, 4445, 13, 50998], "temperature": 0.0, "avg_logprob": -0.22759267195914556, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.050326164811849594}, {"id": 73, "seek": 27124, "start": 283.92, "end": 285.64, "text": " Video recordings seem to be a success.", "tokens": [50998, 9777, 25162, 1643, 281, 312, 257, 2245, 13, 51084], "temperature": 0.0, "avg_logprob": -0.22759267195914556, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.050326164811849594}, {"id": 74, "seek": 27124, "start": 285.64, "end": 287.0, "text": " I have another one going now.", "tokens": [51084, 286, 362, 1071, 472, 516, 586, 13, 51152], "temperature": 0.0, "avg_logprob": -0.22759267195914556, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.050326164811849594}, {"id": 75, "seek": 27124, "start": 287.0, "end": 293.2, "text": " So hopefully you'll always be able to watch these recordings as you study later.", "tokens": [51152, 407, 4696, 291, 603, 1009, 312, 1075, 281, 1159, 613, 25162, 382, 291, 2979, 1780, 13, 51462], "temperature": 0.0, "avg_logprob": -0.22759267195914556, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.050326164811849594}, {"id": 76, "seek": 27124, "start": 293.2, "end": 296.68, "text": " Any questions on those two before the third one?", "tokens": [51462, 2639, 1651, 322, 729, 732, 949, 264, 2636, 472, 30, 51636], "temperature": 0.0, "avg_logprob": -0.22759267195914556, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.050326164811849594}, {"id": 77, "seek": 29668, "start": 296.68, "end": 301.48, "text": " Oh, yeah.", "tokens": [50364, 876, 11, 1338, 13, 50604], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 78, "seek": 29668, "start": 301.48, "end": 302.48, "text": " That's me.", "tokens": [50604, 663, 311, 385, 13, 50654], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 79, "seek": 29668, "start": 302.48, "end": 303.48, "text": " Sorry.", "tokens": [50654, 4919, 13, 50704], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 80, "seek": 29668, "start": 303.48, "end": 304.84000000000003, "text": " I normally turn that off at the start of class.", "tokens": [50704, 286, 5646, 1261, 300, 766, 412, 264, 722, 295, 1508, 13, 50772], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 81, "seek": 29668, "start": 304.84000000000003, "end": 308.08, "text": " I got excited by this Google announcement.", "tokens": [50772, 286, 658, 2919, 538, 341, 3329, 12847, 13, 50934], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 82, "seek": 29668, "start": 308.08, "end": 309.72, "text": " It's really cool.", "tokens": [50934, 467, 311, 534, 1627, 13, 51016], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 83, "seek": 29668, "start": 309.72, "end": 314.92, "text": " It's three times bigger than OpenAI.", "tokens": [51016, 467, 311, 1045, 1413, 3801, 813, 7238, 48698, 13, 51276], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 84, "seek": 29668, "start": 314.92, "end": 315.92, "text": " Not necessarily.", "tokens": [51276, 1726, 4725, 13, 51326], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 85, "seek": 29668, "start": 315.92, "end": 316.92, "text": " No.", "tokens": [51326, 883, 13, 51376], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 86, "seek": 29668, "start": 316.92, "end": 322.68, "text": " It is likely better, but it's not guaranteed to be.", "tokens": [51376, 467, 307, 3700, 1101, 11, 457, 309, 311, 406, 18031, 281, 312, 13, 51664], "temperature": 0.0, "avg_logprob": -0.2609098962990634, "compression_ratio": 1.4057142857142857, "no_speech_prob": 0.0002453691267874092}, {"id": 87, "seek": 32268, "start": 322.68, "end": 323.96, "text": " Whole different training regimen.", "tokens": [50364, 30336, 819, 3097, 1121, 19676, 13, 50428], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 88, "seek": 32268, "start": 323.96, "end": 324.96, "text": " So...", "tokens": [50428, 407, 485, 50478], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 89, "seek": 32268, "start": 324.96, "end": 325.96, "text": " Could be anything.", "tokens": [50478, 7497, 312, 1340, 13, 50528], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 90, "seek": 32268, "start": 325.96, "end": 326.96, "text": " Questions.", "tokens": [50528, 27738, 13, 50578], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 91, "seek": 32268, "start": 326.96, "end": 327.96, "text": " Questions.", "tokens": [50578, 27738, 13, 50628], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 92, "seek": 32268, "start": 327.96, "end": 328.96, "text": " Questions.", "tokens": [50628, 27738, 13, 50678], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 93, "seek": 32268, "start": 328.96, "end": 329.96, "text": " Okay.", "tokens": [50678, 1033, 13, 50728], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 94, "seek": 32268, "start": 329.96, "end": 334.84000000000003, "text": " Then the form here that I have is a quick...", "tokens": [50728, 1396, 264, 1254, 510, 300, 286, 362, 307, 257, 1702, 485, 50972], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 95, "seek": 32268, "start": 334.84000000000003, "end": 337.36, "text": " Like it should take two minutes.", "tokens": [50972, 1743, 309, 820, 747, 732, 2077, 13, 51098], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 96, "seek": 32268, "start": 337.36, "end": 340.48, "text": " It's a form that I have hosted on my website.", "tokens": [51098, 467, 311, 257, 1254, 300, 286, 362, 19204, 322, 452, 3144, 13, 51254], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 97, "seek": 32268, "start": 340.48, "end": 348.24, "text": " If you go to uw.pister.dev...", "tokens": [51254, 759, 291, 352, 281, 23147, 13, 79, 1964, 13, 40343, 485, 51642], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 98, "seek": 32268, "start": 348.24, "end": 351.24, "text": " There's this DEIB form here.", "tokens": [51642, 821, 311, 341, 10113, 39081, 1254, 510, 13, 51792], "temperature": 0.0, "avg_logprob": -0.3003681182861328, "compression_ratio": 1.5053763440860215, "no_speech_prob": 0.2567797601222992}, {"id": 99, "seek": 35124, "start": 351.24, "end": 358.2, "text": " It'll take you to a Google form where I'm asking a simple set of questions.", "tokens": [50364, 467, 603, 747, 291, 281, 257, 3329, 1254, 689, 286, 478, 3365, 257, 2199, 992, 295, 1651, 13, 50712], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 100, "seek": 35124, "start": 358.2, "end": 359.2, "text": " It's not...", "tokens": [50712, 467, 311, 406, 485, 50762], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 101, "seek": 35124, "start": 359.2, "end": 360.2, "text": " Oh.", "tokens": [50762, 876, 13, 50812], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 102, "seek": 35124, "start": 360.2, "end": 361.2, "text": " Okay.", "tokens": [50812, 1033, 13, 50862], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 103, "seek": 35124, "start": 361.2, "end": 362.2, "text": " It apparently needs you to log in.", "tokens": [50862, 467, 7970, 2203, 291, 281, 3565, 294, 13, 50912], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 104, "seek": 35124, "start": 362.2, "end": 365.48, "text": " It does not collect your email or anything of the sort.", "tokens": [50912, 467, 775, 406, 2500, 428, 3796, 420, 1340, 295, 264, 1333, 13, 51076], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 105, "seek": 35124, "start": 365.48, "end": 366.72, "text": " It's completely anonymous.", "tokens": [51076, 467, 311, 2584, 24932, 13, 51138], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 106, "seek": 35124, "start": 366.72, "end": 369.6, "text": " I am not recording names or anything like that.", "tokens": [51138, 286, 669, 406, 6613, 5288, 420, 1340, 411, 300, 13, 51282], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 107, "seek": 35124, "start": 369.6, "end": 375.08, "text": " But this is part of the micro grant that I received where I'm trying to figure out how", "tokens": [51282, 583, 341, 307, 644, 295, 264, 4532, 6386, 300, 286, 4613, 689, 286, 478, 1382, 281, 2573, 484, 577, 51556], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 108, "seek": 35124, "start": 375.08, "end": 378.76, "text": " to engage best for your learning.", "tokens": [51556, 281, 4683, 1151, 337, 428, 2539, 13, 51740], "temperature": 0.0, "avg_logprob": -0.20027174643420298, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.02843383513391018}, {"id": 109, "seek": 37876, "start": 378.76, "end": 382.4, "text": " So if you could answer those questions as honestly as you can.", "tokens": [50364, 407, 498, 291, 727, 1867, 729, 1651, 382, 6095, 382, 291, 393, 13, 50546], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 110, "seek": 37876, "start": 382.4, "end": 387.12, "text": " If you don't have a computer with you today, I mean, you could probably do it on your phone,", "tokens": [50546, 759, 291, 500, 380, 362, 257, 3820, 365, 291, 965, 11, 286, 914, 11, 291, 727, 1391, 360, 309, 322, 428, 2593, 11, 50782], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 111, "seek": 37876, "start": 387.12, "end": 388.32, "text": " because it's a Google form.", "tokens": [50782, 570, 309, 311, 257, 3329, 1254, 13, 50842], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 112, "seek": 37876, "start": 388.32, "end": 391.71999999999997, "text": " But the slides are up with the links, so please do it later.", "tokens": [50842, 583, 264, 9788, 366, 493, 365, 264, 6123, 11, 370, 1767, 360, 309, 1780, 13, 51012], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 113, "seek": 37876, "start": 391.71999999999997, "end": 397.28, "text": " I'll give you guys two to three minutes right now, though, just to fill it out.", "tokens": [51012, 286, 603, 976, 291, 1074, 732, 281, 1045, 2077, 558, 586, 11, 1673, 11, 445, 281, 2836, 309, 484, 13, 51290], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 114, "seek": 37876, "start": 397.28, "end": 398.52, "text": " Don't spend...", "tokens": [51290, 1468, 380, 3496, 485, 51352], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 115, "seek": 37876, "start": 398.52, "end": 400.06, "text": " You don't need to put a lot of effort.", "tokens": [51352, 509, 500, 380, 643, 281, 829, 257, 688, 295, 4630, 13, 51429], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 116, "seek": 37876, "start": 400.06, "end": 402.44, "text": " Just whatever first comes to mind.", "tokens": [51429, 1449, 2035, 700, 1487, 281, 1575, 13, 51548], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 117, "seek": 37876, "start": 402.44, "end": 403.44, "text": " Yeah.", "tokens": [51548, 865, 13, 51598], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 118, "seek": 37876, "start": 403.44, "end": 404.44, "text": " Yeah.", "tokens": [51598, 865, 13, 51648], "temperature": 0.0, "avg_logprob": -0.2638318198067801, "compression_ratio": 1.579925650557621, "no_speech_prob": 0.03846394643187523}, {"id": 119, "seek": 40444, "start": 404.6, "end": 407.6, "text": " The link is...", "tokens": [50372, 440, 2113, 307, 485, 50522], "temperature": 0.0, "avg_logprob": -0.5212691734577047, "compression_ratio": 0.9210526315789473, "no_speech_prob": 0.3172725439071655}, {"id": 120, "seek": 40444, "start": 407.6, "end": 410.6, "text": " Somewhere.", "tokens": [50522, 34500, 13, 50672], "temperature": 0.0, "avg_logprob": -0.5212691734577047, "compression_ratio": 0.9210526315789473, "no_speech_prob": 0.3172725439071655}, {"id": 121, "seek": 40444, "start": 423.24, "end": 424.24, "text": " Is it working?", "tokens": [51304, 1119, 309, 1364, 30, 51354], "temperature": 0.0, "avg_logprob": -0.5212691734577047, "compression_ratio": 0.9210526315789473, "no_speech_prob": 0.3172725439071655}, {"id": 122, "seek": 40444, "start": 424.24, "end": 425.24, "text": " You guys can access it?", "tokens": [51354, 509, 1074, 393, 2105, 309, 30, 51404], "temperature": 0.0, "avg_logprob": -0.5212691734577047, "compression_ratio": 0.9210526315789473, "no_speech_prob": 0.3172725439071655}, {"id": 123, "seek": 40444, "start": 425.24, "end": 426.24, "text": " Okay.", "tokens": [51404, 1033, 13, 51454], "temperature": 0.0, "avg_logprob": -0.5212691734577047, "compression_ratio": 0.9210526315789473, "no_speech_prob": 0.3172725439071655}, {"id": 124, "seek": 43444, "start": 434.44, "end": 437.44, "text": " Okay.", "tokens": [50364, 1033, 13, 50514], "temperature": 0.0, "avg_logprob": -0.9739568710327149, "compression_ratio": 0.38461538461538464, "no_speech_prob": 0.8538869619369507}, {"id": 125, "seek": 46444, "start": 464.44, "end": 467.44, "text": " Okay.", "tokens": [50364, 1033, 13, 50514], "temperature": 0.0, "avg_logprob": -0.581340742111206, "compression_ratio": 0.38461538461538464, "no_speech_prob": 0.8004617691040039}, {"id": 126, "seek": 49444, "start": 494.44, "end": 497.44, "text": " Okay.", "tokens": [50364, 1033, 13, 50514], "temperature": 0.0, "avg_logprob": -0.4610867500305176, "compression_ratio": 0.38461538461538464, "no_speech_prob": 0.7314239144325256}, {"id": 127, "seek": 52444, "start": 524.44, "end": 528.44, "text": " Okay.", "tokens": [50414, 1033, 13, 50564], "temperature": 0.0, "avg_logprob": -0.44220666885375975, "compression_ratio": 0.38461538461538464, "no_speech_prob": 0.678665280342102}, {"id": 128, "seek": 55444, "start": 554.44, "end": 574.44, "text": " All right.", "tokens": [50364, 1057, 558, 13, 51364], "temperature": 0.0, "avg_logprob": -0.21371827806745256, "compression_ratio": 1.5808823529411764, "no_speech_prob": 0.07804787904024124}, {"id": 129, "seek": 55444, "start": 574.44, "end": 576.32, "text": " If you were able to fill out the form, thank you.", "tokens": [51364, 759, 291, 645, 1075, 281, 2836, 484, 264, 1254, 11, 1309, 291, 13, 51458], "temperature": 0.0, "avg_logprob": -0.21371827806745256, "compression_ratio": 1.5808823529411764, "no_speech_prob": 0.07804787904024124}, {"id": 130, "seek": 55444, "start": 576.32, "end": 578.0, "text": " I appreciate your input.", "tokens": [51458, 286, 4449, 428, 4846, 13, 51542], "temperature": 0.0, "avg_logprob": -0.21371827806745256, "compression_ratio": 1.5808823529411764, "no_speech_prob": 0.07804787904024124}, {"id": 131, "seek": 55444, "start": 578.0, "end": 580.96, "text": " It will improve my teaching down the line.", "tokens": [51542, 467, 486, 3470, 452, 4571, 760, 264, 1622, 13, 51690], "temperature": 0.0, "avg_logprob": -0.21371827806745256, "compression_ratio": 1.5808823529411764, "no_speech_prob": 0.07804787904024124}, {"id": 132, "seek": 55444, "start": 580.96, "end": 583.6400000000001, "text": " If you weren't able to fill out the form, either you need more time or you didn't have", "tokens": [51690, 759, 291, 4999, 380, 1075, 281, 2836, 484, 264, 1254, 11, 2139, 291, 643, 544, 565, 420, 291, 994, 380, 362, 51824], "temperature": 0.0, "avg_logprob": -0.21371827806745256, "compression_ratio": 1.5808823529411764, "no_speech_prob": 0.07804787904024124}, {"id": 133, "seek": 58364, "start": 583.64, "end": 587.06, "text": " your computer, please find time later tonight to do that.", "tokens": [50364, 428, 3820, 11, 1767, 915, 565, 1780, 4440, 281, 360, 300, 13, 50535], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 134, "seek": 58364, "start": 587.06, "end": 590.0, "text": " It really just takes, like, two minutes.", "tokens": [50535, 467, 534, 445, 2516, 11, 411, 11, 732, 2077, 13, 50682], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 135, "seek": 58364, "start": 590.0, "end": 593.88, "text": " Now we're going to move on to LambdaCalc, though.", "tokens": [50682, 823, 321, 434, 516, 281, 1286, 322, 281, 45691, 31279, 66, 11, 1673, 13, 50876], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 136, "seek": 58364, "start": 593.88, "end": 596.88, "text": " So I did a sign reading.", "tokens": [50876, 407, 286, 630, 257, 1465, 3760, 13, 51026], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 137, "seek": 58364, "start": 596.88, "end": 597.88, "text": " A sign reading.", "tokens": [51026, 316, 1465, 3760, 13, 51076], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 138, "seek": 58364, "start": 597.88, "end": 602.8, "text": " I uploaded, like, a few photos from my phone of a book.", "tokens": [51076, 286, 17135, 11, 411, 11, 257, 1326, 5787, 490, 452, 2593, 295, 257, 1446, 13, 51322], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 139, "seek": 58364, "start": 602.8, "end": 607.16, "text": " How many of you were able to read the PDF that I uploaded?", "tokens": [51322, 1012, 867, 295, 291, 645, 1075, 281, 1401, 264, 17752, 300, 286, 17135, 30, 51540], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 140, "seek": 58364, "start": 607.16, "end": 608.4, "text": " Okay.", "tokens": [51540, 1033, 13, 51602], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 141, "seek": 58364, "start": 608.4, "end": 609.4, "text": " Decent number of you.", "tokens": [51602, 1346, 2207, 1230, 295, 291, 13, 51652], "temperature": 0.0, "avg_logprob": -0.2685094980093149, "compression_ratio": 1.4821428571428572, "no_speech_prob": 0.027584251016378403}, {"id": 142, "seek": 60940, "start": 610.1999999999999, "end": 615.6, "text": " Then some decent number of you understand what this line of code means.", "tokens": [50404, 1396, 512, 8681, 1230, 295, 291, 1223, 437, 341, 1622, 295, 3089, 1355, 13, 50674], "temperature": 0.0, "avg_logprob": -0.2606989895855939, "compression_ratio": 1.4025974025974026, "no_speech_prob": 0.04672381654381752}, {"id": 143, "seek": 60940, "start": 615.6, "end": 620.1999999999999, "text": " But we're going to dive into it pretty explicitly.", "tokens": [50674, 583, 321, 434, 516, 281, 9192, 666, 309, 1238, 20803, 13, 50904], "temperature": 0.0, "avg_logprob": -0.2606989895855939, "compression_ratio": 1.4025974025974026, "no_speech_prob": 0.04672381654381752}, {"id": 144, "seek": 60940, "start": 620.1999999999999, "end": 631.36, "text": " So what I'm saying here is an expression can become a variable X, or it can become a function", "tokens": [50904, 407, 437, 286, 478, 1566, 510, 307, 364, 6114, 393, 1813, 257, 7006, 1783, 11, 420, 309, 393, 1813, 257, 2445, 51462], "temperature": 0.0, "avg_logprob": -0.2606989895855939, "compression_ratio": 1.4025974025974026, "no_speech_prob": 0.04672381654381752}, {"id": 145, "seek": 63136, "start": 631.36, "end": 639.32, "text": " that takes a parameter X and has an expression for a body, or it can become an expression", "tokens": [50364, 300, 2516, 257, 13075, 1783, 293, 575, 364, 6114, 337, 257, 1772, 11, 420, 309, 393, 1813, 364, 6114, 50762], "temperature": 0.0, "avg_logprob": -0.19463702778757355, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.07585595548152924}, {"id": 146, "seek": 63136, "start": 639.32, "end": 643.32, "text": " with another expression passed in as an argument.", "tokens": [50762, 365, 1071, 6114, 4678, 294, 382, 364, 6770, 13, 50962], "temperature": 0.0, "avg_logprob": -0.19463702778757355, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.07585595548152924}, {"id": 147, "seek": 63136, "start": 643.32, "end": 649.74, "text": " That's the English way of reading this line of code.", "tokens": [50962, 663, 311, 264, 3669, 636, 295, 3760, 341, 1622, 295, 3089, 13, 51283], "temperature": 0.0, "avg_logprob": -0.19463702778757355, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.07585595548152924}, {"id": 148, "seek": 63136, "start": 649.74, "end": 654.48, "text": " So how can we use that?", "tokens": [51283, 407, 577, 393, 321, 764, 300, 30, 51520], "temperature": 0.0, "avg_logprob": -0.19463702778757355, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.07585595548152924}, {"id": 149, "seek": 63136, "start": 654.48, "end": 656.16, "text": " If we wanted to...", "tokens": [51520, 759, 321, 1415, 281, 485, 51604], "temperature": 0.0, "avg_logprob": -0.19463702778757355, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.07585595548152924}, {"id": 150, "seek": 63136, "start": 656.16, "end": 657.16, "text": " This is...", "tokens": [51604, 639, 307, 485, 51654], "temperature": 0.0, "avg_logprob": -0.19463702778757355, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.07585595548152924}, {"id": 151, "seek": 63136, "start": 657.16, "end": 658.16, "text": " Sorry.", "tokens": [51654, 4919, 13, 51704], "temperature": 0.0, "avg_logprob": -0.19463702778757355, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.07585595548152924}, {"id": 152, "seek": 63136, "start": 658.16, "end": 659.16, "text": " Backing up a step.", "tokens": [51704, 5833, 278, 493, 257, 1823, 13, 51754], "temperature": 0.0, "avg_logprob": -0.19463702778757355, "compression_ratio": 1.4782608695652173, "no_speech_prob": 0.07585595548152924}, {"id": 153, "seek": 65916, "start": 659.16, "end": 663.0799999999999, "text": " This is the grammar for LambdaCalculus.", "tokens": [50364, 639, 307, 264, 22317, 337, 45691, 31279, 36002, 13, 50560], "temperature": 0.0, "avg_logprob": -0.23605401965155118, "compression_ratio": 1.5723684210526316, "no_speech_prob": 0.39974358677864075}, {"id": 154, "seek": 65916, "start": 663.0799999999999, "end": 668.36, "text": " This is the CFG, the context-free grammar, for the language LambdaCalculus.", "tokens": [50560, 639, 307, 264, 21792, 38, 11, 264, 4319, 12, 10792, 22317, 11, 337, 264, 2856, 45691, 31279, 36002, 13, 50824], "temperature": 0.0, "avg_logprob": -0.23605401965155118, "compression_ratio": 1.5723684210526316, "no_speech_prob": 0.39974358677864075}, {"id": 155, "seek": 65916, "start": 668.36, "end": 669.9599999999999, "text": " That's all that you need.", "tokens": [50824, 663, 311, 439, 300, 291, 643, 13, 50904], "temperature": 0.0, "avg_logprob": -0.23605401965155118, "compression_ratio": 1.5723684210526316, "no_speech_prob": 0.39974358677864075}, {"id": 156, "seek": 65916, "start": 669.9599999999999, "end": 678.8, "text": " So what this means is that we can start from E and turn this into a valid LambdaCalculus", "tokens": [50904, 407, 437, 341, 1355, 307, 300, 321, 393, 722, 490, 462, 293, 1261, 341, 666, 257, 7363, 45691, 31279, 36002, 51346], "temperature": 0.0, "avg_logprob": -0.23605401965155118, "compression_ratio": 1.5723684210526316, "no_speech_prob": 0.39974358677864075}, {"id": 157, "seek": 65916, "start": 678.8, "end": 680.3199999999999, "text": " program.", "tokens": [51346, 1461, 13, 51422], "temperature": 0.0, "avg_logprob": -0.23605401965155118, "compression_ratio": 1.5723684210526316, "no_speech_prob": 0.39974358677864075}, {"id": 158, "seek": 68032, "start": 680.32, "end": 686.7600000000001, "text": " That's one step that we could take from E to generate a valid LambdaCalculus program.", "tokens": [50364, 663, 311, 472, 1823, 300, 321, 727, 747, 490, 462, 281, 8460, 257, 7363, 45691, 31279, 36002, 1461, 13, 50686], "temperature": 0.0, "avg_logprob": -0.27891352269556613, "compression_ratio": 1.526946107784431, "no_speech_prob": 0.027168435975909233}, {"id": 159, "seek": 68032, "start": 686.7600000000001, "end": 700.12, "text": " Yeah, so we can use E goes to an X and turn this into the variable X.", "tokens": [50686, 865, 11, 370, 321, 393, 764, 462, 1709, 281, 364, 1783, 293, 1261, 341, 666, 264, 7006, 1783, 13, 51354], "temperature": 0.0, "avg_logprob": -0.27891352269556613, "compression_ratio": 1.526946107784431, "no_speech_prob": 0.027168435975909233}, {"id": 160, "seek": 68032, "start": 700.12, "end": 703.08, "text": " X is a LambdaCalculus program.", "tokens": [51354, 1783, 307, 257, 45691, 31279, 36002, 1461, 13, 51502], "temperature": 0.0, "avg_logprob": -0.27891352269556613, "compression_ratio": 1.526946107784431, "no_speech_prob": 0.027168435975909233}, {"id": 161, "seek": 68032, "start": 703.08, "end": 706.4000000000001, "text": " All it is is a variable called X.", "tokens": [51502, 1057, 309, 307, 307, 257, 7006, 1219, 1783, 13, 51668], "temperature": 0.0, "avg_logprob": -0.27891352269556613, "compression_ratio": 1.526946107784431, "no_speech_prob": 0.027168435975909233}, {"id": 162, "seek": 68032, "start": 706.4000000000001, "end": 707.8800000000001, "text": " That's the program.", "tokens": [51668, 663, 311, 264, 1461, 13, 51742], "temperature": 0.0, "avg_logprob": -0.27891352269556613, "compression_ratio": 1.526946107784431, "no_speech_prob": 0.027168435975909233}, {"id": 163, "seek": 68032, "start": 707.8800000000001, "end": 709.84, "text": " Pretty simple.", "tokens": [51742, 10693, 2199, 13, 51840], "temperature": 0.0, "avg_logprob": -0.27891352269556613, "compression_ratio": 1.526946107784431, "no_speech_prob": 0.027168435975909233}, {"id": 164, "seek": 70984, "start": 709.84, "end": 712.72, "text": " What if we wanted a slightly more complex program?", "tokens": [50364, 708, 498, 321, 1415, 257, 4748, 544, 3997, 1461, 30, 50508], "temperature": 0.0, "avg_logprob": -0.23688636779785155, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.0003406286414247006}, {"id": 165, "seek": 70984, "start": 712.72, "end": 720.98, "text": " What's a different step that we could take right here that would lead us down that path?", "tokens": [50508, 708, 311, 257, 819, 1823, 300, 321, 727, 747, 558, 510, 300, 576, 1477, 505, 760, 300, 3100, 30, 50921], "temperature": 0.0, "avg_logprob": -0.23688636779785155, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.0003406286414247006}, {"id": 166, "seek": 70984, "start": 720.98, "end": 733.12, "text": " What else could we do?", "tokens": [50921, 708, 1646, 727, 321, 360, 30, 51528], "temperature": 0.0, "avg_logprob": -0.23688636779785155, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.0003406286414247006}, {"id": 167, "seek": 70984, "start": 733.12, "end": 734.4000000000001, "text": " Apply E to itself.", "tokens": [51528, 25264, 462, 281, 2564, 13, 51592], "temperature": 0.0, "avg_logprob": -0.23688636779785155, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.0003406286414247006}, {"id": 168, "seek": 73440, "start": 734.4, "end": 746.0799999999999, "text": " So we can use this third rule to turn E into E1, E2, where these are different Es.", "tokens": [50364, 407, 321, 393, 764, 341, 2636, 4978, 281, 1261, 462, 666, 462, 16, 11, 462, 17, 11, 689, 613, 366, 819, 2313, 13, 50948], "temperature": 0.0, "avg_logprob": -0.2654285430908203, "compression_ratio": 1.3529411764705883, "no_speech_prob": 0.014728398993611336}, {"id": 169, "seek": 73440, "start": 746.0799999999999, "end": 750.0799999999999, "text": " What's another step that we can take from this program?", "tokens": [50948, 708, 311, 1071, 1823, 300, 321, 393, 747, 490, 341, 1461, 30, 51148], "temperature": 0.0, "avg_logprob": -0.2654285430908203, "compression_ratio": 1.3529411764705883, "no_speech_prob": 0.014728398993611336}, {"id": 170, "seek": 73440, "start": 750.0799999999999, "end": 751.84, "text": " This is a partial program.", "tokens": [51148, 639, 307, 257, 14641, 1461, 13, 51236], "temperature": 0.0, "avg_logprob": -0.2654285430908203, "compression_ratio": 1.3529411764705883, "no_speech_prob": 0.014728398993611336}, {"id": 171, "seek": 73440, "start": 751.84, "end": 754.36, "text": " It's not complete.", "tokens": [51236, 467, 311, 406, 3566, 13, 51362], "temperature": 0.0, "avg_logprob": -0.2654285430908203, "compression_ratio": 1.3529411764705883, "no_speech_prob": 0.014728398993611336}, {"id": 172, "seek": 75436, "start": 754.36, "end": 755.36, "text": " What can we do to this one?", "tokens": [50364, 708, 393, 321, 360, 281, 341, 472, 30, 50414], "temperature": 0.0, "avg_logprob": -0.3117085018673459, "compression_ratio": 1.3566433566433567, "no_speech_prob": 0.008445368148386478}, {"id": 173, "seek": 75436, "start": 755.36, "end": 756.36, "text": " To E1, E2?", "tokens": [50414, 1407, 462, 16, 11, 462, 17, 30, 50464], "temperature": 0.0, "avg_logprob": -0.3117085018673459, "compression_ratio": 1.3566433566433567, "no_speech_prob": 0.008445368148386478}, {"id": 174, "seek": 75436, "start": 756.36, "end": 774.36, "text": " Yeah, so let's turn this...", "tokens": [50464, 865, 11, 370, 718, 311, 1261, 341, 485, 51364], "temperature": 0.0, "avg_logprob": -0.3117085018673459, "compression_ratio": 1.3566433566433567, "no_speech_prob": 0.008445368148386478}, {"id": 175, "seek": 75436, "start": 774.36, "end": 775.36, "text": " Either one.", "tokens": [51364, 13746, 472, 13, 51414], "temperature": 0.0, "avg_logprob": -0.3117085018673459, "compression_ratio": 1.3566433566433567, "no_speech_prob": 0.008445368148386478}, {"id": 176, "seek": 75436, "start": 775.36, "end": 776.36, "text": " Either one or both.", "tokens": [51414, 13746, 472, 420, 1293, 13, 51464], "temperature": 0.0, "avg_logprob": -0.3117085018673459, "compression_ratio": 1.3566433566433567, "no_speech_prob": 0.008445368148386478}, {"id": 177, "seek": 75436, "start": 776.36, "end": 777.6800000000001, "text": " We could turn into X.", "tokens": [51464, 492, 727, 1261, 666, 1783, 13, 51530], "temperature": 0.0, "avg_logprob": -0.3117085018673459, "compression_ratio": 1.3566433566433567, "no_speech_prob": 0.008445368148386478}, {"id": 178, "seek": 75436, "start": 777.6800000000001, "end": 784.2, "text": " So we could say that this E1 becomes an X, and then we still have our E2.", "tokens": [51530, 407, 321, 727, 584, 300, 341, 462, 16, 3643, 364, 1783, 11, 293, 550, 321, 920, 362, 527, 462, 17, 13, 51856], "temperature": 0.0, "avg_logprob": -0.3117085018673459, "compression_ratio": 1.3566433566433567, "no_speech_prob": 0.008445368148386478}, {"id": 179, "seek": 78420, "start": 785.0400000000001, "end": 789.96, "text": " So E1, by this production rule, we could turn E into X.", "tokens": [50406, 407, 462, 16, 11, 538, 341, 4265, 4978, 11, 321, 727, 1261, 462, 666, 1783, 13, 50652], "temperature": 0.0, "avg_logprob": -0.2686326083014993, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0038844626396894455}, {"id": 180, "seek": 78420, "start": 789.96, "end": 791.96, "text": " So we've turned E into X.", "tokens": [50652, 407, 321, 600, 3574, 462, 666, 1783, 13, 50752], "temperature": 0.0, "avg_logprob": -0.2686326083014993, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0038844626396894455}, {"id": 181, "seek": 78420, "start": 791.96, "end": 794.12, "text": " We've turned E1 into X specifically.", "tokens": [50752, 492, 600, 3574, 462, 16, 666, 1783, 4682, 13, 50860], "temperature": 0.0, "avg_logprob": -0.2686326083014993, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0038844626396894455}, {"id": 182, "seek": 78420, "start": 794.12, "end": 796.5600000000001, "text": " We still have E2.", "tokens": [50860, 492, 920, 362, 462, 17, 13, 50982], "temperature": 0.0, "avg_logprob": -0.2686326083014993, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0038844626396894455}, {"id": 183, "seek": 78420, "start": 796.5600000000001, "end": 802.0400000000001, "text": " What else can we do to continue simplifying or turning this into a real program?", "tokens": [50982, 708, 1646, 393, 321, 360, 281, 2354, 6883, 5489, 420, 6246, 341, 666, 257, 957, 1461, 30, 51256], "temperature": 0.0, "avg_logprob": -0.2686326083014993, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0038844626396894455}, {"id": 184, "seek": 80204, "start": 802.04, "end": 820.1999999999999, "text": " Yeah, so let's turn this E2, using the second rule, into lambdaX.E.", "tokens": [50364, 865, 11, 370, 718, 311, 1261, 341, 462, 17, 11, 1228, 264, 1150, 4978, 11, 666, 13607, 55, 13, 36, 13, 51272], "temperature": 0.0, "avg_logprob": -0.28681527651273286, "compression_ratio": 1.1538461538461537, "no_speech_prob": 0.0030278097838163376}, {"id": 185, "seek": 80204, "start": 820.1999999999999, "end": 826.1999999999999, "text": " So this would turn into X, lambdaX.E.", "tokens": [51272, 407, 341, 576, 1261, 666, 1783, 11, 13607, 55, 13, 36, 13, 51572], "temperature": 0.0, "avg_logprob": -0.28681527651273286, "compression_ratio": 1.1538461538461537, "no_speech_prob": 0.0030278097838163376}, {"id": 186, "seek": 82620, "start": 826.2, "end": 834.32, "text": " I'm putting parentheses just to keep that together, because this one E, E2, turned into", "tokens": [50364, 286, 478, 3372, 34153, 445, 281, 1066, 300, 1214, 11, 570, 341, 472, 462, 11, 462, 17, 11, 3574, 666, 50770], "temperature": 0.0, "avg_logprob": -0.2637141898826317, "compression_ratio": 1.3891891891891892, "no_speech_prob": 0.03461743891239166}, {"id": 187, "seek": 82620, "start": 834.32, "end": 839.0, "text": " lambdaX.E by our second production rule.", "tokens": [50770, 13607, 55, 13, 36, 538, 527, 1150, 4265, 4978, 13, 51004], "temperature": 0.0, "avg_logprob": -0.2637141898826317, "compression_ratio": 1.3891891891891892, "no_speech_prob": 0.03461743891239166}, {"id": 188, "seek": 82620, "start": 839.0, "end": 840.0, "text": " But it's still not done.", "tokens": [51004, 583, 309, 311, 920, 406, 1096, 13, 51054], "temperature": 0.0, "avg_logprob": -0.2637141898826317, "compression_ratio": 1.3891891891891892, "no_speech_prob": 0.03461743891239166}, {"id": 189, "seek": 82620, "start": 840.0, "end": 841.44, "text": " We have an E in here.", "tokens": [51054, 492, 362, 364, 462, 294, 510, 13, 51126], "temperature": 0.0, "avg_logprob": -0.2637141898826317, "compression_ratio": 1.3891891891891892, "no_speech_prob": 0.03461743891239166}, {"id": 190, "seek": 82620, "start": 841.44, "end": 842.44, "text": " What can we do?", "tokens": [51126, 708, 393, 321, 360, 30, 51176], "temperature": 0.0, "avg_logprob": -0.2637141898826317, "compression_ratio": 1.3891891891891892, "no_speech_prob": 0.03461743891239166}, {"id": 191, "seek": 82620, "start": 842.44, "end": 851.6400000000001, "text": " Yeah, sure, we could turn this E into an X, using the first rule.", "tokens": [51176, 865, 11, 988, 11, 321, 727, 1261, 341, 462, 666, 364, 1783, 11, 1228, 264, 700, 4978, 13, 51636], "temperature": 0.0, "avg_logprob": -0.2637141898826317, "compression_ratio": 1.3891891891891892, "no_speech_prob": 0.03461743891239166}, {"id": 192, "seek": 85164, "start": 851.64, "end": 858.68, "text": " And our final result here would be X, lambdaX.X.", "tokens": [50364, 400, 527, 2572, 1874, 510, 576, 312, 1783, 11, 13607, 55, 13, 55, 13, 50716], "temperature": 0.0, "avg_logprob": -0.21290665581112816, "compression_ratio": 1.484375, "no_speech_prob": 0.0030753544997423887}, {"id": 193, "seek": 85164, "start": 858.68, "end": 864.24, "text": " This is another valid program in lambda calculus.", "tokens": [50716, 639, 307, 1071, 7363, 1461, 294, 13607, 33400, 13, 50994], "temperature": 0.0, "avg_logprob": -0.21290665581112816, "compression_ratio": 1.484375, "no_speech_prob": 0.0030753544997423887}, {"id": 194, "seek": 85164, "start": 864.24, "end": 867.3199999999999, "text": " I don't know what it means or what it does.", "tokens": [50994, 286, 500, 380, 458, 437, 309, 1355, 420, 437, 309, 775, 13, 51148], "temperature": 0.0, "avg_logprob": -0.21290665581112816, "compression_ratio": 1.484375, "no_speech_prob": 0.0030753544997423887}, {"id": 195, "seek": 85164, "start": 867.3199999999999, "end": 870.1999999999999, "text": " Right now, we don't actually care.", "tokens": [51148, 1779, 586, 11, 321, 500, 380, 767, 1127, 13, 51292], "temperature": 0.0, "avg_logprob": -0.21290665581112816, "compression_ratio": 1.484375, "no_speech_prob": 0.0030753544997423887}, {"id": 196, "seek": 85164, "start": 870.1999999999999, "end": 875.24, "text": " But we know that it's valid, because we used the syntax, the grammar that we've been given,", "tokens": [51292, 583, 321, 458, 300, 309, 311, 7363, 11, 570, 321, 1143, 264, 28431, 11, 264, 22317, 300, 321, 600, 668, 2212, 11, 51544], "temperature": 0.0, "avg_logprob": -0.21290665581112816, "compression_ratio": 1.484375, "no_speech_prob": 0.0030753544997423887}, {"id": 197, "seek": 85164, "start": 875.24, "end": 881.56, "text": " to generate it.", "tokens": [51544, 281, 8460, 309, 13, 51860], "temperature": 0.0, "avg_logprob": -0.21290665581112816, "compression_ratio": 1.484375, "no_speech_prob": 0.0030753544997423887}, {"id": 198, "seek": 88156, "start": 881.56, "end": 886.16, "text": " We're gonna spend a little bit more time with the slides, like, diving into what's valid,", "tokens": [50364, 492, 434, 799, 3496, 257, 707, 857, 544, 565, 365, 264, 9788, 11, 411, 11, 20241, 666, 437, 311, 7363, 11, 50594], "temperature": 0.0, "avg_logprob": -0.23399627208709717, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.0026316402945667505}, {"id": 199, "seek": 88156, "start": 886.16, "end": 887.4799999999999, "text": " what's not valid.", "tokens": [50594, 437, 311, 406, 7363, 13, 50660], "temperature": 0.0, "avg_logprob": -0.23399627208709717, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.0026316402945667505}, {"id": 200, "seek": 88156, "start": 887.4799999999999, "end": 894.0, "text": " But these steps that we take here are the fundamental steps of developing a program", "tokens": [50660, 583, 613, 4439, 300, 321, 747, 510, 366, 264, 8088, 4439, 295, 6416, 257, 1461, 50986], "temperature": 0.0, "avg_logprob": -0.23399627208709717, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.0026316402945667505}, {"id": 201, "seek": 88156, "start": 894.0, "end": 895.7199999999999, "text": " from a grammar.", "tokens": [50986, 490, 257, 22317, 13, 51072], "temperature": 0.0, "avg_logprob": -0.23399627208709717, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.0026316402945667505}, {"id": 202, "seek": 88156, "start": 895.7199999999999, "end": 898.16, "text": " You do it with everything that you do.", "tokens": [51072, 509, 360, 309, 365, 1203, 300, 291, 360, 13, 51194], "temperature": 0.0, "avg_logprob": -0.23399627208709717, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.0026316402945667505}, {"id": 203, "seek": 88156, "start": 898.16, "end": 904.04, "text": " When you write code, JavaScript has a grammar that's way more complicated than this, but", "tokens": [51194, 1133, 291, 2464, 3089, 11, 15778, 575, 257, 22317, 300, 311, 636, 544, 6179, 813, 341, 11, 457, 51488], "temperature": 0.0, "avg_logprob": -0.23399627208709717, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.0026316402945667505}, {"id": 204, "seek": 88156, "start": 904.04, "end": 906.68, "text": " it fundamentally turns into something like that.", "tokens": [51488, 309, 17879, 4523, 666, 746, 411, 300, 13, 51620], "temperature": 0.0, "avg_logprob": -0.23399627208709717, "compression_ratio": 1.6271186440677967, "no_speech_prob": 0.0026316402945667505}, {"id": 205, "seek": 90668, "start": 907.0799999999999, "end": 912.7199999999999, "text": " English as well has a grammar where we start from expressions and build things out with", "tokens": [50384, 3669, 382, 731, 575, 257, 22317, 689, 321, 722, 490, 15277, 293, 1322, 721, 484, 365, 50666], "temperature": 0.0, "avg_logprob": -0.30977681103874655, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.02128680981695652}, {"id": 206, "seek": 90668, "start": 912.7199999999999, "end": 918.52, "text": " noun phrases and replace the noun in the noun phrase with this or that.", "tokens": [50666, 23307, 20312, 293, 7406, 264, 23307, 294, 264, 23307, 9535, 365, 341, 420, 300, 13, 50956], "temperature": 0.0, "avg_logprob": -0.30977681103874655, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.02128680981695652}, {"id": 207, "seek": 90668, "start": 918.52, "end": 923.28, "text": " So context-free grammars have applications everywhere.", "tokens": [50956, 407, 4319, 12, 10792, 17570, 685, 362, 5821, 5315, 13, 51194], "temperature": 0.0, "avg_logprob": -0.30977681103874655, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.02128680981695652}, {"id": 208, "seek": 90668, "start": 923.28, "end": 926.3599999999999, "text": " Here what we're using them for is to generate valid programs.", "tokens": [51194, 1692, 437, 321, 434, 1228, 552, 337, 307, 281, 8460, 7363, 4268, 13, 51348], "temperature": 0.0, "avg_logprob": -0.30977681103874655, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.02128680981695652}, {"id": 209, "seek": 90668, "start": 926.3599999999999, "end": 927.3599999999999, "text": " Yeah?", "tokens": [51348, 865, 30, 51398], "temperature": 0.0, "avg_logprob": -0.30977681103874655, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.02128680981695652}, {"id": 210, "seek": 92736, "start": 927.36, "end": 938.28, "text": " Yeah, so what's the deal with these 1, 2?", "tokens": [50364, 865, 11, 370, 437, 311, 264, 2028, 365, 613, 502, 11, 568, 30, 50910], "temperature": 0.0, "avg_logprob": -0.2880393108689641, "compression_ratio": 1.5125, "no_speech_prob": 0.010488301515579224}, {"id": 211, "seek": 92736, "start": 938.28, "end": 940.52, "text": " Why doesn't this one have one?", "tokens": [50910, 1545, 1177, 380, 341, 472, 362, 472, 30, 51022], "temperature": 0.0, "avg_logprob": -0.2880393108689641, "compression_ratio": 1.5125, "no_speech_prob": 0.010488301515579224}, {"id": 212, "seek": 92736, "start": 940.52, "end": 942.24, "text": " The numbers here are arbitrary.", "tokens": [51022, 440, 3547, 510, 366, 23211, 13, 51108], "temperature": 0.0, "avg_logprob": -0.2880393108689641, "compression_ratio": 1.5125, "no_speech_prob": 0.010488301515579224}, {"id": 213, "seek": 92736, "start": 942.24, "end": 943.92, "text": " We could give them any name we wanted.", "tokens": [51108, 492, 727, 976, 552, 604, 1315, 321, 1415, 13, 51192], "temperature": 0.0, "avg_logprob": -0.2880393108689641, "compression_ratio": 1.5125, "no_speech_prob": 0.010488301515579224}, {"id": 214, "seek": 92736, "start": 943.92, "end": 953.7, "text": " We could say that this is E1, and E1 turns into E2, E3, which turns into XE3, which turns", "tokens": [51192, 492, 727, 584, 300, 341, 307, 462, 16, 11, 293, 462, 16, 4523, 666, 462, 17, 11, 462, 18, 11, 597, 4523, 666, 1783, 36, 18, 11, 597, 4523, 51681], "temperature": 0.0, "avg_logprob": -0.2880393108689641, "compression_ratio": 1.5125, "no_speech_prob": 0.010488301515579224}, {"id": 215, "seek": 92736, "start": 953.7, "end": 956.32, "text": " into E4.", "tokens": [51681, 666, 462, 19, 13, 51812], "temperature": 0.0, "avg_logprob": -0.2880393108689641, "compression_ratio": 1.5125, "no_speech_prob": 0.010488301515579224}, {"id": 216, "seek": 95632, "start": 956.9200000000001, "end": 962.72, "text": " So each of these are their own expression, independent of the other expressions.", "tokens": [50394, 407, 1184, 295, 613, 366, 641, 1065, 6114, 11, 6695, 295, 264, 661, 15277, 13, 50684], "temperature": 0.0, "avg_logprob": -0.277522144547428, "compression_ratio": 1.6568047337278107, "no_speech_prob": 0.0002066294982796535}, {"id": 217, "seek": 95632, "start": 962.72, "end": 966.7600000000001, "text": " That's what the context-free part of context-free grammar means.", "tokens": [50684, 663, 311, 437, 264, 4319, 12, 10792, 644, 295, 4319, 12, 10792, 22317, 1355, 13, 50886], "temperature": 0.0, "avg_logprob": -0.277522144547428, "compression_ratio": 1.6568047337278107, "no_speech_prob": 0.0002066294982796535}, {"id": 218, "seek": 95632, "start": 966.7600000000001, "end": 967.7600000000001, "text": " Yeah?", "tokens": [50886, 865, 30, 50936], "temperature": 0.0, "avg_logprob": -0.277522144547428, "compression_ratio": 1.6568047337278107, "no_speech_prob": 0.0002066294982796535}, {"id": 219, "seek": 95632, "start": 967.7600000000001, "end": 975.2800000000001, "text": " Yeah, so what's the deal with this X?", "tokens": [50936, 865, 11, 370, 437, 311, 264, 2028, 365, 341, 1783, 30, 51312], "temperature": 0.0, "avg_logprob": -0.277522144547428, "compression_ratio": 1.6568047337278107, "no_speech_prob": 0.0002066294982796535}, {"id": 220, "seek": 95632, "start": 975.2800000000001, "end": 978.32, "text": " Or this X or this X, right?", "tokens": [51312, 1610, 341, 1783, 420, 341, 1783, 11, 558, 30, 51464], "temperature": 0.0, "avg_logprob": -0.277522144547428, "compression_ratio": 1.6568047337278107, "no_speech_prob": 0.0002066294982796535}, {"id": 221, "seek": 95632, "start": 978.32, "end": 979.5600000000001, "text": " Or even this X.", "tokens": [51464, 1610, 754, 341, 1783, 13, 51526], "temperature": 0.0, "avg_logprob": -0.277522144547428, "compression_ratio": 1.6568047337278107, "no_speech_prob": 0.0002066294982796535}, {"id": 222, "seek": 95632, "start": 979.5600000000001, "end": 983.0, "text": " So all of these are variables in our language.", "tokens": [51526, 407, 439, 295, 613, 366, 9102, 294, 527, 2856, 13, 51698], "temperature": 0.0, "avg_logprob": -0.277522144547428, "compression_ratio": 1.6568047337278107, "no_speech_prob": 0.0002066294982796535}, {"id": 223, "seek": 98300, "start": 983.0, "end": 988.84, "text": " They're just like in JavaScript when we say let X equal 3.", "tokens": [50364, 814, 434, 445, 411, 294, 15778, 562, 321, 584, 718, 1783, 2681, 805, 13, 50656], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 224, "seek": 98300, "start": 988.84, "end": 990.76, "text": " This X here.", "tokens": [50656, 639, 1783, 510, 13, 50752], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 225, "seek": 98300, "start": 990.76, "end": 993.64, "text": " They're the variables that are gonna capture some meaning.", "tokens": [50752, 814, 434, 264, 9102, 300, 366, 799, 7983, 512, 3620, 13, 50896], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 226, "seek": 98300, "start": 993.64, "end": 996.84, "text": " We can actually use whatever we want here.", "tokens": [50896, 492, 393, 767, 764, 2035, 321, 528, 510, 13, 51056], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 227, "seek": 98300, "start": 996.84, "end": 1001.4, "text": " So we could say this is actually the variable Y.", "tokens": [51056, 407, 321, 727, 584, 341, 307, 767, 264, 7006, 398, 13, 51284], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 228, "seek": 98300, "start": 1001.4, "end": 1002.48, "text": " You know, use a different name.", "tokens": [51284, 509, 458, 11, 764, 257, 819, 1315, 13, 51338], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 229, "seek": 98300, "start": 1002.48, "end": 1005.0, "text": " I've just put X to keep things simple.", "tokens": [51338, 286, 600, 445, 829, 1783, 281, 1066, 721, 2199, 13, 51464], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 230, "seek": 98300, "start": 1005.0, "end": 1006.84, "text": " We can name it whatever we want.", "tokens": [51464, 492, 393, 1315, 309, 2035, 321, 528, 13, 51556], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 231, "seek": 98300, "start": 1006.84, "end": 1009.4, "text": " Just don't name it E, because E is our expression.", "tokens": [51556, 1449, 500, 380, 1315, 309, 462, 11, 570, 462, 307, 527, 6114, 13, 51684], "temperature": 0.0, "avg_logprob": -0.2406529673823604, "compression_ratio": 1.6180257510729614, "no_speech_prob": 0.007232644595205784}, {"id": 232, "seek": 100940, "start": 1009.4, "end": 1016.6, "text": " I think for clarity, could you explain the difference between the X, which is a variable,", "tokens": [50364, 286, 519, 337, 16992, 11, 727, 291, 2903, 264, 2649, 1296, 264, 1783, 11, 597, 307, 257, 7006, 11, 50724], "temperature": 0.0, "avg_logprob": -0.3529615250844804, "compression_ratio": 1.5100671140939597, "no_speech_prob": 0.015424413606524467}, {"id": 233, "seek": 100940, "start": 1016.6, "end": 1019.8, "text": " and an expression, which is E, right?", "tokens": [50724, 293, 364, 6114, 11, 597, 307, 462, 11, 558, 30, 50884], "temperature": 0.0, "avg_logprob": -0.3529615250844804, "compression_ratio": 1.5100671140939597, "no_speech_prob": 0.015424413606524467}, {"id": 234, "seek": 100940, "start": 1019.8, "end": 1020.8, "text": " Right.", "tokens": [50884, 1779, 13, 50934], "temperature": 0.0, "avg_logprob": -0.3529615250844804, "compression_ratio": 1.5100671140939597, "no_speech_prob": 0.015424413606524467}, {"id": 235, "seek": 100940, "start": 1020.8, "end": 1029.72, "text": " So what's the difference between this and this?", "tokens": [50934, 407, 437, 311, 264, 2649, 1296, 341, 293, 341, 30, 51380], "temperature": 0.0, "avg_logprob": -0.3529615250844804, "compression_ratio": 1.5100671140939597, "no_speech_prob": 0.015424413606524467}, {"id": 236, "seek": 100940, "start": 1029.72, "end": 1037.6, "text": " The key difference, E has somewhere to go.", "tokens": [51380, 440, 2141, 2649, 11, 462, 575, 4079, 281, 352, 13, 51774], "temperature": 0.0, "avg_logprob": -0.3529615250844804, "compression_ratio": 1.5100671140939597, "no_speech_prob": 0.015424413606524467}, {"id": 237, "seek": 103760, "start": 1037.6, "end": 1039.36, "text": " It is non-terminal.", "tokens": [50364, 467, 307, 2107, 12, 7039, 2071, 13, 50452], "temperature": 0.0, "avg_logprob": -0.19675228159914734, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.034100133925676346}, {"id": 238, "seek": 103760, "start": 1039.36, "end": 1044.6, "text": " E can turn into one of these three things.", "tokens": [50452, 462, 393, 1261, 666, 472, 295, 613, 1045, 721, 13, 50714], "temperature": 0.0, "avg_logprob": -0.19675228159914734, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.034100133925676346}, {"id": 239, "seek": 103760, "start": 1044.6, "end": 1048.04, "text": " X is what's called a terminal.", "tokens": [50714, 1783, 307, 437, 311, 1219, 257, 14709, 13, 50886], "temperature": 0.0, "avg_logprob": -0.19675228159914734, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.034100133925676346}, {"id": 240, "seek": 103760, "start": 1048.04, "end": 1050.32, "text": " There's nowhere that X can go.", "tokens": [50886, 821, 311, 11159, 300, 1783, 393, 352, 13, 51000], "temperature": 0.0, "avg_logprob": -0.19675228159914734, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.034100133925676346}, {"id": 241, "seek": 103760, "start": 1050.32, "end": 1052.98, "text": " It can't turn into anything else.", "tokens": [51000, 467, 393, 380, 1261, 666, 1340, 1646, 13, 51133], "temperature": 0.0, "avg_logprob": -0.19675228159914734, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.034100133925676346}, {"id": 242, "seek": 103760, "start": 1052.98, "end": 1060.7199999999998, "text": " We don't have a rule that says X is equal to, I don't know, what would even make sense", "tokens": [51133, 492, 500, 380, 362, 257, 4978, 300, 1619, 1783, 307, 2681, 281, 11, 286, 500, 380, 458, 11, 437, 576, 754, 652, 2020, 51520], "temperature": 0.0, "avg_logprob": -0.19675228159914734, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.034100133925676346}, {"id": 243, "seek": 103760, "start": 1060.7199999999998, "end": 1061.7199999999998, "text": " here.", "tokens": [51520, 510, 13, 51570], "temperature": 0.0, "avg_logprob": -0.19675228159914734, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.034100133925676346}, {"id": 244, "seek": 103760, "start": 1061.7199999999998, "end": 1064.48, "text": " Let's say X is equal to 3.", "tokens": [51570, 961, 311, 584, 1783, 307, 2681, 281, 805, 13, 51708], "temperature": 0.0, "avg_logprob": -0.19675228159914734, "compression_ratio": 1.5885714285714285, "no_speech_prob": 0.034100133925676346}, {"id": 245, "seek": 106448, "start": 1064.48, "end": 1072.08, "text": " If we had a rule like this, that means when we're generating our program, we have to turn", "tokens": [50364, 759, 321, 632, 257, 4978, 411, 341, 11, 300, 1355, 562, 321, 434, 17746, 527, 1461, 11, 321, 362, 281, 1261, 50744], "temperature": 0.0, "avg_logprob": -0.2001820394437607, "compression_ratio": 1.4719101123595506, "no_speech_prob": 0.08509620279073715}, {"id": 246, "seek": 106448, "start": 1072.08, "end": 1078.52, "text": " these Xs into their corresponding value, in this case, 3.", "tokens": [50744, 613, 1783, 82, 666, 641, 11760, 2158, 11, 294, 341, 1389, 11, 805, 13, 51066], "temperature": 0.0, "avg_logprob": -0.2001820394437607, "compression_ratio": 1.4719101123595506, "no_speech_prob": 0.08509620279073715}, {"id": 247, "seek": 106448, "start": 1078.52, "end": 1087.2, "text": " Because we don't have a production rule with X in it, X is a terminal value, and that's", "tokens": [51066, 1436, 321, 500, 380, 362, 257, 4265, 4978, 365, 1783, 294, 309, 11, 1783, 307, 257, 14709, 2158, 11, 293, 300, 311, 51500], "temperature": 0.0, "avg_logprob": -0.2001820394437607, "compression_ratio": 1.4719101123595506, "no_speech_prob": 0.08509620279073715}, {"id": 248, "seek": 106448, "start": 1087.2, "end": 1088.2, "text": " just part of our language.", "tokens": [51500, 445, 644, 295, 527, 2856, 13, 51550], "temperature": 0.0, "avg_logprob": -0.2001820394437607, "compression_ratio": 1.4719101123595506, "no_speech_prob": 0.08509620279073715}, {"id": 249, "seek": 108820, "start": 1088.2, "end": 1094.64, "text": " It's a feature of our language.", "tokens": [50364, 467, 311, 257, 4111, 295, 527, 2856, 13, 50686], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 250, "seek": 108820, "start": 1094.64, "end": 1097.16, "text": " So this is the syntax.", "tokens": [50686, 407, 341, 307, 264, 28431, 13, 50812], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 251, "seek": 108820, "start": 1097.16, "end": 1098.16, "text": " It's the grammar.", "tokens": [50812, 467, 311, 264, 22317, 13, 50862], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 252, "seek": 108820, "start": 1098.16, "end": 1099.16, "text": " Do you have another question?", "tokens": [50862, 1144, 291, 362, 1071, 1168, 30, 50912], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 253, "seek": 108820, "start": 1099.16, "end": 1100.16, "text": " Yeah.", "tokens": [50912, 865, 13, 50962], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 254, "seek": 108820, "start": 1100.16, "end": 1103.16, "text": " Again, could you also just explain what lambda is?", "tokens": [50962, 3764, 11, 727, 291, 611, 445, 2903, 437, 13607, 307, 30, 51112], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 255, "seek": 108820, "start": 1103.16, "end": 1105.6000000000001, "text": " Ah, yeah, sure.", "tokens": [51112, 2438, 11, 1338, 11, 988, 13, 51234], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 256, "seek": 108820, "start": 1105.6000000000001, "end": 1107.4, "text": " What is lambda?", "tokens": [51234, 708, 307, 13607, 30, 51324], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 257, "seek": 108820, "start": 1107.4, "end": 1108.8, "text": " What is dot?", "tokens": [51324, 708, 307, 5893, 30, 51394], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 258, "seek": 108820, "start": 1108.8, "end": 1110.16, "text": " What do these things mean?", "tokens": [51394, 708, 360, 613, 721, 914, 30, 51462], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 259, "seek": 108820, "start": 1110.16, "end": 1111.72, "text": " At this point, it doesn't matter.", "tokens": [51462, 1711, 341, 935, 11, 309, 1177, 380, 1871, 13, 51540], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 260, "seek": 108820, "start": 1111.72, "end": 1114.8400000000001, "text": " We're talking not about meaning.", "tokens": [51540, 492, 434, 1417, 406, 466, 3620, 13, 51696], "temperature": 0.0, "avg_logprob": -0.30950145721435546, "compression_ratio": 1.4536585365853658, "no_speech_prob": 0.05834350362420082}, {"id": 261, "seek": 111484, "start": 1114.84, "end": 1119.08, "text": " We're just talking about what is valid and what's not valid.", "tokens": [50364, 492, 434, 445, 1417, 466, 437, 307, 7363, 293, 437, 311, 406, 7363, 13, 50576], "temperature": 0.0, "avg_logprob": -0.24699065996252972, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.01912355236709118}, {"id": 262, "seek": 111484, "start": 1119.08, "end": 1121.8799999999999, "text": " What programs can exist?", "tokens": [50576, 708, 4268, 393, 2514, 30, 50716], "temperature": 0.0, "avg_logprob": -0.24699065996252972, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.01912355236709118}, {"id": 263, "seek": 111484, "start": 1121.8799999999999, "end": 1125.76, "text": " The meaning is something that we're going to dive into of, like, what does each of these", "tokens": [50716, 440, 3620, 307, 746, 300, 321, 434, 516, 281, 9192, 666, 295, 11, 411, 11, 437, 775, 1184, 295, 613, 50910], "temperature": 0.0, "avg_logprob": -0.24699065996252972, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.01912355236709118}, {"id": 264, "seek": 111484, "start": 1125.76, "end": 1127.72, "text": " characters represent?", "tokens": [50910, 4342, 2906, 30, 51008], "temperature": 0.0, "avg_logprob": -0.24699065996252972, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.01912355236709118}, {"id": 265, "seek": 111484, "start": 1127.72, "end": 1129.8799999999999, "text": " But that's semantics.", "tokens": [51008, 583, 300, 311, 4361, 45298, 13, 51116], "temperature": 0.0, "avg_logprob": -0.24699065996252972, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.01912355236709118}, {"id": 266, "seek": 111484, "start": 1129.8799999999999, "end": 1134.4399999999998, "text": " This is syntax.", "tokens": [51116, 639, 307, 28431, 13, 51344], "temperature": 0.0, "avg_logprob": -0.24699065996252972, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.01912355236709118}, {"id": 267, "seek": 111484, "start": 1134.4399999999998, "end": 1138.1999999999998, "text": " And I want those two to be pretty separate in your mind.", "tokens": [51344, 400, 286, 528, 729, 732, 281, 312, 1238, 4994, 294, 428, 1575, 13, 51532], "temperature": 0.0, "avg_logprob": -0.24699065996252972, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.01912355236709118}, {"id": 268, "seek": 111484, "start": 1138.1999999999998, "end": 1141.62, "text": " What is a valid thing in lambda calculus?", "tokens": [51532, 708, 307, 257, 7363, 551, 294, 13607, 33400, 30, 51703], "temperature": 0.0, "avg_logprob": -0.24699065996252972, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.01912355236709118}, {"id": 269, "seek": 114162, "start": 1141.62, "end": 1151.06, "text": " And then once I know that it's valid, what does that valid thing mean?", "tokens": [50364, 400, 550, 1564, 286, 458, 300, 309, 311, 7363, 11, 437, 775, 300, 7363, 551, 914, 30, 50836], "temperature": 0.0, "avg_logprob": -0.2619173210787486, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.007937895134091377}, {"id": 270, "seek": 114162, "start": 1151.06, "end": 1157.9799999999998, "text": " The one thing that I've put in here that's not actually in our grammar is these parentheses.", "tokens": [50836, 440, 472, 551, 300, 286, 600, 829, 294, 510, 300, 311, 406, 767, 294, 527, 22317, 307, 613, 34153, 13, 51182], "temperature": 0.0, "avg_logprob": -0.2619173210787486, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.007937895134091377}, {"id": 271, "seek": 114162, "start": 1157.9799999999998, "end": 1162.1799999999998, "text": " Parentheses help us just to associate things together, just like we would do in math, where", "tokens": [51182, 430, 20616, 23639, 854, 505, 445, 281, 14644, 721, 1214, 11, 445, 411, 321, 576, 360, 294, 5221, 11, 689, 51392], "temperature": 0.0, "avg_logprob": -0.2619173210787486, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.007937895134091377}, {"id": 272, "seek": 114162, "start": 1162.1799999999998, "end": 1167.4599999999998, "text": " you say, like, multiply these two things first, then do the division.", "tokens": [51392, 291, 584, 11, 411, 11, 12972, 613, 732, 721, 700, 11, 550, 360, 264, 10044, 13, 51656], "temperature": 0.0, "avg_logprob": -0.2619173210787486, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.007937895134091377}, {"id": 273, "seek": 116746, "start": 1167.46, "end": 1174.1000000000001, "text": " So any time we turn E into one of these three, we're effectively putting parentheses around", "tokens": [50364, 407, 604, 565, 321, 1261, 462, 666, 472, 295, 613, 1045, 11, 321, 434, 8659, 3372, 34153, 926, 50696], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 274, "seek": 116746, "start": 1174.1000000000001, "end": 1175.1000000000001, "text": " it.", "tokens": [50696, 309, 13, 50746], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 275, "seek": 116746, "start": 1175.1000000000001, "end": 1181.06, "text": " And we could, if we wanted, put parentheses around each of those production rules.", "tokens": [50746, 400, 321, 727, 11, 498, 321, 1415, 11, 829, 34153, 926, 1184, 295, 729, 4265, 4474, 13, 51044], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 276, "seek": 116746, "start": 1181.06, "end": 1182.06, "text": " Yeah?", "tokens": [51044, 865, 30, 51094], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 277, "seek": 116746, "start": 1182.06, "end": 1190.9, "text": " Shouldn't it just start by, like, readability, which is, like, names, and stuff like that?", "tokens": [51094, 34170, 380, 309, 445, 722, 538, 11, 411, 11, 1401, 2310, 11, 597, 307, 11, 411, 11, 5288, 11, 293, 1507, 411, 300, 30, 51536], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 278, "seek": 116746, "start": 1190.9, "end": 1191.9, "text": " Well, so...", "tokens": [51536, 1042, 11, 370, 485, 51586], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 279, "seek": 116746, "start": 1191.9, "end": 1192.9, "text": " Do they actually change the...?", "tokens": [51586, 1144, 436, 767, 1319, 264, 8964, 51636], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 280, "seek": 116746, "start": 1192.9, "end": 1193.9, "text": " Right.", "tokens": [51636, 1779, 13, 51686], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 281, "seek": 116746, "start": 1193.9, "end": 1194.9, "text": " Yes and no.", "tokens": [51686, 1079, 293, 572, 13, 51736], "temperature": 0.0, "avg_logprob": -0.4319772431344697, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.12420497834682465}, {"id": 282, "seek": 119490, "start": 1195.22, "end": 1198.02, "text": " And this, our equivalent...", "tokens": [50380, 400, 341, 11, 527, 10344, 485, 50520], "temperature": 0.0, "avg_logprob": -0.3941263566937363, "compression_ratio": 1.330827067669173, "no_speech_prob": 0.102296844124794}, {"id": 283, "seek": 119490, "start": 1198.02, "end": 1200.18, "text": " In this case, it is just readability.", "tokens": [50520, 682, 341, 1389, 11, 309, 307, 445, 1401, 2310, 13, 50628], "temperature": 0.0, "avg_logprob": -0.3941263566937363, "compression_ratio": 1.330827067669173, "no_speech_prob": 0.102296844124794}, {"id": 284, "seek": 119490, "start": 1200.18, "end": 1203.1000000000001, "text": " At some points, parentheses will matter.", "tokens": [50628, 1711, 512, 2793, 11, 34153, 486, 1871, 13, 50774], "temperature": 0.0, "avg_logprob": -0.3941263566937363, "compression_ratio": 1.330827067669173, "no_speech_prob": 0.102296844124794}, {"id": 285, "seek": 119490, "start": 1203.1000000000001, "end": 1208.22, "text": " So having them helps from the start.", "tokens": [50774, 407, 1419, 552, 3665, 490, 264, 722, 13, 51030], "temperature": 0.0, "avg_logprob": -0.3941263566937363, "compression_ratio": 1.330827067669173, "no_speech_prob": 0.102296844124794}, {"id": 286, "seek": 119490, "start": 1208.22, "end": 1210.94, "text": " But they will matter.", "tokens": [51030, 583, 436, 486, 1871, 13, 51166], "temperature": 0.0, "avg_logprob": -0.3941263566937363, "compression_ratio": 1.330827067669173, "no_speech_prob": 0.102296844124794}, {"id": 287, "seek": 119490, "start": 1210.94, "end": 1213.5, "text": " Yeah.", "tokens": [51166, 865, 13, 51294], "temperature": 0.0, "avg_logprob": -0.3941263566937363, "compression_ratio": 1.330827067669173, "no_speech_prob": 0.102296844124794}, {"id": 288, "seek": 119490, "start": 1213.5, "end": 1216.14, "text": " Okay.", "tokens": [51294, 1033, 13, 51426], "temperature": 0.0, "avg_logprob": -0.3941263566937363, "compression_ratio": 1.330827067669173, "no_speech_prob": 0.102296844124794}, {"id": 289, "seek": 121614, "start": 1216.14, "end": 1225.5, "text": " Any other questions on syntax here?", "tokens": [50364, 2639, 661, 1651, 322, 28431, 510, 30, 50832], "temperature": 0.0, "avg_logprob": -0.2338953127806214, "compression_ratio": 1.4183673469387754, "no_speech_prob": 0.022976115345954895}, {"id": 290, "seek": 121614, "start": 1225.5, "end": 1231.6200000000001, "text": " If this is the first time you've seen context-free grammars, I recognize it's tricky.", "tokens": [50832, 759, 341, 307, 264, 700, 565, 291, 600, 1612, 4319, 12, 10792, 17570, 685, 11, 286, 5521, 309, 311, 12414, 13, 51138], "temperature": 0.0, "avg_logprob": -0.2338953127806214, "compression_ratio": 1.4183673469387754, "no_speech_prob": 0.022976115345954895}, {"id": 291, "seek": 121614, "start": 1231.6200000000001, "end": 1232.6200000000001, "text": " They're different.", "tokens": [51138, 814, 434, 819, 13, 51188], "temperature": 0.0, "avg_logprob": -0.2338953127806214, "compression_ratio": 1.4183673469387754, "no_speech_prob": 0.022976115345954895}, {"id": 292, "seek": 121614, "start": 1232.6200000000001, "end": 1235.7, "text": " And it's a new way of expressing language.", "tokens": [51188, 400, 309, 311, 257, 777, 636, 295, 22171, 2856, 13, 51342], "temperature": 0.0, "avg_logprob": -0.2338953127806214, "compression_ratio": 1.4183673469387754, "no_speech_prob": 0.022976115345954895}, {"id": 293, "seek": 121614, "start": 1235.7, "end": 1238.5800000000002, "text": " Read the chapter that I uploaded to Piazza.", "tokens": [51342, 17604, 264, 7187, 300, 286, 17135, 281, 430, 654, 26786, 13, 51486], "temperature": 0.0, "avg_logprob": -0.2338953127806214, "compression_ratio": 1.4183673469387754, "no_speech_prob": 0.022976115345954895}, {"id": 294, "seek": 121614, "start": 1238.5800000000002, "end": 1239.7800000000002, "text": " It's ten pages.", "tokens": [51486, 467, 311, 2064, 7183, 13, 51546], "temperature": 0.0, "avg_logprob": -0.2338953127806214, "compression_ratio": 1.4183673469387754, "no_speech_prob": 0.022976115345954895}, {"id": 295, "seek": 121614, "start": 1239.7800000000002, "end": 1240.7800000000002, "text": " It's not...", "tokens": [51546, 467, 311, 406, 485, 51596], "temperature": 0.0, "avg_logprob": -0.2338953127806214, "compression_ratio": 1.4183673469387754, "no_speech_prob": 0.022976115345954895}, {"id": 296, "seek": 121614, "start": 1240.7800000000002, "end": 1242.7800000000002, "text": " And it's a small book.", "tokens": [51596, 400, 309, 311, 257, 1359, 1446, 13, 51696], "temperature": 0.0, "avg_logprob": -0.2338953127806214, "compression_ratio": 1.4183673469387754, "no_speech_prob": 0.022976115345954895}, {"id": 297, "seek": 124278, "start": 1242.78, "end": 1246.58, "text": " So it will probably take 15, 20 minutes tops.", "tokens": [50364, 407, 309, 486, 1391, 747, 2119, 11, 945, 2077, 22836, 13, 50554], "temperature": 0.0, "avg_logprob": -0.4780768933503524, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.1943565160036087}, {"id": 298, "seek": 124278, "start": 1246.58, "end": 1248.58, "text": " And it will hopefully clarify some of this.", "tokens": [50554, 400, 309, 486, 4696, 17594, 512, 295, 341, 13, 50654], "temperature": 0.0, "avg_logprob": -0.4780768933503524, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.1943565160036087}, {"id": 299, "seek": 124278, "start": 1248.58, "end": 1249.58, "text": " Yeah?", "tokens": [50654, 865, 30, 50704], "temperature": 0.0, "avg_logprob": -0.4780768933503524, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.1943565160036087}, {"id": 300, "seek": 124278, "start": 1249.58, "end": 1260.58, "text": " Does the X in front of the root get the statement that's kind of part of the head, or is the", "tokens": [50704, 4402, 264, 1783, 294, 1868, 295, 264, 5593, 483, 264, 5629, 300, 311, 733, 295, 644, 295, 264, 1378, 11, 420, 307, 264, 51254], "temperature": 0.0, "avg_logprob": -0.4780768933503524, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.1943565160036087}, {"id": 301, "seek": 124278, "start": 1260.58, "end": 1261.58, "text": " head just the lambda X?", "tokens": [51254, 1378, 445, 264, 13607, 1783, 30, 51304], "temperature": 0.0, "avg_logprob": -0.4780768933503524, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.1943565160036087}, {"id": 302, "seek": 124278, "start": 1261.58, "end": 1262.58, "text": " The head.", "tokens": [51304, 440, 1378, 13, 51354], "temperature": 0.0, "avg_logprob": -0.4780768933503524, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.1943565160036087}, {"id": 303, "seek": 124278, "start": 1262.58, "end": 1263.58, "text": " I guess, I don't know.", "tokens": [51354, 286, 2041, 11, 286, 500, 380, 458, 13, 51404], "temperature": 0.0, "avg_logprob": -0.4780768933503524, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.1943565160036087}, {"id": 304, "seek": 124278, "start": 1263.58, "end": 1264.58, "text": " I'm just trying to figure out the format of it.", "tokens": [51404, 286, 478, 445, 1382, 281, 2573, 484, 264, 7877, 295, 309, 13, 51454], "temperature": 0.0, "avg_logprob": -0.4780768933503524, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.1943565160036087}, {"id": 305, "seek": 126458, "start": 1264.58, "end": 1271.58, "text": " I'm trying to figure out the format of it so I can read something that says that the", "tokens": [50364, 286, 478, 1382, 281, 2573, 484, 264, 283, 687, 267, 295, 309, 370, 286, 393, 1401, 746, 300, 1619, 300, 264, 50714], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 306, "seek": 126458, "start": 1271.58, "end": 1272.58, "text": " head is the lambda...", "tokens": [50714, 1378, 307, 264, 13607, 485, 50764], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 307, "seek": 126458, "start": 1272.58, "end": 1273.58, "text": " Oh!", "tokens": [50764, 876, 0, 50814], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 308, "seek": 126458, "start": 1273.58, "end": 1274.58, "text": " In lambda calculus, you mean.", "tokens": [50814, 682, 13607, 33400, 11, 291, 914, 13, 50864], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 309, "seek": 126458, "start": 1274.58, "end": 1275.58, "text": " Yeah, yeah, yeah.", "tokens": [50864, 865, 11, 1338, 11, 1338, 13, 50914], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 310, "seek": 126458, "start": 1275.58, "end": 1277.1399999999999, "text": " So there's...", "tokens": [50914, 407, 456, 311, 485, 50992], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 311, "seek": 126458, "start": 1277.1399999999999, "end": 1278.8799999999999, "text": " This is its own expression.", "tokens": [50992, 639, 307, 1080, 1065, 6114, 13, 51079], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 312, "seek": 126458, "start": 1278.8799999999999, "end": 1279.8799999999999, "text": " This X.", "tokens": [51079, 639, 1783, 13, 51129], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 313, "seek": 126458, "start": 1279.8799999999999, "end": 1282.1399999999999, "text": " You're asking about this piece, right?", "tokens": [51129, 509, 434, 3365, 466, 341, 2522, 11, 558, 30, 51242], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 314, "seek": 126458, "start": 1282.1399999999999, "end": 1283.1399999999999, "text": " Yeah.", "tokens": [51242, 865, 13, 51292], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 315, "seek": 126458, "start": 1283.1399999999999, "end": 1290.26, "text": " So this piece here, this lambda X dot, which corresponds to this piece here, that's what", "tokens": [51292, 407, 341, 2522, 510, 11, 341, 13607, 1783, 5893, 11, 597, 23249, 281, 341, 2522, 510, 11, 300, 311, 437, 51648], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 316, "seek": 126458, "start": 1290.26, "end": 1292.98, "text": " we're going to dive into with semantics.", "tokens": [51648, 321, 434, 516, 281, 9192, 666, 365, 4361, 45298, 13, 51784], "temperature": 0.0, "avg_logprob": -0.421212062362797, "compression_ratio": 1.6508620689655173, "no_speech_prob": 0.011868879199028015}, {"id": 317, "seek": 129298, "start": 1292.98, "end": 1294.98, "text": " Yeah.", "tokens": [50364, 865, 13, 50464], "temperature": 0.0, "avg_logprob": -0.3725509996767397, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.008315697312355042}, {"id": 318, "seek": 129298, "start": 1294.98, "end": 1296.98, "text": " Okay.", "tokens": [50464, 1033, 13, 50564], "temperature": 0.0, "avg_logprob": -0.3725509996767397, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.008315697312355042}, {"id": 319, "seek": 129298, "start": 1296.98, "end": 1307.6200000000001, "text": " So let's start talking about semantics.", "tokens": [50564, 407, 718, 311, 722, 1417, 466, 4361, 45298, 13, 51096], "temperature": 0.0, "avg_logprob": -0.3725509996767397, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.008315697312355042}, {"id": 320, "seek": 129298, "start": 1307.6200000000001, "end": 1310.14, "text": " Because that's what you guys keep asking about.", "tokens": [51096, 1436, 300, 311, 437, 291, 1074, 1066, 3365, 466, 13, 51222], "temperature": 0.0, "avg_logprob": -0.3725509996767397, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.008315697312355042}, {"id": 321, "seek": 129298, "start": 1310.14, "end": 1311.14, "text": " Which is fair.", "tokens": [51222, 3013, 307, 3143, 13, 51272], "temperature": 0.0, "avg_logprob": -0.3725509996767397, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.008315697312355042}, {"id": 322, "seek": 129298, "start": 1311.14, "end": 1316.98, "text": " Because that's what the language actually is.", "tokens": [51272, 1436, 300, 311, 437, 264, 2856, 767, 307, 13, 51564], "temperature": 0.0, "avg_logprob": -0.3725509996767397, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.008315697312355042}, {"id": 323, "seek": 129298, "start": 1316.98, "end": 1321.02, "text": " Okay.", "tokens": [51564, 1033, 13, 51766], "temperature": 0.0, "avg_logprob": -0.3725509996767397, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.008315697312355042}, {"id": 324, "seek": 132102, "start": 1321.02, "end": 1323.7, "text": " So we've seen this grammar.", "tokens": [50364, 407, 321, 600, 1612, 341, 22317, 13, 50498], "temperature": 0.0, "avg_logprob": -0.20383145110775727, "compression_ratio": 1.5970873786407767, "no_speech_prob": 0.02887008525431156}, {"id": 325, "seek": 132102, "start": 1323.7, "end": 1326.1, "text": " That's what I just had up on the board.", "tokens": [50498, 663, 311, 437, 286, 445, 632, 493, 322, 264, 3150, 13, 50618], "temperature": 0.0, "avg_logprob": -0.20383145110775727, "compression_ratio": 1.5970873786407767, "no_speech_prob": 0.02887008525431156}, {"id": 326, "seek": 132102, "start": 1326.1, "end": 1331.26, "text": " E can turn into a variable, which we could call X, Y, Z, whatever we wanted.", "tokens": [50618, 462, 393, 1261, 666, 257, 7006, 11, 597, 321, 727, 818, 1783, 11, 398, 11, 1176, 11, 2035, 321, 1415, 13, 50876], "temperature": 0.0, "avg_logprob": -0.20383145110775727, "compression_ratio": 1.5970873786407767, "no_speech_prob": 0.02887008525431156}, {"id": 327, "seek": 132102, "start": 1331.26, "end": 1337.4, "text": " It can turn into a function that takes a parameter named X and returns an expression E. Or it", "tokens": [50876, 467, 393, 1261, 666, 257, 2445, 300, 2516, 257, 13075, 4926, 1783, 293, 11247, 364, 6114, 462, 13, 1610, 309, 51183], "temperature": 0.0, "avg_logprob": -0.20383145110775727, "compression_ratio": 1.5970873786407767, "no_speech_prob": 0.02887008525431156}, {"id": 328, "seek": 132102, "start": 1337.4, "end": 1343.02, "text": " can turn into a function application of E1 onto E2.", "tokens": [51183, 393, 1261, 666, 257, 2445, 3861, 295, 462, 16, 3911, 462, 17, 13, 51464], "temperature": 0.0, "avg_logprob": -0.20383145110775727, "compression_ratio": 1.5970873786407767, "no_speech_prob": 0.02887008525431156}, {"id": 329, "seek": 132102, "start": 1343.02, "end": 1347.1399999999999, "text": " So we have variables, such as X, Y, Z.", "tokens": [51464, 407, 321, 362, 9102, 11, 1270, 382, 1783, 11, 398, 11, 1176, 13, 51670], "temperature": 0.0, "avg_logprob": -0.20383145110775727, "compression_ratio": 1.5970873786407767, "no_speech_prob": 0.02887008525431156}, {"id": 330, "seek": 134714, "start": 1347.22, "end": 1352.14, "text": " We have functions, or lambda abstractions is another way of saying that.", "tokens": [50368, 492, 362, 6828, 11, 420, 13607, 12649, 626, 307, 1071, 636, 295, 1566, 300, 13, 50614], "temperature": 0.0, "avg_logprob": -0.21748864915635852, "compression_ratio": 1.5291479820627802, "no_speech_prob": 0.018832849338650703}, {"id": 331, "seek": 134714, "start": 1352.14, "end": 1356.3400000000001, "text": " I'm going to dive into that part next.", "tokens": [50614, 286, 478, 516, 281, 9192, 666, 300, 644, 958, 13, 50824], "temperature": 0.0, "avg_logprob": -0.21748864915635852, "compression_ratio": 1.5291479820627802, "no_speech_prob": 0.018832849338650703}, {"id": 332, "seek": 134714, "start": 1356.3400000000001, "end": 1364.22, "text": " But the way to, like, just very straightforwardly think of it is lambda X dot E is equivalent", "tokens": [50824, 583, 264, 636, 281, 11, 411, 11, 445, 588, 15325, 356, 519, 295, 309, 307, 13607, 1783, 5893, 462, 307, 10344, 51218], "temperature": 0.0, "avg_logprob": -0.21748864915635852, "compression_ratio": 1.5291479820627802, "no_speech_prob": 0.018832849338650703}, {"id": 333, "seek": 134714, "start": 1364.22, "end": 1368.5, "text": " to X arrow E in JavaScript.", "tokens": [51218, 281, 1783, 11610, 462, 294, 15778, 13, 51432], "temperature": 0.0, "avg_logprob": -0.21748864915635852, "compression_ratio": 1.5291479820627802, "no_speech_prob": 0.018832849338650703}, {"id": 334, "seek": 134714, "start": 1368.5, "end": 1372.0600000000002, "text": " We've just started working with arrow syntax.", "tokens": [51432, 492, 600, 445, 1409, 1364, 365, 11610, 28431, 13, 51610], "temperature": 0.0, "avg_logprob": -0.21748864915635852, "compression_ratio": 1.5291479820627802, "no_speech_prob": 0.018832849338650703}, {"id": 335, "seek": 134714, "start": 1372.0600000000002, "end": 1376.42, "text": " But if you're getting more familiar with it, that might help.", "tokens": [51610, 583, 498, 291, 434, 1242, 544, 4963, 365, 309, 11, 300, 1062, 854, 13, 51828], "temperature": 0.0, "avg_logprob": -0.21748864915635852, "compression_ratio": 1.5291479820627802, "no_speech_prob": 0.018832849338650703}, {"id": 336, "seek": 137642, "start": 1376.42, "end": 1380.3000000000002, "text": " And then the last thing that we have is function application.", "tokens": [50364, 400, 550, 264, 1036, 551, 300, 321, 362, 307, 2445, 3861, 13, 50558], "temperature": 0.0, "avg_logprob": -0.2835964695099861, "compression_ratio": 1.4216867469879517, "no_speech_prob": 0.0015730950981378555}, {"id": 337, "seek": 137642, "start": 1380.3000000000002, "end": 1387.18, "text": " Which in JavaScript looks like E1 is the function, where E2 is the argument.", "tokens": [50558, 3013, 294, 15778, 1542, 411, 462, 16, 307, 264, 2445, 11, 689, 462, 17, 307, 264, 6770, 13, 50902], "temperature": 0.0, "avg_logprob": -0.2835964695099861, "compression_ratio": 1.4216867469879517, "no_speech_prob": 0.0015730950981378555}, {"id": 338, "seek": 137642, "start": 1387.18, "end": 1392.42, "text": " So these are the JavaScript conversion rules.", "tokens": [50902, 407, 613, 366, 264, 15778, 14298, 4474, 13, 51164], "temperature": 0.0, "avg_logprob": -0.2835964695099861, "compression_ratio": 1.4216867469879517, "no_speech_prob": 0.0015730950981378555}, {"id": 339, "seek": 137642, "start": 1392.42, "end": 1397.38, "text": " Okay.", "tokens": [51164, 1033, 13, 51412], "temperature": 0.0, "avg_logprob": -0.2835964695099861, "compression_ratio": 1.4216867469879517, "no_speech_prob": 0.0015730950981378555}, {"id": 340, "seek": 137642, "start": 1397.38, "end": 1400.92, "text": " We're sticking with syntax just for a second.", "tokens": [51412, 492, 434, 13465, 365, 28431, 445, 337, 257, 1150, 13, 51589], "temperature": 0.0, "avg_logprob": -0.2835964695099861, "compression_ratio": 1.4216867469879517, "no_speech_prob": 0.0015730950981378555}, {"id": 341, "seek": 140092, "start": 1400.92, "end": 1408.48, "text": " One term that we might have is something like lambda X dot 2 plus X.", "tokens": [50364, 1485, 1433, 300, 321, 1062, 362, 307, 746, 411, 13607, 1783, 5893, 568, 1804, 1783, 13, 50742], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 342, "seek": 140092, "start": 1408.48, "end": 1410.8400000000001, "text": " And immediately you might say, hey, wait.", "tokens": [50742, 400, 4258, 291, 1062, 584, 11, 4177, 11, 1699, 13, 50860], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 343, "seek": 140092, "start": 1410.8400000000001, "end": 1412.0, "text": " You've lied to me.", "tokens": [50860, 509, 600, 20101, 281, 385, 13, 50918], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 344, "seek": 140092, "start": 1412.0, "end": 1413.0, "text": " What is 2?", "tokens": [50918, 708, 307, 568, 30, 50968], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 345, "seek": 140092, "start": 1413.0, "end": 1414.22, "text": " What is plus?", "tokens": [50968, 708, 307, 1804, 30, 51029], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 346, "seek": 140092, "start": 1414.22, "end": 1415.8400000000001, "text": " We don't have those things in our language.", "tokens": [51029, 492, 500, 380, 362, 729, 721, 294, 527, 2856, 13, 51110], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 347, "seek": 140092, "start": 1415.8400000000001, "end": 1419.28, "text": " We only have X, lambda X, E1, E2.", "tokens": [51110, 492, 787, 362, 1783, 11, 13607, 1783, 11, 462, 16, 11, 462, 17, 13, 51282], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 348, "seek": 140092, "start": 1419.28, "end": 1420.46, "text": " And that's fair.", "tokens": [51282, 400, 300, 311, 3143, 13, 51341], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 349, "seek": 140092, "start": 1420.46, "end": 1428.22, "text": " But you can't actually represent numbers and addition with these terms alone.", "tokens": [51341, 583, 291, 393, 380, 767, 2906, 3547, 293, 4500, 365, 613, 2115, 3312, 13, 51729], "temperature": 0.0, "avg_logprob": -0.20118980037355885, "compression_ratio": 1.5069124423963134, "no_speech_prob": 0.10818246752023697}, {"id": 350, "seek": 142822, "start": 1428.22, "end": 1430.98, "text": " We will do that at the end of next lecture, I believe.", "tokens": [50364, 492, 486, 360, 300, 412, 264, 917, 295, 958, 7991, 11, 286, 1697, 13, 50502], "temperature": 0.0, "avg_logprob": -0.20273785909016928, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.04742460325360298}, {"id": 351, "seek": 142822, "start": 1430.98, "end": 1432.3, "text": " So for now, just bear with me.", "tokens": [50502, 407, 337, 586, 11, 445, 6155, 365, 385, 13, 50568], "temperature": 0.0, "avg_logprob": -0.20273785909016928, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.04742460325360298}, {"id": 352, "seek": 142822, "start": 1432.3, "end": 1437.6200000000001, "text": " We can pretend that they exist in our language as normal entities.", "tokens": [50568, 492, 393, 11865, 300, 436, 2514, 294, 527, 2856, 382, 2710, 16667, 13, 50834], "temperature": 0.0, "avg_logprob": -0.20273785909016928, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.04742460325360298}, {"id": 353, "seek": 142822, "start": 1437.6200000000001, "end": 1444.66, "text": " So lambda X dot 2 plus X would be the equivalent of a JavaScript function that takes a variable", "tokens": [50834, 407, 13607, 1783, 5893, 568, 1804, 1783, 576, 312, 264, 10344, 295, 257, 15778, 2445, 300, 2516, 257, 7006, 51186], "temperature": 0.0, "avg_logprob": -0.20273785909016928, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.04742460325360298}, {"id": 354, "seek": 142822, "start": 1444.66, "end": 1451.26, "text": " X and it returns 2 plus X.", "tokens": [51186, 1783, 293, 309, 11247, 568, 1804, 1783, 13, 51516], "temperature": 0.0, "avg_logprob": -0.20273785909016928, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.04742460325360298}, {"id": 355, "seek": 145126, "start": 1451.26, "end": 1458.94, "text": " If we wanted to call that function with the value 5, that would look something like this.", "tokens": [50364, 759, 321, 1415, 281, 818, 300, 2445, 365, 264, 2158, 1025, 11, 300, 576, 574, 746, 411, 341, 13, 50748], "temperature": 0.0, "avg_logprob": -0.17452998659503993, "compression_ratio": 1.6466666666666667, "no_speech_prob": 0.10520501434803009}, {"id": 356, "seek": 145126, "start": 1458.94, "end": 1465.54, "text": " Lambda X dot 2 plus X applied to the value 5.", "tokens": [50748, 45691, 1783, 5893, 568, 1804, 1783, 6456, 281, 264, 2158, 1025, 13, 51078], "temperature": 0.0, "avg_logprob": -0.17452998659503993, "compression_ratio": 1.6466666666666667, "no_speech_prob": 0.10520501434803009}, {"id": 357, "seek": 145126, "start": 1465.54, "end": 1471.46, "text": " So if we looked at it in JavaScript, that would look something like X arrow 2 plus X", "tokens": [51078, 407, 498, 321, 2956, 412, 309, 294, 15778, 11, 300, 576, 574, 746, 411, 1783, 11610, 568, 1804, 1783, 51374], "temperature": 0.0, "avg_logprob": -0.17452998659503993, "compression_ratio": 1.6466666666666667, "no_speech_prob": 0.10520501434803009}, {"id": 358, "seek": 145126, "start": 1471.46, "end": 1479.26, "text": " with the input value of 5.", "tokens": [51374, 365, 264, 4846, 2158, 295, 1025, 13, 51764], "temperature": 0.0, "avg_logprob": -0.17452998659503993, "compression_ratio": 1.6466666666666667, "no_speech_prob": 0.10520501434803009}, {"id": 359, "seek": 147926, "start": 1479.26, "end": 1481.54, "text": " Before we get to this complicated one...", "tokens": [50364, 4546, 321, 483, 281, 341, 6179, 472, 485, 50478], "temperature": 0.0, "avg_logprob": -0.2838803176041488, "compression_ratio": 1.391304347826087, "no_speech_prob": 0.012431485578417778}, {"id": 360, "seek": 147926, "start": 1481.54, "end": 1482.9, "text": " Oh, no?", "tokens": [50478, 876, 11, 572, 30, 50546], "temperature": 0.0, "avg_logprob": -0.2838803176041488, "compression_ratio": 1.391304347826087, "no_speech_prob": 0.012431485578417778}, {"id": 361, "seek": 147926, "start": 1482.9, "end": 1483.9, "text": " Okay.", "tokens": [50546, 1033, 13, 50596], "temperature": 0.0, "avg_logprob": -0.2838803176041488, "compression_ratio": 1.391304347826087, "no_speech_prob": 0.012431485578417778}, {"id": 362, "seek": 147926, "start": 1483.9, "end": 1487.3, "text": " I hit it too many times.", "tokens": [50596, 286, 2045, 309, 886, 867, 1413, 13, 50766], "temperature": 0.0, "avg_logprob": -0.2838803176041488, "compression_ratio": 1.391304347826087, "no_speech_prob": 0.012431485578417778}, {"id": 363, "seek": 147926, "start": 1487.3, "end": 1494.54, "text": " I want to take a step and go backwards from what we're looking at there.", "tokens": [50766, 286, 528, 281, 747, 257, 1823, 293, 352, 12204, 490, 437, 321, 434, 1237, 412, 456, 13, 51128], "temperature": 0.0, "avg_logprob": -0.2838803176041488, "compression_ratio": 1.391304347826087, "no_speech_prob": 0.012431485578417778}, {"id": 364, "seek": 147926, "start": 1494.54, "end": 1497.22, "text": " Which is hard, because they don't give us much whiteboard space.", "tokens": [51128, 3013, 307, 1152, 11, 570, 436, 500, 380, 976, 505, 709, 2418, 3787, 1901, 13, 51262], "temperature": 0.0, "avg_logprob": -0.2838803176041488, "compression_ratio": 1.391304347826087, "no_speech_prob": 0.012431485578417778}, {"id": 365, "seek": 147926, "start": 1497.22, "end": 1499.1, "text": " But we'll make it work.", "tokens": [51262, 583, 321, 603, 652, 309, 589, 13, 51356], "temperature": 0.0, "avg_logprob": -0.2838803176041488, "compression_ratio": 1.391304347826087, "no_speech_prob": 0.012431485578417778}, {"id": 366, "seek": 147926, "start": 1499.1, "end": 1508.92, "text": " So we have lambda X dot 2 plus X applied to 5.", "tokens": [51356, 407, 321, 362, 13607, 1783, 5893, 568, 1804, 1783, 6456, 281, 1025, 13, 51847], "temperature": 0.0, "avg_logprob": -0.2838803176041488, "compression_ratio": 1.391304347826087, "no_speech_prob": 0.012431485578417778}, {"id": 367, "seek": 150892, "start": 1508.92, "end": 1511.3600000000001, "text": " They have one more set of parentheses.", "tokens": [50364, 814, 362, 472, 544, 992, 295, 34153, 13, 50486], "temperature": 0.0, "avg_logprob": -0.21897738120135138, "compression_ratio": 1.3856209150326797, "no_speech_prob": 0.004007255658507347}, {"id": 368, "seek": 150892, "start": 1511.3600000000001, "end": 1514.96, "text": " That's fine.", "tokens": [50486, 663, 311, 2489, 13, 50666], "temperature": 0.0, "avg_logprob": -0.21897738120135138, "compression_ratio": 1.3856209150326797, "no_speech_prob": 0.004007255658507347}, {"id": 369, "seek": 150892, "start": 1514.96, "end": 1521.1200000000001, "text": " So I want to use the syntax that we have, our grammar that we've defined, and break", "tokens": [50666, 407, 286, 528, 281, 764, 264, 28431, 300, 321, 362, 11, 527, 22317, 300, 321, 600, 7642, 11, 293, 1821, 50974], "temperature": 0.0, "avg_logprob": -0.21897738120135138, "compression_ratio": 1.3856209150326797, "no_speech_prob": 0.004007255658507347}, {"id": 370, "seek": 150892, "start": 1521.1200000000001, "end": 1525.44, "text": " this apart into the rules that we have.", "tokens": [50974, 341, 4936, 666, 264, 4474, 300, 321, 362, 13, 51190], "temperature": 0.0, "avg_logprob": -0.21897738120135138, "compression_ratio": 1.3856209150326797, "no_speech_prob": 0.004007255658507347}, {"id": 371, "seek": 150892, "start": 1525.44, "end": 1530.3000000000002, "text": " Using X, lambda X dot E, and E1, E2.", "tokens": [51190, 11142, 1783, 11, 13607, 1783, 5893, 462, 11, 293, 462, 16, 11, 462, 17, 13, 51433], "temperature": 0.0, "avg_logprob": -0.21897738120135138, "compression_ratio": 1.3856209150326797, "no_speech_prob": 0.004007255658507347}, {"id": 372, "seek": 153030, "start": 1530.3, "end": 1541.22, "text": " How can we reverse engineer this statement into the expressions that it's composed of?", "tokens": [50364, 1012, 393, 321, 9943, 11403, 341, 5629, 666, 264, 15277, 300, 309, 311, 18204, 295, 30, 50910], "temperature": 0.0, "avg_logprob": -0.2754865090052287, "compression_ratio": 1.3228346456692914, "no_speech_prob": 0.007695472799241543}, {"id": 373, "seek": 153030, "start": 1541.22, "end": 1546.34, "text": " What would be the steps to do that?", "tokens": [50910, 708, 576, 312, 264, 4439, 281, 360, 300, 30, 51166], "temperature": 0.0, "avg_logprob": -0.2754865090052287, "compression_ratio": 1.3228346456692914, "no_speech_prob": 0.007695472799241543}, {"id": 374, "seek": 153030, "start": 1546.34, "end": 1550.62, "text": " Yeah.", "tokens": [51166, 865, 13, 51380], "temperature": 0.0, "avg_logprob": -0.2754865090052287, "compression_ratio": 1.3228346456692914, "no_speech_prob": 0.007695472799241543}, {"id": 375, "seek": 153030, "start": 1550.62, "end": 1556.48, "text": " Let's do a little bit of a simpler one.", "tokens": [51380, 961, 311, 360, 257, 707, 857, 295, 257, 18587, 472, 13, 51673], "temperature": 0.0, "avg_logprob": -0.2754865090052287, "compression_ratio": 1.3228346456692914, "no_speech_prob": 0.007695472799241543}, {"id": 376, "seek": 155648, "start": 1556.48, "end": 1567.64, "text": " If we have lambda X dot X, we can go backwards from this state to our expression by saying", "tokens": [50364, 759, 321, 362, 13607, 1783, 5893, 1783, 11, 321, 393, 352, 12204, 490, 341, 1785, 281, 527, 6114, 538, 1566, 50922], "temperature": 0.0, "avg_logprob": -0.1888180669148763, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.030674809589982033}, {"id": 377, "seek": 155648, "start": 1567.64, "end": 1575.28, "text": " this is equivalent to lambda X dot E, where we've turned E into X.", "tokens": [50922, 341, 307, 10344, 281, 13607, 1783, 5893, 462, 11, 689, 321, 600, 3574, 462, 666, 1783, 13, 51304], "temperature": 0.0, "avg_logprob": -0.1888180669148763, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.030674809589982033}, {"id": 378, "seek": 155648, "start": 1575.28, "end": 1578.1200000000001, "text": " So we're reversing our production rule.", "tokens": [51304, 407, 321, 434, 14582, 278, 527, 4265, 4978, 13, 51446], "temperature": 0.0, "avg_logprob": -0.1888180669148763, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.030674809589982033}, {"id": 379, "seek": 155648, "start": 1578.1200000000001, "end": 1585.56, "text": " And then this is equivalent to E. Where E is using the production rule, E turns into", "tokens": [51446, 400, 550, 341, 307, 10344, 281, 462, 13, 2305, 462, 307, 1228, 264, 4265, 4978, 11, 462, 4523, 666, 51818], "temperature": 0.0, "avg_logprob": -0.1888180669148763, "compression_ratio": 1.6206896551724137, "no_speech_prob": 0.030674809589982033}, {"id": 380, "seek": 158556, "start": 1585.56, "end": 1592.8799999999999, "text": " lambda X dot E. Using the production rule, E turns into X.", "tokens": [50364, 13607, 1783, 5893, 462, 13, 11142, 264, 4265, 4978, 11, 462, 4523, 666, 1783, 13, 50730], "temperature": 0.0, "avg_logprob": -0.32253459095954895, "compression_ratio": 1.493421052631579, "no_speech_prob": 0.003172664437443018}, {"id": 381, "seek": 158556, "start": 1592.8799999999999, "end": 1598.36, "text": " So if we started with E, we could take this step and then take that step using our production", "tokens": [50730, 407, 498, 321, 1409, 365, 462, 11, 321, 727, 747, 341, 1823, 293, 550, 747, 300, 1823, 1228, 527, 4265, 51004], "temperature": 0.0, "avg_logprob": -0.32253459095954895, "compression_ratio": 1.493421052631579, "no_speech_prob": 0.003172664437443018}, {"id": 382, "seek": 158556, "start": 1598.36, "end": 1601.3999999999999, "text": " rules.", "tokens": [51004, 4474, 13, 51156], "temperature": 0.0, "avg_logprob": -0.32253459095954895, "compression_ratio": 1.493421052631579, "no_speech_prob": 0.003172664437443018}, {"id": 383, "seek": 158556, "start": 1601.3999999999999, "end": 1606.56, "text": " I want to do that same process on this more complicated term.", "tokens": [51156, 286, 528, 281, 360, 300, 912, 1399, 322, 341, 544, 6179, 1433, 13, 51414], "temperature": 0.0, "avg_logprob": -0.32253459095954895, "compression_ratio": 1.493421052631579, "no_speech_prob": 0.003172664437443018}, {"id": 384, "seek": 158556, "start": 1606.56, "end": 1608.3999999999999, "text": " Yeah.", "tokens": [51414, 865, 13, 51506], "temperature": 0.0, "avg_logprob": -0.32253459095954895, "compression_ratio": 1.493421052631579, "no_speech_prob": 0.003172664437443018}, {"id": 385, "seek": 160840, "start": 1608.4, "end": 1619.8400000000001, "text": " Yeah, so let's turn 2 plus X into E. That's a reasonable thing to do here.", "tokens": [50364, 865, 11, 370, 718, 311, 1261, 568, 1804, 1783, 666, 462, 13, 663, 311, 257, 10585, 551, 281, 360, 510, 13, 50936], "temperature": 0.0, "avg_logprob": -0.2868342766394982, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.026354776695370674}, {"id": 386, "seek": 160840, "start": 1619.8400000000001, "end": 1625.4, "text": " I guess we don't need this second parenthesis anymore.", "tokens": [50936, 286, 2041, 321, 500, 380, 643, 341, 1150, 23350, 9374, 3602, 13, 51214], "temperature": 0.0, "avg_logprob": -0.2868342766394982, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.026354776695370674}, {"id": 387, "seek": 160840, "start": 1625.4, "end": 1632.5600000000002, "text": " So what we've done here is, say, we have some complicated expression, 2 plus X.", "tokens": [51214, 407, 437, 321, 600, 1096, 510, 307, 11, 584, 11, 321, 362, 512, 6179, 6114, 11, 568, 1804, 1783, 13, 51572], "temperature": 0.0, "avg_logprob": -0.2868342766394982, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.026354776695370674}, {"id": 388, "seek": 160840, "start": 1632.5600000000002, "end": 1637.8400000000001, "text": " Let's turn that into E. You know, for whatever E is.", "tokens": [51572, 961, 311, 1261, 300, 666, 462, 13, 509, 458, 11, 337, 2035, 462, 307, 13, 51836], "temperature": 0.0, "avg_logprob": -0.2868342766394982, "compression_ratio": 1.4475138121546962, "no_speech_prob": 0.026354776695370674}, {"id": 389, "seek": 163784, "start": 1637.84, "end": 1641.1599999999999, "text": " Then we have this step here.", "tokens": [50364, 1396, 321, 362, 341, 1823, 510, 13, 50530], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 390, "seek": 163784, "start": 1641.1599999999999, "end": 1648.1999999999998, "text": " What's another backward step we can take?", "tokens": [50530, 708, 311, 1071, 23897, 1823, 321, 393, 747, 30, 50882], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 391, "seek": 163784, "start": 1648.1999999999998, "end": 1650.24, "text": " Turn 5 into E. Yeah, sure.", "tokens": [50882, 7956, 1025, 666, 462, 13, 865, 11, 988, 13, 50984], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 392, "seek": 163784, "start": 1650.24, "end": 1654.6, "text": " This 5 can be a different E. We'll give this one a new name.", "tokens": [50984, 639, 1025, 393, 312, 257, 819, 462, 13, 492, 603, 976, 341, 472, 257, 777, 1315, 13, 51202], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 393, "seek": 163784, "start": 1654.6, "end": 1657.3999999999999, "text": " We'll call this one E2.", "tokens": [51202, 492, 603, 818, 341, 472, 462, 17, 13, 51342], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 394, "seek": 163784, "start": 1657.3999999999999, "end": 1659.1999999999998, "text": " Lambda X dot E1.", "tokens": [51342, 45691, 1783, 5893, 462, 16, 13, 51432], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 395, "seek": 163784, "start": 1659.1999999999998, "end": 1660.6399999999999, "text": " So just to keep them separate.", "tokens": [51432, 407, 445, 281, 1066, 552, 4994, 13, 51504], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 396, "seek": 163784, "start": 1660.6399999999999, "end": 1664.56, "text": " They aren't the same variable E. They're a different expression.", "tokens": [51504, 814, 3212, 380, 264, 912, 7006, 462, 13, 814, 434, 257, 819, 6114, 13, 51700], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 397, "seek": 163784, "start": 1664.56, "end": 1666.08, "text": " Yeah.", "tokens": [51700, 865, 13, 51776], "temperature": 0.0, "avg_logprob": -0.2948607820453066, "compression_ratio": 1.4975124378109452, "no_speech_prob": 0.0007554033654741943}, {"id": 398, "seek": 166608, "start": 1667.08, "end": 1672.1599999999999, "text": " Yeah, so this lambda X E1, we can call that E3.", "tokens": [50414, 865, 11, 370, 341, 13607, 1783, 462, 16, 11, 321, 393, 818, 300, 462, 18, 13, 50668], "temperature": 0.0, "avg_logprob": -0.21768850088119507, "compression_ratio": 1.2846715328467153, "no_speech_prob": 0.0001007139144348912}, {"id": 399, "seek": 166608, "start": 1672.1599999999999, "end": 1675.24, "text": " And then we still have E2.", "tokens": [50668, 400, 550, 321, 920, 362, 462, 17, 13, 50822], "temperature": 0.0, "avg_logprob": -0.21768850088119507, "compression_ratio": 1.2846715328467153, "no_speech_prob": 0.0001007139144348912}, {"id": 400, "seek": 166608, "start": 1675.24, "end": 1679.08, "text": " What's our last step?", "tokens": [50822, 708, 311, 527, 1036, 1823, 30, 51014], "temperature": 0.0, "avg_logprob": -0.21768850088119507, "compression_ratio": 1.2846715328467153, "no_speech_prob": 0.0001007139144348912}, {"id": 401, "seek": 166608, "start": 1679.08, "end": 1690.48, "text": " We know that E1, E2 is one of the productions of E. So we can generate some E4.", "tokens": [51014, 492, 458, 300, 462, 16, 11, 462, 17, 307, 472, 295, 264, 32612, 295, 462, 13, 407, 321, 393, 8460, 512, 462, 19, 13, 51584], "temperature": 0.0, "avg_logprob": -0.21768850088119507, "compression_ratio": 1.2846715328467153, "no_speech_prob": 0.0001007139144348912}, {"id": 402, "seek": 169048, "start": 1690.48, "end": 1698.08, "text": " So what we've done here is, we've stepped backwards from a final term, a program, into", "tokens": [50364, 407, 437, 321, 600, 1096, 510, 307, 11, 321, 600, 15251, 12204, 490, 257, 2572, 1433, 11, 257, 1461, 11, 666, 50744], "temperature": 0.0, "avg_logprob": -0.2716894296499399, "compression_ratio": 1.4161490683229814, "no_speech_prob": 0.001244836486876011}, {"id": 403, "seek": 169048, "start": 1698.08, "end": 1699.58, "text": " the base expression.", "tokens": [50744, 264, 3096, 6114, 13, 50819], "temperature": 0.0, "avg_logprob": -0.2716894296499399, "compression_ratio": 1.4161490683229814, "no_speech_prob": 0.001244836486876011}, {"id": 404, "seek": 169048, "start": 1699.58, "end": 1703.6, "text": " Which means that we have a valid program in lambda calculus.", "tokens": [50819, 3013, 1355, 300, 321, 362, 257, 7363, 1461, 294, 13607, 33400, 13, 51020], "temperature": 0.0, "avg_logprob": -0.2716894296499399, "compression_ratio": 1.4161490683229814, "no_speech_prob": 0.001244836486876011}, {"id": 405, "seek": 169048, "start": 1703.6, "end": 1705.96, "text": " We were able to backward step here.", "tokens": [51020, 492, 645, 1075, 281, 23897, 1823, 510, 13, 51138], "temperature": 0.0, "avg_logprob": -0.2716894296499399, "compression_ratio": 1.4161490683229814, "no_speech_prob": 0.001244836486876011}, {"id": 406, "seek": 169048, "start": 1705.96, "end": 1706.96, "text": " All the way to E. Yeah?", "tokens": [51138, 1057, 264, 636, 281, 462, 13, 865, 30, 51188], "temperature": 0.0, "avg_logprob": -0.2716894296499399, "compression_ratio": 1.4161490683229814, "no_speech_prob": 0.001244836486876011}, {"id": 407, "seek": 170696, "start": 1706.96, "end": 1722.1200000000001, "text": " Yeah.", "tokens": [50364, 865, 13, 51122], "temperature": 0.0, "avg_logprob": -0.704357385635376, "compression_ratio": 0.7037037037037037, "no_speech_prob": 0.10374096035957336}, {"id": 408, "seek": 170696, "start": 1722.1200000000001, "end": 1729.64, "text": " So what if...", "tokens": [51122, 407, 437, 498, 485, 51498], "temperature": 0.0, "avg_logprob": -0.704357385635376, "compression_ratio": 0.7037037037037037, "no_speech_prob": 0.10374096035957336}, {"id": 409, "seek": 172964, "start": 1729.64, "end": 1739.6000000000001, "text": " In JavaScript, or in any language, really, we can do something like F of 3 times 2.", "tokens": [50364, 682, 15778, 11, 420, 294, 604, 2856, 11, 534, 11, 321, 393, 360, 746, 411, 479, 295, 805, 1413, 568, 13, 50862], "temperature": 0.0, "avg_logprob": -0.20163590567452566, "compression_ratio": 1.345679012345679, "no_speech_prob": 0.15002094209194183}, {"id": 410, "seek": 172964, "start": 1739.6000000000001, "end": 1745.64, "text": " Where we have a complicated expression as a parameter to a function.", "tokens": [50862, 2305, 321, 362, 257, 6179, 6114, 382, 257, 13075, 281, 257, 2445, 13, 51164], "temperature": 0.0, "avg_logprob": -0.20163590567452566, "compression_ratio": 1.345679012345679, "no_speech_prob": 0.15002094209194183}, {"id": 411, "seek": 172964, "start": 1745.64, "end": 1753.2800000000002, "text": " This is an E. But it's an E in the same exact way that F of 3 is.", "tokens": [51164, 639, 307, 364, 462, 13, 583, 309, 311, 364, 462, 294, 264, 912, 1900, 636, 300, 479, 295, 805, 307, 13, 51546], "temperature": 0.0, "avg_logprob": -0.20163590567452566, "compression_ratio": 1.345679012345679, "no_speech_prob": 0.15002094209194183}, {"id": 412, "seek": 175328, "start": 1753.28, "end": 1757.36, "text": " Both of those are expressions that have a value.", "tokens": [50364, 6767, 295, 729, 366, 15277, 300, 362, 257, 2158, 13, 50568], "temperature": 0.0, "avg_logprob": -0.28032164419850997, "compression_ratio": 1.35625, "no_speech_prob": 0.08035255968570709}, {"id": 413, "seek": 175328, "start": 1757.36, "end": 1761.0, "text": " That we want to, you know, backwards figure out.", "tokens": [50568, 663, 321, 528, 281, 11, 291, 458, 11, 12204, 2573, 484, 13, 50750], "temperature": 0.0, "avg_logprob": -0.28032164419850997, "compression_ratio": 1.35625, "no_speech_prob": 0.08035255968570709}, {"id": 414, "seek": 175328, "start": 1761.0, "end": 1769.24, "text": " Now, the specifics of how we can turn 5, which we're kind of hand waving as being part of", "tokens": [50750, 823, 11, 264, 28454, 295, 577, 321, 393, 1261, 1025, 11, 597, 321, 434, 733, 295, 1011, 35347, 382, 885, 644, 295, 51162], "temperature": 0.0, "avg_logprob": -0.28032164419850997, "compression_ratio": 1.35625, "no_speech_prob": 0.08035255968570709}, {"id": 415, "seek": 175328, "start": 1769.24, "end": 1773.48, "text": " our language, into E is fair.", "tokens": [51162, 527, 2856, 11, 666, 462, 307, 3143, 13, 51374], "temperature": 0.0, "avg_logprob": -0.28032164419850997, "compression_ratio": 1.35625, "no_speech_prob": 0.08035255968570709}, {"id": 416, "seek": 177348, "start": 1773.48, "end": 1776.52, "text": " What I would say is...", "tokens": [50364, 708, 286, 576, 584, 307, 485, 50516], "temperature": 0.0, "avg_logprob": -0.21400970220565796, "compression_ratio": 1.3028169014084507, "no_speech_prob": 0.012624573893845081}, {"id": 417, "seek": 177348, "start": 1776.52, "end": 1782.46, "text": " We can write this as a full, long lambda expression.", "tokens": [50516, 492, 393, 2464, 341, 382, 257, 1577, 11, 938, 13607, 6114, 13, 50813], "temperature": 0.0, "avg_logprob": -0.21400970220565796, "compression_ratio": 1.3028169014084507, "no_speech_prob": 0.012624573893845081}, {"id": 418, "seek": 177348, "start": 1782.46, "end": 1784.8, "text": " But 5 is just shorter.", "tokens": [50813, 583, 1025, 307, 445, 11639, 13, 50930], "temperature": 0.0, "avg_logprob": -0.21400970220565796, "compression_ratio": 1.3028169014084507, "no_speech_prob": 0.012624573893845081}, {"id": 419, "seek": 177348, "start": 1784.8, "end": 1785.8, "text": " To do that.", "tokens": [50930, 1407, 360, 300, 13, 50980], "temperature": 0.0, "avg_logprob": -0.21400970220565796, "compression_ratio": 1.3028169014084507, "no_speech_prob": 0.012624573893845081}, {"id": 420, "seek": 177348, "start": 1785.8, "end": 1786.8, "text": " Yeah.", "tokens": [50980, 865, 13, 51030], "temperature": 0.0, "avg_logprob": -0.21400970220565796, "compression_ratio": 1.3028169014084507, "no_speech_prob": 0.012624573893845081}, {"id": 421, "seek": 177348, "start": 1786.8, "end": 1790.84, "text": " But it would look kind of like 3 times 2.", "tokens": [51030, 583, 309, 576, 574, 733, 295, 411, 805, 1413, 568, 13, 51232], "temperature": 0.0, "avg_logprob": -0.21400970220565796, "compression_ratio": 1.3028169014084507, "no_speech_prob": 0.012624573893845081}, {"id": 422, "seek": 177348, "start": 1790.84, "end": 1796.88, "text": " When you write it all out.", "tokens": [51232, 1133, 291, 2464, 309, 439, 484, 13, 51534], "temperature": 0.0, "avg_logprob": -0.21400970220565796, "compression_ratio": 1.3028169014084507, "no_speech_prob": 0.012624573893845081}, {"id": 423, "seek": 179688, "start": 1796.88, "end": 1809.6000000000001, "text": " Other questions about this backwards process that we've taken?", "tokens": [50364, 5358, 1651, 466, 341, 646, 86, 2287, 1399, 300, 321, 600, 2726, 30, 51000], "temperature": 0.0, "avg_logprob": -0.3112262334579077, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.06754331290721893}, {"id": 424, "seek": 179688, "start": 1809.6000000000001, "end": 1810.6000000000001, "text": " Yeah.", "tokens": [51000, 865, 13, 51050], "temperature": 0.0, "avg_logprob": -0.3112262334579077, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.06754331290721893}, {"id": 425, "seek": 179688, "start": 1810.6000000000001, "end": 1814.8400000000001, "text": " The three production rules that I gave you are the three rules of lambda calculus.", "tokens": [51050, 440, 1045, 4265, 4474, 300, 286, 2729, 291, 366, 264, 1045, 4474, 295, 13607, 33400, 13, 51262], "temperature": 0.0, "avg_logprob": -0.3112262334579077, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.06754331290721893}, {"id": 426, "seek": 179688, "start": 1814.8400000000001, "end": 1816.38, "text": " That's all that there is.", "tokens": [51262, 663, 311, 439, 300, 456, 307, 13, 51339], "temperature": 0.0, "avg_logprob": -0.3112262334579077, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.06754331290721893}, {"id": 427, "seek": 179688, "start": 1816.38, "end": 1821.0400000000002, "text": " People put more rules on top of it to create variants of lambda calculus.", "tokens": [51339, 3432, 829, 544, 4474, 322, 1192, 295, 309, 281, 1884, 21669, 295, 13607, 33400, 13, 51572], "temperature": 0.0, "avg_logprob": -0.3112262334579077, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.06754331290721893}, {"id": 428, "seek": 179688, "start": 1821.0400000000002, "end": 1825.92, "text": " Things like typed lambda calculus or lambda calculus with objects.", "tokens": [51572, 9514, 411, 33941, 13607, 33400, 420, 13607, 33400, 365, 6565, 13, 51816], "temperature": 0.0, "avg_logprob": -0.3112262334579077, "compression_ratio": 1.7096774193548387, "no_speech_prob": 0.06754331290721893}, {"id": 429, "seek": 182592, "start": 1825.96, "end": 1834.24, "text": " But the base lambda calculus only has those three rules.", "tokens": [50366, 583, 264, 3096, 13607, 33400, 787, 575, 729, 1045, 4474, 13, 50780], "temperature": 0.0, "avg_logprob": -0.3450947125752767, "compression_ratio": 1.2925170068027212, "no_speech_prob": 0.006797424983233213}, {"id": 430, "seek": 182592, "start": 1834.24, "end": 1836.8400000000001, "text": " Other questions?", "tokens": [50780, 5358, 1651, 30, 50910], "temperature": 0.0, "avg_logprob": -0.3450947125752767, "compression_ratio": 1.2925170068027212, "no_speech_prob": 0.006797424983233213}, {"id": 431, "seek": 182592, "start": 1836.8400000000001, "end": 1840.1200000000001, "text": " Okay.", "tokens": [50910, 1033, 13, 51074], "temperature": 0.0, "avg_logprob": -0.3450947125752767, "compression_ratio": 1.2925170068027212, "no_speech_prob": 0.006797424983233213}, {"id": 432, "seek": 182592, "start": 1840.1200000000001, "end": 1843.0, "text": " In that case...", "tokens": [51074, 682, 300, 1389, 485, 51218], "temperature": 0.0, "avg_logprob": -0.3450947125752767, "compression_ratio": 1.2925170068027212, "no_speech_prob": 0.006797424983233213}, {"id": 433, "seek": 182592, "start": 1843.0, "end": 1846.64, "text": " We have another example term here.", "tokens": [51218, 492, 362, 1071, 1365, 1433, 510, 13, 51400], "temperature": 0.0, "avg_logprob": -0.3450947125752767, "compression_ratio": 1.2925170068027212, "no_speech_prob": 0.006797424983233213}, {"id": 434, "seek": 182592, "start": 1846.64, "end": 1853.68, "text": " Lambda F dot F of 3 applied to lambda X dot X plus 1.", "tokens": [51400, 45691, 479, 5893, 479, 295, 805, 6456, 281, 13607, 1783, 5893, 1783, 1804, 502, 13, 51752], "temperature": 0.0, "avg_logprob": -0.3450947125752767, "compression_ratio": 1.2925170068027212, "no_speech_prob": 0.006797424983233213}, {"id": 435, "seek": 182592, "start": 1853.68, "end": 1854.68, "text": " Yeah?", "tokens": [51752, 865, 30, 51802], "temperature": 0.0, "avg_logprob": -0.3450947125752767, "compression_ratio": 1.2925170068027212, "no_speech_prob": 0.006797424983233213}, {"id": 436, "seek": 185468, "start": 1855.0800000000002, "end": 1856.0800000000002, "text": " Yeah.", "tokens": [50384, 865, 13, 50434], "temperature": 0.0, "avg_logprob": -0.4171688245690387, "compression_ratio": 1.2920353982300885, "no_speech_prob": 0.006797407288104296}, {"id": 437, "seek": 185468, "start": 1856.0800000000002, "end": 1871.2, "text": " Yeah, so we went in a very specific order here.", "tokens": [50434, 865, 11, 370, 321, 1437, 294, 257, 588, 2685, 1668, 510, 13, 51190], "temperature": 0.0, "avg_logprob": -0.4171688245690387, "compression_ratio": 1.2920353982300885, "no_speech_prob": 0.006797407288104296}, {"id": 438, "seek": 185468, "start": 1871.2, "end": 1872.72, "text": " Does that order matter?", "tokens": [51190, 4402, 300, 1668, 1871, 30, 51266], "temperature": 0.0, "avg_logprob": -0.4171688245690387, "compression_ratio": 1.2920353982300885, "no_speech_prob": 0.006797407288104296}, {"id": 439, "seek": 185468, "start": 1872.72, "end": 1874.5600000000002, "text": " Could we have gone in another order?", "tokens": [51266, 7497, 321, 362, 2780, 294, 1071, 1668, 30, 51358], "temperature": 0.0, "avg_logprob": -0.4171688245690387, "compression_ratio": 1.2920353982300885, "no_speech_prob": 0.006797407288104296}, {"id": 440, "seek": 185468, "start": 1874.5600000000002, "end": 1883.0, "text": " And would it have still worked?", "tokens": [51358, 400, 576, 309, 362, 920, 2732, 30, 51780], "temperature": 0.0, "avg_logprob": -0.4171688245690387, "compression_ratio": 1.2920353982300885, "no_speech_prob": 0.006797407288104296}, {"id": 441, "seek": 188300, "start": 1883.0, "end": 1884.0, "text": " You are nodding.", "tokens": [50364, 509, 366, 15224, 3584, 13, 50414], "temperature": 0.0, "avg_logprob": -0.3159834364770164, "compression_ratio": 1.4654088050314464, "no_speech_prob": 0.04023656249046326}, {"id": 442, "seek": 188300, "start": 1884.0, "end": 1885.0, "text": " Right.", "tokens": [50414, 1779, 13, 50464], "temperature": 0.0, "avg_logprob": -0.3159834364770164, "compression_ratio": 1.4654088050314464, "no_speech_prob": 0.04023656249046326}, {"id": 443, "seek": 188300, "start": 1885.0, "end": 1886.0, "text": " Exactly.", "tokens": [50464, 7587, 13, 50514], "temperature": 0.0, "avg_logprob": -0.3159834364770164, "compression_ratio": 1.4654088050314464, "no_speech_prob": 0.04023656249046326}, {"id": 444, "seek": 188300, "start": 1886.0, "end": 1903.4, "text": " So we could have swapped some of these things around and done them in a different order.", "tokens": [50514, 407, 321, 727, 362, 50011, 512, 295, 613, 721, 926, 293, 1096, 552, 294, 257, 819, 1668, 13, 51384], "temperature": 0.0, "avg_logprob": -0.3159834364770164, "compression_ratio": 1.4654088050314464, "no_speech_prob": 0.04023656249046326}, {"id": 445, "seek": 188300, "start": 1903.4, "end": 1906.28, "text": " We could have done this 5 to E2 right away.", "tokens": [51384, 492, 727, 362, 1096, 341, 1025, 281, 462, 17, 558, 1314, 13, 51528], "temperature": 0.0, "avg_logprob": -0.3159834364770164, "compression_ratio": 1.4654088050314464, "no_speech_prob": 0.04023656249046326}, {"id": 446, "seek": 188300, "start": 1906.28, "end": 1908.32, "text": " And then done the next rule right after it.", "tokens": [51528, 400, 550, 1096, 264, 958, 4978, 558, 934, 309, 13, 51630], "temperature": 0.0, "avg_logprob": -0.3159834364770164, "compression_ratio": 1.4654088050314464, "no_speech_prob": 0.04023656249046326}, {"id": 447, "seek": 188300, "start": 1908.32, "end": 1910.12, "text": " And that would be fine.", "tokens": [51630, 400, 300, 576, 312, 2489, 13, 51720], "temperature": 0.0, "avg_logprob": -0.3159834364770164, "compression_ratio": 1.4654088050314464, "no_speech_prob": 0.04023656249046326}, {"id": 448, "seek": 191012, "start": 1910.12, "end": 1914.76, "text": " That's another feature of the fact that these are context-free grammars.", "tokens": [50364, 663, 311, 1071, 4111, 295, 264, 1186, 300, 613, 366, 4319, 12, 10792, 17570, 685, 13, 50596], "temperature": 0.0, "avg_logprob": -0.2604146344321115, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.19435173273086548}, {"id": 449, "seek": 191012, "start": 1914.76, "end": 1916.7199999999998, "text": " The order here doesn't matter.", "tokens": [50596, 440, 1668, 510, 1177, 380, 1871, 13, 50694], "temperature": 0.0, "avg_logprob": -0.2604146344321115, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.19435173273086548}, {"id": 450, "seek": 191012, "start": 1916.7199999999998, "end": 1919.56, "text": " So long as you're applying the rules correctly.", "tokens": [50694, 407, 938, 382, 291, 434, 9275, 264, 4474, 8944, 13, 50836], "temperature": 0.0, "avg_logprob": -0.2604146344321115, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.19435173273086548}, {"id": 451, "seek": 191012, "start": 1919.56, "end": 1923.52, "text": " If you try and turn, like, the whole...", "tokens": [50836, 759, 291, 853, 293, 1261, 11, 411, 11, 264, 1379, 485, 51034], "temperature": 0.0, "avg_logprob": -0.2604146344321115, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.19435173273086548}, {"id": 452, "seek": 191012, "start": 1923.52, "end": 1929.2399999999998, "text": " Like this piece here into an expression, that's, like, cheating.", "tokens": [51034, 1743, 341, 2522, 510, 666, 364, 6114, 11, 300, 311, 11, 411, 11, 18309, 13, 51320], "temperature": 0.0, "avg_logprob": -0.2604146344321115, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.19435173273086548}, {"id": 453, "seek": 191012, "start": 1929.2399999999998, "end": 1930.8999999999999, "text": " It doesn't work in the language.", "tokens": [51320, 467, 1177, 380, 589, 294, 264, 2856, 13, 51403], "temperature": 0.0, "avg_logprob": -0.2604146344321115, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.19435173273086548}, {"id": 454, "seek": 191012, "start": 1930.8999999999999, "end": 1933.08, "text": " So you'll get a different answer.", "tokens": [51403, 407, 291, 603, 483, 257, 819, 1867, 13, 51512], "temperature": 0.0, "avg_logprob": -0.2604146344321115, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.19435173273086548}, {"id": 455, "seek": 191012, "start": 1933.08, "end": 1937.76, "text": " But so long as you apply valid rules from the language, you'll always end up in the", "tokens": [51512, 583, 370, 938, 382, 291, 3079, 7363, 4474, 490, 264, 2856, 11, 291, 603, 1009, 917, 493, 294, 264, 51746], "temperature": 0.0, "avg_logprob": -0.2604146344321115, "compression_ratio": 1.6544715447154472, "no_speech_prob": 0.19435173273086548}, {"id": 456, "seek": 193776, "start": 1937.76, "end": 1940.8799999999999, "text": " same place.", "tokens": [50364, 912, 1081, 13, 50520], "temperature": 0.0, "avg_logprob": -0.4513640897027377, "compression_ratio": 1.1219512195121952, "no_speech_prob": 0.28455066680908203}, {"id": 457, "seek": 193776, "start": 1940.8799999999999, "end": 1965.32, "text": " Little bit of an asterisk there that we'll cover at the end of the next lecture.", "tokens": [50520, 8022, 857, 295, 364, 257, 3120, 7797, 456, 300, 321, 603, 2060, 412, 264, 917, 295, 264, 958, 7991, 13, 51742], "temperature": 0.0, "avg_logprob": -0.4513640897027377, "compression_ratio": 1.1219512195121952, "no_speech_prob": 0.28455066680908203}, {"id": 458, "seek": 196532, "start": 1965.32, "end": 1972.72, "text": " So importantly, we can't go back up any way that we want.", "tokens": [50364, 407, 8906, 11, 321, 393, 380, 352, 646, 493, 604, 636, 300, 321, 528, 13, 50734], "temperature": 0.0, "avg_logprob": -0.2407390276590983, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.2173267900943756}, {"id": 459, "seek": 196532, "start": 1972.72, "end": 1979.28, "text": " Once we have created our system here, we're actually storing more information than I've", "tokens": [50734, 3443, 321, 362, 2942, 527, 1185, 510, 11, 321, 434, 767, 26085, 544, 1589, 813, 286, 600, 51062], "temperature": 0.0, "avg_logprob": -0.2407390276590983, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.2173267900943756}, {"id": 460, "seek": 196532, "start": 1979.28, "end": 1980.52, "text": " written.", "tokens": [51062, 3720, 13, 51124], "temperature": 0.0, "avg_logprob": -0.2407390276590983, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.2173267900943756}, {"id": 461, "seek": 196532, "start": 1980.52, "end": 1987.6399999999999, "text": " For example, we would say this step here works so long as...", "tokens": [51124, 1171, 1365, 11, 321, 576, 584, 341, 1823, 510, 1985, 370, 938, 382, 485, 51480], "temperature": 0.0, "avg_logprob": -0.2407390276590983, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.2173267900943756}, {"id": 462, "seek": 196532, "start": 1987.6399999999999, "end": 1989.02, "text": " Where can I write this?", "tokens": [51480, 2305, 393, 286, 2464, 341, 30, 51549], "temperature": 0.0, "avg_logprob": -0.2407390276590983, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.2173267900943756}, {"id": 463, "seek": 198902, "start": 1989.02, "end": 1994.98, "text": " So long as E is equal to X plus 2.", "tokens": [50364, 407, 938, 382, 462, 307, 2681, 281, 1783, 1804, 568, 13, 50662], "temperature": 0.0, "avg_logprob": -0.2460475015168143, "compression_ratio": 1.832258064516129, "no_speech_prob": 0.20686693489551544}, {"id": 464, "seek": 198902, "start": 1994.98, "end": 1996.34, "text": " Or 2 plus X.", "tokens": [50662, 1610, 568, 1804, 1783, 13, 50730], "temperature": 0.0, "avg_logprob": -0.2460475015168143, "compression_ratio": 1.832258064516129, "no_speech_prob": 0.20686693489551544}, {"id": 465, "seek": 198902, "start": 1996.34, "end": 2001.54, "text": " And then we can take this next step so long as E1 is equal to...", "tokens": [50730, 400, 550, 321, 393, 747, 341, 958, 1823, 370, 938, 382, 462, 16, 307, 2681, 281, 485, 50990], "temperature": 0.0, "avg_logprob": -0.2460475015168143, "compression_ratio": 1.832258064516129, "no_speech_prob": 0.20686693489551544}, {"id": 466, "seek": 198902, "start": 2001.54, "end": 2004.82, "text": " Oh, I guess that's what we've said here.", "tokens": [50990, 876, 11, 286, 2041, 300, 311, 437, 321, 600, 848, 510, 13, 51154], "temperature": 0.0, "avg_logprob": -0.2460475015168143, "compression_ratio": 1.832258064516129, "no_speech_prob": 0.20686693489551544}, {"id": 467, "seek": 198902, "start": 2004.82, "end": 2006.46, "text": " So E1 equals that.", "tokens": [51154, 407, 462, 16, 6915, 300, 13, 51236], "temperature": 0.0, "avg_logprob": -0.2460475015168143, "compression_ratio": 1.832258064516129, "no_speech_prob": 0.20686693489551544}, {"id": 468, "seek": 198902, "start": 2006.46, "end": 2010.84, "text": " And then E2 is equal to 5.", "tokens": [51236, 400, 550, 462, 17, 307, 2681, 281, 1025, 13, 51455], "temperature": 0.0, "avg_logprob": -0.2460475015168143, "compression_ratio": 1.832258064516129, "no_speech_prob": 0.20686693489551544}, {"id": 469, "seek": 198902, "start": 2010.84, "end": 2018.5, "text": " And then we can take this next step so long as E3 is equal to lambdaX.E1, et cetera.", "tokens": [51455, 400, 550, 321, 393, 747, 341, 958, 1823, 370, 938, 382, 462, 18, 307, 2681, 281, 13607, 55, 13, 36, 16, 11, 1030, 11458, 13, 51838], "temperature": 0.0, "avg_logprob": -0.2460475015168143, "compression_ratio": 1.832258064516129, "no_speech_prob": 0.20686693489551544}, {"id": 470, "seek": 201850, "start": 2018.5, "end": 2023.3, "text": " So we're encoding that transformation in this backwards process.", "tokens": [50364, 407, 321, 434, 43430, 300, 9887, 294, 341, 12204, 1399, 13, 50604], "temperature": 0.0, "avg_logprob": -0.22126572220413773, "compression_ratio": 1.5698324022346368, "no_speech_prob": 0.0008830368751659989}, {"id": 471, "seek": 201850, "start": 2023.3, "end": 2027.78, "text": " But that's not super important towards the class.", "tokens": [50604, 583, 300, 311, 406, 1687, 1021, 3030, 264, 1508, 13, 50828], "temperature": 0.0, "avg_logprob": -0.22126572220413773, "compression_ratio": 1.5698324022346368, "no_speech_prob": 0.0008830368751659989}, {"id": 472, "seek": 201850, "start": 2027.78, "end": 2034.38, "text": " It's just that that is the way that we're doing it.", "tokens": [50828, 467, 311, 445, 300, 300, 307, 264, 636, 300, 321, 434, 884, 309, 13, 51158], "temperature": 0.0, "avg_logprob": -0.22126572220413773, "compression_ratio": 1.5698324022346368, "no_speech_prob": 0.0008830368751659989}, {"id": 473, "seek": 201850, "start": 2034.38, "end": 2035.38, "text": " That's brilliant.", "tokens": [51158, 663, 311, 10248, 13, 51208], "temperature": 0.0, "avg_logprob": -0.22126572220413773, "compression_ratio": 1.5698324022346368, "no_speech_prob": 0.0008830368751659989}, {"id": 474, "seek": 201850, "start": 2035.38, "end": 2036.38, "text": " All right.", "tokens": [51208, 1057, 558, 13, 51258], "temperature": 0.0, "avg_logprob": -0.22126572220413773, "compression_ratio": 1.5698324022346368, "no_speech_prob": 0.0008830368751659989}, {"id": 475, "seek": 201850, "start": 2036.38, "end": 2037.38, "text": " Thank you.", "tokens": [51258, 1044, 291, 13, 51308], "temperature": 0.0, "avg_logprob": -0.22126572220413773, "compression_ratio": 1.5698324022346368, "no_speech_prob": 0.0008830368751659989}, {"id": 476, "seek": 201850, "start": 2037.38, "end": 2038.38, "text": " Thank you for that note.", "tokens": [51308, 1044, 291, 337, 300, 3637, 13, 51358], "temperature": 0.0, "avg_logprob": -0.22126572220413773, "compression_ratio": 1.5698324022346368, "no_speech_prob": 0.0008830368751659989}, {"id": 477, "seek": 201850, "start": 2038.38, "end": 2046.38, "text": " We will use this for the next stuff on the board.", "tokens": [51358, 492, 486, 764, 341, 337, 264, 958, 1507, 322, 264, 3150, 13, 51758], "temperature": 0.0, "avg_logprob": -0.22126572220413773, "compression_ratio": 1.5698324022346368, "no_speech_prob": 0.0008830368751659989}, {"id": 478, "seek": 204638, "start": 2046.38, "end": 2048.86, "text": " Other questions?", "tokens": [50364, 5358, 1651, 30, 50488], "temperature": 0.0, "avg_logprob": -0.31047301659217247, "compression_ratio": 1.3902439024390243, "no_speech_prob": 0.0838858112692833}, {"id": 479, "seek": 204638, "start": 2048.86, "end": 2051.2200000000003, "text": " Okay.", "tokens": [50488, 1033, 13, 50606], "temperature": 0.0, "avg_logprob": -0.31047301659217247, "compression_ratio": 1.3902439024390243, "no_speech_prob": 0.0838858112692833}, {"id": 480, "seek": 204638, "start": 2051.2200000000003, "end": 2058.28, "text": " Then try and do this same backwards process that we've done on the second example.", "tokens": [50606, 1396, 853, 293, 360, 341, 912, 12204, 1399, 300, 321, 600, 1096, 322, 264, 1150, 1365, 13, 50959], "temperature": 0.0, "avg_logprob": -0.31047301659217247, "compression_ratio": 1.3902439024390243, "no_speech_prob": 0.0838858112692833}, {"id": 481, "seek": 204638, "start": 2058.28, "end": 2063.54, "text": " On this third one, feel free to chat with someone next to you to figure it out.", "tokens": [50959, 1282, 341, 2636, 472, 11, 841, 1737, 281, 5081, 365, 1580, 958, 281, 291, 281, 2573, 309, 484, 13, 51222], "temperature": 0.0, "avg_logprob": -0.31047301659217247, "compression_ratio": 1.3902439024390243, "no_speech_prob": 0.0838858112692833}, {"id": 482, "seek": 204638, "start": 2063.54, "end": 2065.7400000000002, "text": " But try and get all the way back to sum E.", "tokens": [51222, 583, 853, 293, 483, 439, 264, 636, 646, 281, 2408, 462, 13, 51332], "temperature": 0.0, "avg_logprob": -0.31047301659217247, "compression_ratio": 1.3902439024390243, "no_speech_prob": 0.0838858112692833}, {"id": 483, "seek": 215574, "start": 2155.74, "end": 2164.74, "text": " All right.", "tokens": [50364, 1057, 558, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3112037131126891, "compression_ratio": 1.219298245614035, "no_speech_prob": 0.007345702964812517}, {"id": 484, "seek": 215574, "start": 2164.74, "end": 2168.7, "text": " Let's put it together as a class.", "tokens": [50814, 961, 311, 829, 309, 1214, 382, 257, 1508, 13, 51012], "temperature": 0.0, "avg_logprob": -0.3112037131126891, "compression_ratio": 1.219298245614035, "no_speech_prob": 0.007345702964812517}, {"id": 485, "seek": 215574, "start": 2168.7, "end": 2172.3999999999996, "text": " I've got the expression up here.", "tokens": [51012, 286, 600, 658, 264, 6114, 493, 510, 13, 51197], "temperature": 0.0, "avg_logprob": -0.3112037131126891, "compression_ratio": 1.219298245614035, "no_speech_prob": 0.007345702964812517}, {"id": 486, "seek": 215574, "start": 2172.3999999999996, "end": 2173.62, "text": " Let's go backwards.", "tokens": [51197, 961, 311, 352, 12204, 13, 51258], "temperature": 0.0, "avg_logprob": -0.3112037131126891, "compression_ratio": 1.219298245614035, "no_speech_prob": 0.007345702964812517}, {"id": 487, "seek": 215574, "start": 2173.62, "end": 2177.3799999999997, "text": " What's one first step that we could take?", "tokens": [51258, 708, 311, 472, 700, 1823, 300, 321, 727, 747, 30, 51446], "temperature": 0.0, "avg_logprob": -0.3112037131126891, "compression_ratio": 1.219298245614035, "no_speech_prob": 0.007345702964812517}, {"id": 488, "seek": 217738, "start": 2177.38, "end": 2182.42, "text": " Yeah.", "tokens": [50364, 865, 13, 50616], "temperature": 0.0, "avg_logprob": -0.3613831583658854, "compression_ratio": 1.3266666666666667, "no_speech_prob": 0.010169553570449352}, {"id": 489, "seek": 217738, "start": 2182.42, "end": 2187.9, "text": " We can turn this X plus 1 into an E1, let's say.", "tokens": [50616, 492, 393, 1261, 341, 1783, 1804, 502, 666, 364, 462, 16, 11, 718, 311, 584, 13, 50890], "temperature": 0.0, "avg_logprob": -0.3613831583658854, "compression_ratio": 1.3266666666666667, "no_speech_prob": 0.010169553570449352}, {"id": 490, "seek": 217738, "start": 2187.9, "end": 2188.9, "text": " LambdaX.E1.", "tokens": [50890, 45691, 55, 13, 36, 16, 13, 50940], "temperature": 0.0, "avg_logprob": -0.3613831583658854, "compression_ratio": 1.3266666666666667, "no_speech_prob": 0.010169553570449352}, {"id": 491, "seek": 217738, "start": 2188.9, "end": 2189.9, "text": " Okay.", "tokens": [50940, 1033, 13, 50990], "temperature": 0.0, "avg_logprob": -0.3613831583658854, "compression_ratio": 1.3266666666666667, "no_speech_prob": 0.010169553570449352}, {"id": 492, "seek": 217738, "start": 2189.9, "end": 2193.26, "text": " And then we keep everything else.", "tokens": [50990, 400, 550, 321, 1066, 1203, 1646, 13, 51158], "temperature": 0.0, "avg_logprob": -0.3613831583658854, "compression_ratio": 1.3266666666666667, "no_speech_prob": 0.010169553570449352}, {"id": 493, "seek": 217738, "start": 2193.26, "end": 2196.46, "text": " Cool.", "tokens": [51158, 8561, 13, 51318], "temperature": 0.0, "avg_logprob": -0.3613831583658854, "compression_ratio": 1.3266666666666667, "no_speech_prob": 0.010169553570449352}, {"id": 494, "seek": 217738, "start": 2196.46, "end": 2204.2200000000003, "text": " What's another step that we could take from here?", "tokens": [51318, 708, 311, 1071, 1823, 300, 321, 727, 747, 490, 510, 30, 51706], "temperature": 0.0, "avg_logprob": -0.3613831583658854, "compression_ratio": 1.3266666666666667, "no_speech_prob": 0.010169553570449352}, {"id": 495, "seek": 217738, "start": 2204.2200000000003, "end": 2206.86, "text": " We could turn the 3 into an E. Yeah.", "tokens": [51706, 492, 727, 1261, 264, 805, 666, 364, 462, 13, 865, 13, 51838], "temperature": 0.0, "avg_logprob": -0.3613831583658854, "compression_ratio": 1.3266666666666667, "no_speech_prob": 0.010169553570449352}, {"id": 496, "seek": 220686, "start": 2206.86, "end": 2207.86, "text": " Sure.", "tokens": [50364, 4894, 13, 50414], "temperature": 0.0, "avg_logprob": -0.29540125528971356, "compression_ratio": 1.3488372093023255, "no_speech_prob": 0.0009697478380985558}, {"id": 497, "seek": 220686, "start": 2207.86, "end": 2210.02, "text": " So here we kind of elided that step.", "tokens": [50414, 407, 510, 321, 733, 295, 806, 2112, 300, 1823, 13, 50522], "temperature": 0.0, "avg_logprob": -0.29540125528971356, "compression_ratio": 1.3488372093023255, "no_speech_prob": 0.0009697478380985558}, {"id": 498, "seek": 220686, "start": 2210.02, "end": 2213.9, "text": " We turned our X plus 1 all into an E. That's fine.", "tokens": [50522, 492, 3574, 527, 1783, 1804, 502, 439, 666, 364, 462, 13, 663, 311, 2489, 13, 50716], "temperature": 0.0, "avg_logprob": -0.29540125528971356, "compression_ratio": 1.3488372093023255, "no_speech_prob": 0.0009697478380985558}, {"id": 499, "seek": 220686, "start": 2213.9, "end": 2217.0, "text": " We can do the same...", "tokens": [50716, 492, 393, 360, 264, 912, 485, 50871], "temperature": 0.0, "avg_logprob": -0.29540125528971356, "compression_ratio": 1.3488372093023255, "no_speech_prob": 0.0009697478380985558}, {"id": 500, "seek": 220686, "start": 2217.0, "end": 2221.1, "text": " Over here, I guess we're going to just do the 3, and that's okay.", "tokens": [50871, 4886, 510, 11, 286, 2041, 321, 434, 516, 281, 445, 360, 264, 805, 11, 293, 300, 311, 1392, 13, 51076], "temperature": 0.0, "avg_logprob": -0.29540125528971356, "compression_ratio": 1.3488372093023255, "no_speech_prob": 0.0009697478380985558}, {"id": 501, "seek": 220686, "start": 2221.1, "end": 2230.2200000000003, "text": " So F of E2, lambdaX.E1.", "tokens": [51076, 407, 479, 295, 462, 17, 11, 13607, 55, 13, 36, 16, 13, 51532], "temperature": 0.0, "avg_logprob": -0.29540125528971356, "compression_ratio": 1.3488372093023255, "no_speech_prob": 0.0009697478380985558}, {"id": 502, "seek": 220686, "start": 2230.2200000000003, "end": 2231.2200000000003, "text": " What else can we do?", "tokens": [51532, 708, 1646, 393, 321, 360, 30, 51582], "temperature": 0.0, "avg_logprob": -0.29540125528971356, "compression_ratio": 1.3488372093023255, "no_speech_prob": 0.0009697478380985558}, {"id": 503, "seek": 220686, "start": 2231.2200000000003, "end": 2232.2200000000003, "text": " Yeah.", "tokens": [51582, 865, 13, 51632], "temperature": 0.0, "avg_logprob": -0.29540125528971356, "compression_ratio": 1.3488372093023255, "no_speech_prob": 0.0009697478380985558}, {"id": 504, "seek": 223222, "start": 2232.22, "end": 2233.22, "text": " Behind you.", "tokens": [50364, 20475, 291, 13, 50414], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 505, "seek": 223222, "start": 2233.22, "end": 2234.22, "text": " Sorry.", "tokens": [50414, 4919, 13, 50464], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 506, "seek": 223222, "start": 2234.22, "end": 2235.22, "text": " FE2 into E4.", "tokens": [50464, 479, 36, 17, 666, 462, 19, 13, 50514], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 507, "seek": 223222, "start": 2235.22, "end": 2236.22, "text": " Yeah.", "tokens": [50514, 865, 13, 50564], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 508, "seek": 223222, "start": 2236.22, "end": 2237.22, "text": " We can totally turn that into E4.", "tokens": [50564, 492, 393, 3879, 3243, 77, 300, 666, 462, 19, 13, 50614], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 509, "seek": 223222, "start": 2237.22, "end": 2238.22, "text": " Cool.", "tokens": [50614, 8561, 13, 50664], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 510, "seek": 223222, "start": 2238.22, "end": 2239.22, "text": " All right.", "tokens": [50664, 1057, 558, 13, 50714], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 511, "seek": 223222, "start": 2239.22, "end": 2240.22, "text": " So that's good.", "tokens": [50714, 407, 300, 311, 665, 13, 50764], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 512, "seek": 223222, "start": 2240.22, "end": 2241.22, "text": " We're good.", "tokens": [50764, 220, 4360, 434, 665, 13, 50814], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 513, "seek": 223222, "start": 2241.22, "end": 2242.22, "text": " We're good.", "tokens": [50814, 492, 434, 665, 13, 50864], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 514, "seek": 223222, "start": 2242.22, "end": 2243.22, "text": " That's fine.", "tokens": [50864, 663, 311, 2489, 13, 50914], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 515, "seek": 223222, "start": 2243.22, "end": 2244.22, "text": " We can do that.", "tokens": [50914, 492, 393, 360, 300, 13, 50964], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 516, "seek": 223222, "start": 2244.22, "end": 2245.22, "text": " All right.", "tokens": [50964, 1057, 558, 13, 51014], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 517, "seek": 223222, "start": 2245.22, "end": 2246.22, "text": " So let's...", "tokens": [51014, 407, 718, 311, 485, 51064], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 518, "seek": 223222, "start": 2246.22, "end": 2247.22, "text": " We can do a class.", "tokens": [51064, 220, 4360, 393, 360, 257, 1508, 13, 51114], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 519, "seek": 223222, "start": 2247.22, "end": 2248.22, "text": " That's fine.", "tokens": [51114, 663, 311, 2489, 13, 51164], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 520, "seek": 223222, "start": 2248.22, "end": 2249.22, "text": " We're good.", "tokens": [51164, 492, 434, 665, 13, 51214], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 521, "seek": 223222, "start": 2249.22, "end": 2250.22, "text": " Let's go back.", "tokens": [51214, 961, 311, 352, 646, 13, 51264], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 522, "seek": 223222, "start": 2250.22, "end": 2251.22, "text": " What else can we do?", "tokens": [51264, 708, 1646, 393, 321, 360, 30, 51314], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 523, "seek": 223222, "start": 2251.22, "end": 2252.22, "text": " Yeah.", "tokens": [51314, 865, 13, 51364], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 524, "seek": 223222, "start": 2252.22, "end": 2253.22, "text": " Oh.", "tokens": [51364, 876, 13, 51414], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 525, "seek": 223222, "start": 2253.22, "end": 2254.22, "text": " Behind you.", "tokens": [51414, 20475, 291, 13, 51464], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 526, "seek": 223222, "start": 2254.22, "end": 2255.22, "text": " Sorry.", "tokens": [51464, 4919, 13, 51514], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 527, "seek": 223222, "start": 2255.22, "end": 2256.22, "text": " FE2 into E4.", "tokens": [51514, 479, 36, 17, 294, 1353, 462, 19, 13, 51564], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 528, "seek": 223222, "start": 2256.22, "end": 2258.58, "text": " Yeah.", "tokens": [51564, 865, 13, 51682], "temperature": 0.6000000000000001, "avg_logprob": -0.7770790197910407, "compression_ratio": 1.925, "no_speech_prob": 0.1081845685839653}, {"id": 529, "seek": 225858, "start": 2258.58, "end": 2264.14, "text": " We can totally turn that into E4, E3.", "tokens": [50364, 492, 393, 3217, 356, 1261, 300, 666, 462, 19, 11, 462, 18, 13, 50642], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 530, "seek": 225858, "start": 2264.14, "end": 2265.14, "text": " And then...", "tokens": [50642, 400, 550, 485, 50692], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 531, "seek": 225858, "start": 2265.14, "end": 2266.14, "text": " Yeah.", "tokens": [50692, 865, 13, 50742], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 532, "seek": 225858, "start": 2266.14, "end": 2267.14, "text": " One from here.", "tokens": [50742, 1485, 490, 510, 13, 50792], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 533, "seek": 225858, "start": 2267.14, "end": 2268.14, "text": " Yep.", "tokens": [50792, 7010, 13, 50842], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 534, "seek": 225858, "start": 2268.14, "end": 2273.98, "text": " Turn that into E5, E3.", "tokens": [50842, 7956, 300, 666, 462, 20, 11, 462, 18, 13, 51134], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 535, "seek": 225858, "start": 2273.98, "end": 2275.74, "text": " And finally...", "tokens": [51134, 400, 2721, 485, 51222], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 536, "seek": 225858, "start": 2275.74, "end": 2280.62, "text": " You guys in the back probably can't see all the way down anymore, but...", "tokens": [51222, 509, 1074, 294, 264, 646, 1391, 393, 380, 536, 439, 264, 636, 760, 3602, 11, 457, 485, 51466], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 537, "seek": 225858, "start": 2280.62, "end": 2282.7, "text": " Turn the last thing into E6.", "tokens": [51466, 7956, 264, 1036, 551, 666, 462, 21, 13, 51570], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 538, "seek": 225858, "start": 2282.7, "end": 2284.2799999999997, "text": " Why not?", "tokens": [51570, 1545, 406, 30, 51649], "temperature": 0.0, "avg_logprob": -0.3231495923774187, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.017985373735427856}, {"id": 539, "seek": 228428, "start": 2284.28, "end": 2293.8, "text": " So we're able to go from this complicated expression, step by step, into a simple E6.", "tokens": [50364, 407, 321, 434, 1075, 281, 352, 490, 341, 6179, 6114, 11, 1823, 538, 1823, 11, 666, 257, 2199, 462, 21, 13, 50840], "temperature": 0.0, "avg_logprob": -0.181849611216578, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.010488959029316902}, {"id": 540, "seek": 228428, "start": 2293.8, "end": 2296.32, "text": " And each of these E's has a different value.", "tokens": [50840, 400, 1184, 295, 613, 462, 311, 575, 257, 819, 2158, 13, 50966], "temperature": 0.0, "avg_logprob": -0.181849611216578, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.010488959029316902}, {"id": 541, "seek": 228428, "start": 2296.32, "end": 2301.4, "text": " We've given it some number or some meaning inside of there.", "tokens": [50966, 492, 600, 2212, 309, 512, 1230, 420, 512, 3620, 1854, 295, 456, 13, 51220], "temperature": 0.0, "avg_logprob": -0.181849611216578, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.010488959029316902}, {"id": 542, "seek": 228428, "start": 2301.4, "end": 2305.2400000000002, "text": " But we can forget about that at this point.", "tokens": [51220, 583, 321, 393, 2870, 466, 300, 412, 341, 935, 13, 51412], "temperature": 0.0, "avg_logprob": -0.181849611216578, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.010488959029316902}, {"id": 543, "seek": 228428, "start": 2305.2400000000002, "end": 2311.88, "text": " The point is we were able to get down to E, which means we have a valid program.", "tokens": [51412, 440, 935, 307, 321, 645, 1075, 281, 483, 760, 281, 462, 11, 597, 1355, 321, 362, 257, 7363, 1461, 13, 51744], "temperature": 0.0, "avg_logprob": -0.181849611216578, "compression_ratio": 1.5144230769230769, "no_speech_prob": 0.010488959029316902}, {"id": 544, "seek": 231188, "start": 2311.88, "end": 2318.32, "text": " This is exactly the process that your IDE takes every time it gives you a redline squiggle.", "tokens": [50364, 639, 307, 2293, 264, 1399, 300, 428, 40930, 2516, 633, 565, 309, 2709, 291, 257, 2182, 1889, 2339, 19694, 13, 50686], "temperature": 0.0, "avg_logprob": -0.20944110206935718, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.00723274378105998}, {"id": 545, "seek": 231188, "start": 2318.32, "end": 2321.08, "text": " And it says, hey, your code is bad.", "tokens": [50686, 400, 309, 1619, 11, 4177, 11, 428, 3089, 307, 1578, 13, 50824], "temperature": 0.0, "avg_logprob": -0.20944110206935718, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.00723274378105998}, {"id": 546, "seek": 231188, "start": 2321.08, "end": 2324.04, "text": " You forgot to write int at the start of this line.", "tokens": [50824, 509, 5298, 281, 2464, 560, 412, 264, 722, 295, 341, 1622, 13, 50972], "temperature": 0.0, "avg_logprob": -0.20944110206935718, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.00723274378105998}, {"id": 547, "seek": 231188, "start": 2324.04, "end": 2325.6800000000003, "text": " Or you forgot the semicolon.", "tokens": [50972, 1610, 291, 5298, 264, 27515, 38780, 13, 51054], "temperature": 0.0, "avg_logprob": -0.20944110206935718, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.00723274378105998}, {"id": 548, "seek": 231188, "start": 2325.6800000000003, "end": 2330.1600000000003, "text": " It's going through this process constantly, trying to figure out where do you fail to", "tokens": [51054, 467, 311, 516, 807, 341, 1399, 6460, 11, 1382, 281, 2573, 484, 689, 360, 291, 3061, 281, 51278], "temperature": 0.0, "avg_logprob": -0.20944110206935718, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.00723274378105998}, {"id": 549, "seek": 231188, "start": 2330.1600000000003, "end": 2332.6400000000003, "text": " parse your code?", "tokens": [51278, 48377, 428, 3089, 30, 51402], "temperature": 0.0, "avg_logprob": -0.20944110206935718, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.00723274378105998}, {"id": 550, "seek": 231188, "start": 2332.6400000000003, "end": 2336.6, "text": " That's an error.", "tokens": [51402, 663, 311, 364, 6713, 13, 51600], "temperature": 0.0, "avg_logprob": -0.20944110206935718, "compression_ratio": 1.5138888888888888, "no_speech_prob": 0.00723274378105998}, {"id": 551, "seek": 233660, "start": 2336.6, "end": 2341.88, "text": " Same exact process in a more complicated language.", "tokens": [50364, 10635, 1900, 1399, 294, 257, 544, 6179, 2856, 13, 50628], "temperature": 0.0, "avg_logprob": -0.3250568614286535, "compression_ratio": 1.3670886075949367, "no_speech_prob": 0.10520610958337784}, {"id": 552, "seek": 233660, "start": 2341.88, "end": 2345.6, "text": " Okay.", "tokens": [50628, 1033, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3250568614286535, "compression_ratio": 1.3670886075949367, "no_speech_prob": 0.10520610958337784}, {"id": 553, "seek": 233660, "start": 2345.6, "end": 2353.04, "text": " If we wanted to write that one as JavaScript, it might look something like this.", "tokens": [50814, 759, 321, 1415, 281, 2464, 300, 472, 382, 15778, 11, 309, 1062, 574, 746, 411, 341, 13, 51186], "temperature": 0.0, "avg_logprob": -0.3250568614286535, "compression_ratio": 1.3670886075949367, "no_speech_prob": 0.10520610958337784}, {"id": 554, "seek": 233660, "start": 2353.04, "end": 2360.52, "text": " The first part of your homework is converting JavaScript into lambda calculus.", "tokens": [51186, 440, 700, 644, 295, 428, 14578, 307, 29942, 15778, 666, 13607, 33400, 13, 51560], "temperature": 0.0, "avg_logprob": -0.3250568614286535, "compression_ratio": 1.3670886075949367, "no_speech_prob": 0.10520610958337784}, {"id": 555, "seek": 236052, "start": 2360.52, "end": 2366.64, "text": " And then the second part is lambda calculus into JavaScript.", "tokens": [50364, 400, 550, 264, 1150, 644, 307, 13607, 33400, 666, 15778, 13, 50670], "temperature": 0.0, "avg_logprob": -0.2514225244522095, "compression_ratio": 1.6397058823529411, "no_speech_prob": 0.013636532239615917}, {"id": 556, "seek": 236052, "start": 2366.64, "end": 2374.82, "text": " So if we wanted to turn a function in JavaScript into lambda calculus, for example, function", "tokens": [50670, 407, 498, 321, 1415, 281, 1261, 257, 2445, 294, 15778, 666, 13607, 33400, 11, 337, 1365, 11, 2445, 51079], "temperature": 0.0, "avg_logprob": -0.2514225244522095, "compression_ratio": 1.6397058823529411, "no_speech_prob": 0.013636532239615917}, {"id": 557, "seek": 236052, "start": 2374.82, "end": 2385.88, "text": " composition, what would function composition look like in JavaScript?", "tokens": [51079, 12686, 11, 437, 576, 2445, 12686, 574, 411, 294, 15778, 30, 51632], "temperature": 0.0, "avg_logprob": -0.2514225244522095, "compression_ratio": 1.6397058823529411, "no_speech_prob": 0.013636532239615917}, {"id": 558, "seek": 238588, "start": 2385.88, "end": 2393.76, "text": " So this is a function where we're applying f of f of x.", "tokens": [50364, 407, 341, 307, 257, 2445, 689, 321, 434, 9275, 283, 295, 283, 295, 2031, 13, 50758], "temperature": 0.0, "avg_logprob": -0.5719702521035838, "compression_ratio": 1.1515151515151516, "no_speech_prob": 0.08151713013648987}, {"id": 559, "seek": 238588, "start": 2393.76, "end": 2398.06, "text": " F of x, instead of fog x.", "tokens": [50758, 479, 295, 2031, 11, 2602, 295, 726, 70, 2031, 13, 50973], "temperature": 0.0, "avg_logprob": -0.5719702521035838, "compression_ratio": 1.1515151515151516, "no_speech_prob": 0.08151713013648987}, {"id": 560, "seek": 238588, "start": 2398.06, "end": 2401.92, "text": " What would this look like?", "tokens": [50973, 708, 576, 341, 574, 411, 30, 51166], "temperature": 0.0, "avg_logprob": -0.5719702521035838, "compression_ratio": 1.1515151515151516, "no_speech_prob": 0.08151713013648987}, {"id": 561, "seek": 238588, "start": 2401.92, "end": 2404.92, "text": " Yeah?", "tokens": [51166, 865, 30, 51316], "temperature": 0.0, "avg_logprob": -0.5719702521035838, "compression_ratio": 1.1515151515151516, "no_speech_prob": 0.08151713013648987}, {"id": 562, "seek": 240492, "start": 2404.92, "end": 2420.82, "text": " Yeah, so the main function body is going to be f of f of x.", "tokens": [50364, 865, 11, 370, 264, 2135, 2445, 1772, 307, 516, 281, 312, 283, 295, 283, 295, 2031, 13, 51159], "temperature": 0.0, "avg_logprob": -0.23523074388504028, "compression_ratio": 1.3275862068965518, "no_speech_prob": 0.017442256212234497}, {"id": 563, "seek": 240492, "start": 2420.82, "end": 2423.6, "text": " But we're defining a function to do this.", "tokens": [51159, 583, 321, 434, 17827, 257, 2445, 281, 360, 341, 13, 51298], "temperature": 0.0, "avg_logprob": -0.23523074388504028, "compression_ratio": 1.3275862068965518, "no_speech_prob": 0.017442256212234497}, {"id": 564, "seek": 240492, "start": 2423.6, "end": 2432.16, "text": " So we might have some sort of x goes to this result.", "tokens": [51298, 407, 321, 1062, 362, 512, 1333, 295, 2031, 1709, 281, 341, 1874, 13, 51726], "temperature": 0.0, "avg_logprob": -0.23523074388504028, "compression_ratio": 1.3275862068965518, "no_speech_prob": 0.017442256212234497}, {"id": 565, "seek": 243216, "start": 2432.16, "end": 2436.8399999999997, "text": " It's a function that takes x and applies f of f of x to it.", "tokens": [50364, 467, 311, 257, 2445, 300, 2516, 2031, 293, 13165, 283, 295, 283, 295, 2031, 281, 309, 13, 50598], "temperature": 0.0, "avg_logprob": -0.20027542114257812, "compression_ratio": 1.6491228070175439, "no_speech_prob": 0.07158482074737549}, {"id": 566, "seek": 243216, "start": 2436.8399999999997, "end": 2445.0, "text": " Or we might go a step further and say it's a function that takes a function f and a value", "tokens": [50598, 1610, 321, 1062, 352, 257, 1823, 3052, 293, 584, 309, 311, 257, 2445, 300, 2516, 257, 2445, 283, 293, 257, 2158, 51006], "temperature": 0.0, "avg_logprob": -0.20027542114257812, "compression_ratio": 1.6491228070175439, "no_speech_prob": 0.07158482074737549}, {"id": 567, "seek": 243216, "start": 2445.0, "end": 2451.72, "text": " x and then applies f of f of x.", "tokens": [51006, 2031, 293, 550, 13165, 283, 295, 283, 295, 2031, 13, 51342], "temperature": 0.0, "avg_logprob": -0.20027542114257812, "compression_ratio": 1.6491228070175439, "no_speech_prob": 0.07158482074737549}, {"id": 568, "seek": 243216, "start": 2451.72, "end": 2454.2, "text": " That's probably how I would write it in JavaScript.", "tokens": [51342, 663, 311, 1391, 577, 286, 576, 2464, 309, 294, 15778, 13, 51466], "temperature": 0.0, "avg_logprob": -0.20027542114257812, "compression_ratio": 1.6491228070175439, "no_speech_prob": 0.07158482074737549}, {"id": 569, "seek": 243216, "start": 2454.2, "end": 2457.2799999999997, "text": " Let's see if that's what I wrote over here.", "tokens": [51466, 961, 311, 536, 498, 300, 311, 437, 286, 4114, 670, 510, 13, 51620], "temperature": 0.0, "avg_logprob": -0.20027542114257812, "compression_ratio": 1.6491228070175439, "no_speech_prob": 0.07158482074737549}, {"id": 570, "seek": 243216, "start": 2457.2799999999997, "end": 2458.96, "text": " Yes.", "tokens": [51620, 1079, 13, 51704], "temperature": 0.0, "avg_logprob": -0.20027542114257812, "compression_ratio": 1.6491228070175439, "no_speech_prob": 0.07158482074737549}, {"id": 571, "seek": 245896, "start": 2458.96, "end": 2467.04, "text": " Basically the same, but I've separated out the parameters.", "tokens": [50364, 8537, 264, 912, 11, 457, 286, 600, 12005, 484, 264, 9834, 13, 50768], "temperature": 0.0, "avg_logprob": -0.4636748234430949, "compression_ratio": 1.232, "no_speech_prob": 0.0953381359577179}, {"id": 572, "seek": 245896, "start": 2467.04, "end": 2470.12, "text": " Questions on this composition function?", "tokens": [50768, 27738, 322, 341, 12686, 2445, 30, 50922], "temperature": 0.0, "avg_logprob": -0.4636748234430949, "compression_ratio": 1.232, "no_speech_prob": 0.0953381359577179}, {"id": 573, "seek": 245896, "start": 2470.12, "end": 2473.92, "text": " Before we take it a step further?", "tokens": [50922, 4546, 321, 747, 309, 257, 1823, 3052, 30, 51112], "temperature": 0.0, "avg_logprob": -0.4636748234430949, "compression_ratio": 1.232, "no_speech_prob": 0.0953381359577179}, {"id": 574, "seek": 245896, "start": 2473.92, "end": 2475.92, "text": " Okay.", "tokens": [51112, 1033, 13, 51212], "temperature": 0.0, "avg_logprob": -0.4636748234430949, "compression_ratio": 1.232, "no_speech_prob": 0.0953381359577179}, {"id": 575, "seek": 245896, "start": 2475.92, "end": 2477.92, "text": " So...", "tokens": [51212, 407, 485, 51312], "temperature": 0.0, "avg_logprob": -0.4636748234430949, "compression_ratio": 1.232, "no_speech_prob": 0.0953381359577179}, {"id": 576, "seek": 245896, "start": 2477.92, "end": 2480.92, "text": " Oh, yeah.", "tokens": [51312, 876, 11, 1338, 13, 51462], "temperature": 0.0, "avg_logprob": -0.4636748234430949, "compression_ratio": 1.232, "no_speech_prob": 0.0953381359577179}, {"id": 577, "seek": 248092, "start": 2480.92, "end": 2499.76, "text": " That's primarily a preference thing.", "tokens": [50364, 663, 311, 10029, 257, 17502, 551, 13, 51306], "temperature": 0.0, "avg_logprob": -0.32158387673867717, "compression_ratio": 1.1226415094339623, "no_speech_prob": 0.0019570053555071354}, {"id": 578, "seek": 248092, "start": 2499.76, "end": 2500.76, "text": " Yeah.", "tokens": [51306, 865, 13, 51356], "temperature": 0.0, "avg_logprob": -0.32158387673867717, "compression_ratio": 1.1226415094339623, "no_speech_prob": 0.0019570053555071354}, {"id": 579, "seek": 248092, "start": 2500.76, "end": 2501.76, "text": " No.", "tokens": [51356, 883, 13, 51406], "temperature": 0.0, "avg_logprob": -0.32158387673867717, "compression_ratio": 1.1226415094339623, "no_speech_prob": 0.0019570053555071354}, {"id": 580, "seek": 248092, "start": 2501.76, "end": 2508.44, "text": " No, like, performance or readability for general people, I would assume.", "tokens": [51406, 883, 11, 411, 11, 3389, 420, 1401, 2310, 337, 2674, 561, 11, 286, 576, 6552, 13, 51740], "temperature": 0.0, "avg_logprob": -0.32158387673867717, "compression_ratio": 1.1226415094339623, "no_speech_prob": 0.0019570053555071354}, {"id": 581, "seek": 250844, "start": 2508.44, "end": 2512.0, "text": " Some people prefer one way, some would prefer another.", "tokens": [50364, 2188, 561, 4382, 472, 636, 11, 512, 576, 4382, 1071, 13, 50542], "temperature": 0.0, "avg_logprob": -0.2760772705078125, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0803554505109787}, {"id": 582, "seek": 250844, "start": 2512.0, "end": 2513.48, "text": " In some cases it matters.", "tokens": [50542, 682, 512, 3331, 309, 7001, 13, 50616], "temperature": 0.0, "avg_logprob": -0.2760772705078125, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0803554505109787}, {"id": 583, "seek": 250844, "start": 2513.48, "end": 2516.16, "text": " But we can talk about that later.", "tokens": [50616, 583, 321, 393, 751, 466, 300, 1780, 13, 50750], "temperature": 0.0, "avg_logprob": -0.2760772705078125, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0803554505109787}, {"id": 584, "seek": 250844, "start": 2516.16, "end": 2517.8, "text": " All right.", "tokens": [50750, 1057, 558, 13, 50832], "temperature": 0.0, "avg_logprob": -0.2760772705078125, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0803554505109787}, {"id": 585, "seek": 250844, "start": 2517.8, "end": 2522.88, "text": " So then let's use this function.", "tokens": [50832, 407, 550, 718, 311, 764, 341, 2445, 13, 51086], "temperature": 0.0, "avg_logprob": -0.2760772705078125, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0803554505109787}, {"id": 586, "seek": 250844, "start": 2522.88, "end": 2530.6, "text": " So the inner part here from f up to these parentheses is the same function that we've", "tokens": [51086, 407, 264, 7284, 644, 510, 490, 283, 493, 281, 613, 34153, 307, 264, 912, 2445, 300, 321, 600, 51472], "temperature": 0.0, "avg_logprob": -0.2760772705078125, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0803554505109787}, {"id": 587, "seek": 250844, "start": 2530.6, "end": 2532.04, "text": " written already.", "tokens": [51472, 3720, 1217, 13, 51544], "temperature": 0.0, "avg_logprob": -0.2760772705078125, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0803554505109787}, {"id": 588, "seek": 250844, "start": 2532.04, "end": 2535.36, "text": " But now we're calling it with two parameters.", "tokens": [51544, 583, 586, 321, 434, 5141, 309, 365, 732, 9834, 13, 51710], "temperature": 0.0, "avg_logprob": -0.2760772705078125, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0803554505109787}, {"id": 589, "seek": 253536, "start": 2535.36, "end": 2541.56, "text": " We're calling it with a function that takes in a variable x and returns x plus 1.", "tokens": [50364, 492, 434, 5141, 309, 365, 257, 2445, 300, 2516, 294, 257, 7006, 2031, 293, 11247, 2031, 1804, 502, 13, 50674], "temperature": 0.0, "avg_logprob": -0.23988925709443934, "compression_ratio": 1.5396825396825398, "no_speech_prob": 0.15002383291721344}, {"id": 590, "seek": 253536, "start": 2541.56, "end": 2545.4, "text": " And we're calling it with the number 4.", "tokens": [50674, 400, 321, 434, 5141, 309, 365, 264, 1230, 1017, 13, 50866], "temperature": 0.0, "avg_logprob": -0.23988925709443934, "compression_ratio": 1.5396825396825398, "no_speech_prob": 0.15002383291721344}, {"id": 591, "seek": 253536, "start": 2545.4, "end": 2549.8, "text": " Right off the bat, what would you assume this program is going to output?", "tokens": [50866, 1779, 766, 264, 7362, 11, 437, 576, 291, 6552, 341, 1461, 307, 516, 281, 5598, 30, 51086], "temperature": 0.0, "avg_logprob": -0.23988925709443934, "compression_ratio": 1.5396825396825398, "no_speech_prob": 0.15002383291721344}, {"id": 592, "seek": 253536, "start": 2549.8, "end": 2554.76, "text": " What's the return value of this final thing?", "tokens": [51086, 708, 311, 264, 2736, 2158, 295, 341, 2572, 551, 30, 51334], "temperature": 0.0, "avg_logprob": -0.23988925709443934, "compression_ratio": 1.5396825396825398, "no_speech_prob": 0.15002383291721344}, {"id": 593, "seek": 253536, "start": 2554.76, "end": 2557.34, "text": " 6, right?", "tokens": [51334, 1386, 11, 558, 30, 51463], "temperature": 0.0, "avg_logprob": -0.23988925709443934, "compression_ratio": 1.5396825396825398, "no_speech_prob": 0.15002383291721344}, {"id": 594, "seek": 253536, "start": 2557.34, "end": 2561.28, "text": " We're going to call x plus 1 on 4 twice.", "tokens": [51463, 492, 434, 516, 281, 818, 2031, 1804, 502, 322, 1017, 6091, 13, 51660], "temperature": 0.0, "avg_logprob": -0.23988925709443934, "compression_ratio": 1.5396825396825398, "no_speech_prob": 0.15002383291721344}, {"id": 595, "seek": 256128, "start": 2561.28, "end": 2566.7200000000003, "text": " So we get 4 plus 1 is 5, plus 1 is 6.", "tokens": [50364, 407, 321, 483, 1017, 1804, 502, 307, 1025, 11, 1804, 502, 307, 1386, 13, 50636], "temperature": 0.0, "avg_logprob": -0.2907887883933194, "compression_ratio": 1.4157894736842105, "no_speech_prob": 0.006388278212398291}, {"id": 596, "seek": 256128, "start": 2566.7200000000003, "end": 2567.7200000000003, "text": " Okay.", "tokens": [50636, 1033, 13, 50686], "temperature": 0.0, "avg_logprob": -0.2907887883933194, "compression_ratio": 1.4157894736842105, "no_speech_prob": 0.006388278212398291}, {"id": 597, "seek": 256128, "start": 2567.7200000000003, "end": 2573.28, "text": " So this is how we would write and then use function composition.", "tokens": [50686, 407, 341, 307, 577, 321, 576, 2464, 293, 550, 764, 2445, 12686, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2907887883933194, "compression_ratio": 1.4157894736842105, "no_speech_prob": 0.006388278212398291}, {"id": 598, "seek": 256128, "start": 2573.28, "end": 2575.7200000000003, "text": " In JavaScript.", "tokens": [50964, 682, 15778, 13, 51086], "temperature": 0.0, "avg_logprob": -0.2907887883933194, "compression_ratio": 1.4157894736842105, "no_speech_prob": 0.006388278212398291}, {"id": 599, "seek": 256128, "start": 2575.7200000000003, "end": 2580.1200000000003, "text": " Let's do it in lambda calculus.", "tokens": [51086, 961, 311, 360, 309, 294, 13607, 33400, 13, 51306], "temperature": 0.0, "avg_logprob": -0.2907887883933194, "compression_ratio": 1.4157894736842105, "no_speech_prob": 0.006388278212398291}, {"id": 600, "seek": 256128, "start": 2580.1200000000003, "end": 2588.4, "text": " Here we've seen this, like, application before, where we're passing things in.", "tokens": [51306, 1692, 321, 600, 1612, 341, 11, 411, 11, 3861, 949, 11, 689, 321, 434, 8437, 721, 294, 13, 51720], "temperature": 0.0, "avg_logprob": -0.2907887883933194, "compression_ratio": 1.4157894736842105, "no_speech_prob": 0.006388278212398291}, {"id": 601, "seek": 256128, "start": 2588.4, "end": 2590.3, "text": " I guess we've done that over here.", "tokens": [51720, 286, 2041, 321, 600, 1096, 300, 670, 510, 13, 51815], "temperature": 0.0, "avg_logprob": -0.2907887883933194, "compression_ratio": 1.4157894736842105, "no_speech_prob": 0.006388278212398291}, {"id": 602, "seek": 259030, "start": 2590.3, "end": 2594.5600000000004, "text": " But the 5 is the argument.", "tokens": [50364, 583, 264, 1025, 307, 264, 6770, 13, 50577], "temperature": 0.0, "avg_logprob": -0.2251742026385139, "compression_ratio": 1.2584269662921348, "no_speech_prob": 0.013020348735153675}, {"id": 603, "seek": 259030, "start": 2594.5600000000004, "end": 2613.1400000000003, "text": " So what this would look like is something like lambda f dot lambda x dot f of f of x.", "tokens": [50577, 407, 437, 341, 576, 574, 411, 307, 746, 411, 13607, 283, 5893, 13607, 2031, 5893, 283, 295, 283, 295, 2031, 13, 51506], "temperature": 0.0, "avg_logprob": -0.2251742026385139, "compression_ratio": 1.2584269662921348, "no_speech_prob": 0.013020348735153675}, {"id": 604, "seek": 261314, "start": 2613.14, "end": 2626.3799999999997, "text": " And what we've done, if we look at it as a transformation, I guess I've put in these", "tokens": [50364, 400, 437, 321, 600, 1096, 11, 498, 321, 574, 412, 309, 382, 257, 1145, 8663, 11, 286, 2041, 286, 600, 829, 294, 613, 51026], "temperature": 0.0, "avg_logprob": -0.26380581855773927, "compression_ratio": 1.3605442176870748, "no_speech_prob": 0.06953854113817215}, {"id": 605, "seek": 261314, "start": 2626.3799999999997, "end": 2627.3799999999997, "text": " extra parentheses.", "tokens": [51026, 2857, 34153, 13, 51076], "temperature": 0.0, "avg_logprob": -0.26380581855773927, "compression_ratio": 1.3605442176870748, "no_speech_prob": 0.06953854113817215}, {"id": 606, "seek": 261314, "start": 2627.3799999999997, "end": 2631.2999999999997, "text": " We don't need to.", "tokens": [51076, 492, 500, 380, 643, 281, 13, 51272], "temperature": 0.0, "avg_logprob": -0.26380581855773927, "compression_ratio": 1.3605442176870748, "no_speech_prob": 0.06953854113817215}, {"id": 607, "seek": 261314, "start": 2631.2999999999997, "end": 2637.9, "text": " In JavaScript, we had our parameters on the left-hand side of this equal sign.", "tokens": [51272, 682, 15778, 11, 321, 632, 527, 9834, 322, 264, 1411, 12, 5543, 1252, 295, 341, 2681, 1465, 13, 51602], "temperature": 0.0, "avg_logprob": -0.26380581855773927, "compression_ratio": 1.3605442176870748, "no_speech_prob": 0.06953854113817215}, {"id": 608, "seek": 263790, "start": 2637.9, "end": 2646.14, "text": " In lambda calc, we have our parameters, x and f, on the left-hand side of these periods.", "tokens": [50364, 682, 13607, 2104, 66, 11, 321, 362, 527, 9834, 11, 2031, 293, 283, 11, 322, 264, 1411, 12, 5543, 1252, 295, 613, 13804, 13, 50776], "temperature": 0.0, "avg_logprob": -0.21515160464168934, "compression_ratio": 1.56, "no_speech_prob": 0.031142855063080788}, {"id": 609, "seek": 263790, "start": 2646.14, "end": 2648.34, "text": " Of the DOM.", "tokens": [50776, 2720, 264, 35727, 13, 50886], "temperature": 0.0, "avg_logprob": -0.21515160464168934, "compression_ratio": 1.56, "no_speech_prob": 0.031142855063080788}, {"id": 610, "seek": 263790, "start": 2648.34, "end": 2652.0, "text": " So x and f are our parameters.", "tokens": [50886, 407, 2031, 293, 283, 366, 527, 9834, 13, 51069], "temperature": 0.0, "avg_logprob": -0.21515160464168934, "compression_ratio": 1.56, "no_speech_prob": 0.031142855063080788}, {"id": 611, "seek": 263790, "start": 2652.0, "end": 2656.46, "text": " And our return is f of f of x.", "tokens": [51069, 400, 527, 2736, 307, 283, 295, 283, 295, 2031, 13, 51292], "temperature": 0.0, "avg_logprob": -0.21515160464168934, "compression_ratio": 1.56, "no_speech_prob": 0.031142855063080788}, {"id": 612, "seek": 263790, "start": 2656.46, "end": 2659.34, "text": " Which is f of f of x.", "tokens": [51292, 3013, 307, 283, 295, 283, 295, 2031, 13, 51436], "temperature": 0.0, "avg_logprob": -0.21515160464168934, "compression_ratio": 1.56, "no_speech_prob": 0.031142855063080788}, {"id": 613, "seek": 263790, "start": 2659.34, "end": 2665.46, "text": " And we could, if we wanted to, put in these extra parentheses, just to make it look more", "tokens": [51436, 400, 321, 727, 11, 498, 321, 1415, 281, 11, 829, 294, 613, 2857, 34153, 11, 445, 281, 652, 309, 574, 544, 51742], "temperature": 0.0, "avg_logprob": -0.21515160464168934, "compression_ratio": 1.56, "no_speech_prob": 0.031142855063080788}, {"id": 614, "seek": 266546, "start": 2665.46, "end": 2666.46, "text": " similar.", "tokens": [50364, 2531, 13, 50414], "temperature": 0.0, "avg_logprob": -0.32170301584097055, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.1422232687473297}, {"id": 615, "seek": 266546, "start": 2666.46, "end": 2670.9, "text": " But that would be kind of anti-lambda calc-y.", "tokens": [50414, 583, 300, 576, 312, 733, 295, 6061, 12, 75, 2173, 2675, 2104, 66, 12, 88, 13, 50636], "temperature": 0.0, "avg_logprob": -0.32170301584097055, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.1422232687473297}, {"id": 616, "seek": 266546, "start": 2670.9, "end": 2677.62, "text": " So we'll write it like that much more often.", "tokens": [50636, 407, 321, 603, 2464, 309, 411, 300, 709, 544, 2049, 13, 50972], "temperature": 0.0, "avg_logprob": -0.32170301584097055, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.1422232687473297}, {"id": 617, "seek": 266546, "start": 2677.62, "end": 2683.2, "text": " Okay.", "tokens": [50972, 1033, 13, 51251], "temperature": 0.0, "avg_logprob": -0.32170301584097055, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.1422232687473297}, {"id": 618, "seek": 266546, "start": 2683.2, "end": 2690.5, "text": " If we wanted to then pass in our parameters, lambda x dot\ufffd or x goes to x plus 1 and", "tokens": [51251, 759, 321, 1415, 281, 550, 1320, 294, 527, 9834, 11, 13607, 2031, 5893, 5342, 420, 2031, 1709, 281, 2031, 1804, 502, 293, 51616], "temperature": 0.0, "avg_logprob": -0.32170301584097055, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.1422232687473297}, {"id": 619, "seek": 269050, "start": 2690.5, "end": 2696.18, "text": " 4, that would look something like this.", "tokens": [50364, 1017, 11, 300, 576, 574, 746, 411, 341, 13, 50648], "temperature": 0.0, "avg_logprob": -0.2277268648147583, "compression_ratio": 1.6077348066298343, "no_speech_prob": 0.3140372633934021}, {"id": 620, "seek": 269050, "start": 2696.18, "end": 2704.7, "text": " Where we're turning our x goes to x plus 1 function into lambda x dot x plus 1.", "tokens": [50648, 2305, 321, 434, 6246, 527, 2031, 1709, 281, 2031, 1804, 502, 2445, 666, 13607, 2031, 5893, 2031, 1804, 502, 13, 51074], "temperature": 0.0, "avg_logprob": -0.2277268648147583, "compression_ratio": 1.6077348066298343, "no_speech_prob": 0.3140372633934021}, {"id": 621, "seek": 269050, "start": 2704.7, "end": 2709.7, "text": " Once again, notice the x, the parameter on the left-hand side of the equals corresponds", "tokens": [51074, 3443, 797, 11, 3449, 264, 2031, 11, 264, 13075, 322, 264, 1411, 12, 5543, 1252, 295, 264, 6915, 23249, 51324], "temperature": 0.0, "avg_logprob": -0.2277268648147583, "compression_ratio": 1.6077348066298343, "no_speech_prob": 0.3140372633934021}, {"id": 622, "seek": 269050, "start": 2709.7, "end": 2712.5, "text": " to the x before the period.", "tokens": [51324, 281, 264, 2031, 949, 264, 2896, 13, 51464], "temperature": 0.0, "avg_logprob": -0.2277268648147583, "compression_ratio": 1.6077348066298343, "no_speech_prob": 0.3140372633934021}, {"id": 623, "seek": 269050, "start": 2712.5, "end": 2716.94, "text": " The right-hand side corresponds to the right-hand side.", "tokens": [51464, 440, 558, 12, 5543, 1252, 23249, 281, 264, 558, 12, 5543, 1252, 13, 51686], "temperature": 0.0, "avg_logprob": -0.2277268648147583, "compression_ratio": 1.6077348066298343, "no_speech_prob": 0.3140372633934021}, {"id": 624, "seek": 271694, "start": 2716.94, "end": 2736.98, "text": " 4 is 4.", "tokens": [50364, 1017, 307, 1017, 13, 51366], "temperature": 0.0, "avg_logprob": -0.23092591762542725, "compression_ratio": 1.2583333333333333, "no_speech_prob": 0.392275869846344}, {"id": 625, "seek": 271694, "start": 2736.98, "end": 2740.14, "text": " We're gonna keep going and see a lot more examples of this.", "tokens": [51366, 492, 434, 799, 1066, 516, 293, 536, 257, 688, 544, 5110, 295, 341, 13, 51524], "temperature": 0.0, "avg_logprob": -0.23092591762542725, "compression_ratio": 1.2583333333333333, "no_speech_prob": 0.392275869846344}, {"id": 626, "seek": 271694, "start": 2740.14, "end": 2743.82, "text": " So if it's feeling confusing, that's totally fine.", "tokens": [51524, 407, 498, 309, 311, 2633, 13181, 11, 300, 311, 3879, 2489, 13, 51708], "temperature": 0.0, "avg_logprob": -0.23092591762542725, "compression_ratio": 1.2583333333333333, "no_speech_prob": 0.392275869846344}, {"id": 627, "seek": 271694, "start": 2743.82, "end": 2746.76, "text": " That's very much expected, even.", "tokens": [51708, 663, 311, 588, 709, 5176, 11, 754, 13, 51855], "temperature": 0.0, "avg_logprob": -0.23092591762542725, "compression_ratio": 1.2583333333333333, "no_speech_prob": 0.392275869846344}, {"id": 628, "seek": 274676, "start": 2747.5800000000004, "end": 2750.96, "text": " It will get less confusing the more that we look at it.", "tokens": [50405, 467, 486, 483, 1570, 13181, 264, 544, 300, 321, 574, 412, 309, 13, 50574], "temperature": 0.0, "avg_logprob": -0.2577493016312762, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.01472836546599865}, {"id": 629, "seek": 274676, "start": 2750.96, "end": 2752.96, "text": " Okay.", "tokens": [50574, 1033, 13, 50674], "temperature": 0.0, "avg_logprob": -0.2577493016312762, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.01472836546599865}, {"id": 630, "seek": 274676, "start": 2752.96, "end": 2759.8, "text": " And one way that we're gonna do this is just by doing a little, like, figure out is this", "tokens": [50674, 400, 472, 636, 300, 321, 434, 799, 360, 341, 307, 445, 538, 884, 257, 707, 11, 411, 11, 2573, 484, 307, 341, 51016], "temperature": 0.0, "avg_logprob": -0.2577493016312762, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.01472836546599865}, {"id": 631, "seek": 274676, "start": 2759.8, "end": 2762.44, "text": " valid, is this not?", "tokens": [51016, 7363, 11, 307, 341, 406, 30, 51148], "temperature": 0.0, "avg_logprob": -0.2577493016312762, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.01472836546599865}, {"id": 632, "seek": 274676, "start": 2762.44, "end": 2770.88, "text": " So if we had a term, lambda x plus y dot 3, is that valid?", "tokens": [51148, 407, 498, 321, 632, 257, 1433, 11, 13607, 2031, 1804, 288, 5893, 805, 11, 307, 300, 7363, 30, 51570], "temperature": 0.0, "avg_logprob": -0.2577493016312762, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.01472836546599865}, {"id": 633, "seek": 274676, "start": 2770.88, "end": 2773.44, "text": " Give it a second of thought.", "tokens": [51570, 5303, 309, 257, 1150, 295, 1194, 13, 51698], "temperature": 0.0, "avg_logprob": -0.2577493016312762, "compression_ratio": 1.4175824175824177, "no_speech_prob": 0.01472836546599865}, {"id": 634, "seek": 277344, "start": 2773.44, "end": 2781.84, "text": " You can try and go backwards from the final expression to an E, as we've done over here.", "tokens": [50364, 509, 393, 853, 293, 352, 12204, 490, 264, 2572, 6114, 281, 364, 462, 11, 382, 321, 600, 1096, 670, 510, 13, 50784], "temperature": 0.0, "avg_logprob": -0.2633294311224246, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.008187305182218552}, {"id": 635, "seek": 277344, "start": 2781.84, "end": 2784.18, "text": " If you get to E, then you're good.", "tokens": [50784, 759, 291, 483, 281, 462, 11, 550, 291, 434, 665, 13, 50901], "temperature": 0.0, "avg_logprob": -0.2633294311224246, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.008187305182218552}, {"id": 636, "seek": 277344, "start": 2784.18, "end": 2786.68, "text": " If you don't get to E, then you're bad.", "tokens": [50901, 759, 291, 500, 380, 483, 281, 462, 11, 550, 291, 434, 1578, 13, 51026], "temperature": 0.0, "avg_logprob": -0.2633294311224246, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.008187305182218552}, {"id": 637, "seek": 277344, "start": 2786.68, "end": 2790.96, "text": " Like, I mean, the program is bad, not you.", "tokens": [51026, 1743, 11, 286, 914, 11, 264, 1461, 307, 1578, 11, 406, 291, 13, 51240], "temperature": 0.0, "avg_logprob": -0.2633294311224246, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.008187305182218552}, {"id": 638, "seek": 277344, "start": 2790.96, "end": 2791.96, "text": " You guys are great.", "tokens": [51240, 509, 1074, 366, 869, 13, 51290], "temperature": 0.0, "avg_logprob": -0.2633294311224246, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.008187305182218552}, {"id": 639, "seek": 277344, "start": 2791.96, "end": 2794.76, "text": " Thanks for showing up to class.", "tokens": [51290, 2561, 337, 4099, 493, 281, 1508, 13, 51430], "temperature": 0.0, "avg_logprob": -0.2633294311224246, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.008187305182218552}, {"id": 640, "seek": 277344, "start": 2794.76, "end": 2799.76, "text": " But try and figure out, yes or no, is this valid?", "tokens": [51430, 583, 853, 293, 2573, 484, 11, 2086, 420, 572, 11, 307, 341, 220, 3337, 327, 30, 51680], "temperature": 0.0, "avg_logprob": -0.2633294311224246, "compression_ratio": 1.5323383084577114, "no_speech_prob": 0.008187305182218552}, {"id": 641, "seek": 279976, "start": 2799.76, "end": 2800.76, "text": " Okay.", "tokens": [50364, 1033, 13, 50414], "temperature": 0.4, "avg_logprob": -0.8972774687267485, "compression_ratio": 2.3714285714285714, "no_speech_prob": 0.6787152886390686}, {"id": 642, "seek": 279976, "start": 2800.76, "end": 2801.76, "text": " So let's do this.", "tokens": [50414, 407, 718, 311, 360, 341, 13, 50464], "temperature": 0.4, "avg_logprob": -0.8972774687267485, "compression_ratio": 2.3714285714285714, "no_speech_prob": 0.6787152886390686}, {"id": 643, "seek": 279976, "start": 2801.76, "end": 2802.76, "text": " So let's do this.", "tokens": [50464, 407, 718, 311, 360, 341, 13, 50514], "temperature": 0.4, "avg_logprob": -0.8972774687267485, "compression_ratio": 2.3714285714285714, "no_speech_prob": 0.6787152886390686}, {"id": 644, "seek": 279976, "start": 2802.76, "end": 2803.76, "text": " Okay.", "tokens": [50514, 1033, 13, 50564], "temperature": 0.4, "avg_logprob": -0.8972774687267485, "compression_ratio": 2.3714285714285714, "no_speech_prob": 0.6787152886390686}, {"id": 645, "seek": 279976, "start": 2803.76, "end": 2804.76, "text": " So let's do this.", "tokens": [50564, 407, 718, 311, 360, 341, 13, 50614], "temperature": 0.4, "avg_logprob": -0.8972774687267485, "compression_ratio": 2.3714285714285714, "no_speech_prob": 0.6787152886390686}, {"id": 646, "seek": 279976, "start": 2804.76, "end": 2805.76, "text": " So let's do this.", "tokens": [50614, 407, 718, 311, 360, 341, 13, 50664], "temperature": 0.4, "avg_logprob": -0.8972774687267485, "compression_ratio": 2.3714285714285714, "no_speech_prob": 0.6787152886390686}, {"id": 647, "seek": 280576, "start": 2805.76, "end": 2829.32, "text": " Okay.", "tokens": [50364, 1033, 13, 51542], "temperature": 0.0, "avg_logprob": -0.3457343843248155, "compression_ratio": 0.8596491228070176, "no_speech_prob": 0.09267959743738174}, {"id": 648, "seek": 280576, "start": 2829.32, "end": 2833.8, "text": " How many people are voting yes, valid term?", "tokens": [51542, 1012, 867, 561, 366, 10419, 2086, 11, 7363, 1433, 30, 51766], "temperature": 0.0, "avg_logprob": -0.3457343843248155, "compression_ratio": 0.8596491228070176, "no_speech_prob": 0.09267959743738174}, {"id": 649, "seek": 283380, "start": 2833.84, "end": 2836.44, "text": " How many people are voting no, not a valid term?", "tokens": [50366, 1012, 867, 561, 366, 10419, 572, 11, 406, 257, 7363, 1433, 30, 50496], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 650, "seek": 283380, "start": 2836.44, "end": 2837.44, "text": " All right.", "tokens": [50496, 1057, 558, 13, 50546], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 651, "seek": 283380, "start": 2837.44, "end": 2838.8, "text": " The nos have it.", "tokens": [50546, 440, 3269, 362, 309, 13, 50614], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 652, "seek": 283380, "start": 2838.8, "end": 2840.2000000000003, "text": " Why is it not valid?", "tokens": [50614, 1545, 307, 309, 406, 7363, 30, 50684], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 653, "seek": 283380, "start": 2840.2000000000003, "end": 2841.8, "text": " What's the problem here?", "tokens": [50684, 708, 311, 264, 1154, 510, 30, 50764], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 654, "seek": 283380, "start": 2841.8, "end": 2849.1200000000003, "text": " Yeah, in the back.", "tokens": [50764, 865, 11, 294, 264, 646, 13, 51130], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 655, "seek": 283380, "start": 2849.1200000000003, "end": 2850.1200000000003, "text": " That's exactly right.", "tokens": [51130, 663, 311, 2293, 558, 13, 51180], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 656, "seek": 283380, "start": 2850.1200000000003, "end": 2853.7200000000003, "text": " So we have x plus y on the left-hand side of that dot.", "tokens": [51180, 407, 321, 362, 2031, 1804, 288, 322, 264, 1411, 12, 5543, 1252, 295, 300, 5893, 13, 51360], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 657, "seek": 283380, "start": 2853.7200000000003, "end": 2862.1200000000003, "text": " We have a rule that allows us to use lambda x dot E, but we can't turn x plus y into x.", "tokens": [51360, 492, 362, 257, 4978, 300, 4045, 505, 281, 764, 13607, 2031, 5893, 462, 11, 457, 321, 393, 380, 1261, 2031, 1804, 288, 666, 2031, 13, 51780], "temperature": 0.0, "avg_logprob": -0.23044564173771784, "compression_ratio": 1.5, "no_speech_prob": 0.017712214961647987}, {"id": 658, "seek": 286212, "start": 2862.24, "end": 2867.3599999999997, "text": " We could turn x plus y into E, into another expression, but that's not valid.", "tokens": [50370, 492, 727, 1261, 2031, 1804, 288, 666, 462, 11, 666, 1071, 6114, 11, 457, 300, 311, 406, 7363, 13, 50626], "temperature": 0.0, "avg_logprob": -0.31058082580566404, "compression_ratio": 1.4424242424242424, "no_speech_prob": 0.0010005006333813071}, {"id": 659, "seek": 286212, "start": 2867.3599999999997, "end": 2869.56, "text": " That's not one of our production rules.", "tokens": [50626, 663, 311, 406, 472, 295, 527, 4265, 4474, 13, 50736], "temperature": 0.0, "avg_logprob": -0.31058082580566404, "compression_ratio": 1.4424242424242424, "no_speech_prob": 0.0010005006333813071}, {"id": 660, "seek": 286212, "start": 2869.56, "end": 2872.92, "text": " So yep, not valid here.", "tokens": [50736, 407, 18633, 11, 406, 7363, 510, 13, 50904], "temperature": 0.0, "avg_logprob": -0.31058082580566404, "compression_ratio": 1.4424242424242424, "no_speech_prob": 0.0010005006333813071}, {"id": 661, "seek": 286212, "start": 2872.92, "end": 2884.72, "text": " What about lambda x dot 3?", "tokens": [50904, 708, 466, 13607, 2031, 5893, 805, 30, 51494], "temperature": 0.0, "avg_logprob": -0.31058082580566404, "compression_ratio": 1.4424242424242424, "no_speech_prob": 0.0010005006333813071}, {"id": 662, "seek": 286212, "start": 2884.72, "end": 2887.3599999999997, "text": " How many people say yes, valid?", "tokens": [51494, 1012, 867, 561, 584, 2086, 11, 7363, 30, 51626], "temperature": 0.0, "avg_logprob": -0.31058082580566404, "compression_ratio": 1.4424242424242424, "no_speech_prob": 0.0010005006333813071}, {"id": 663, "seek": 286212, "start": 2887.3599999999997, "end": 2888.6, "text": " No, not valid.", "tokens": [51626, 883, 11, 406, 7363, 13, 51688], "temperature": 0.0, "avg_logprob": -0.31058082580566404, "compression_ratio": 1.4424242424242424, "no_speech_prob": 0.0010005006333813071}, {"id": 664, "seek": 286212, "start": 2888.6, "end": 2890.0, "text": " All right.", "tokens": [51688, 1057, 558, 13, 51758], "temperature": 0.0, "avg_logprob": -0.31058082580566404, "compression_ratio": 1.4424242424242424, "no_speech_prob": 0.0010005006333813071}, {"id": 665, "seek": 286212, "start": 2890.0, "end": 2891.62, "text": " Yes, valid.", "tokens": [51758, 1079, 11, 7363, 13, 51839], "temperature": 0.0, "avg_logprob": -0.31058082580566404, "compression_ratio": 1.4424242424242424, "no_speech_prob": 0.0010005006333813071}, {"id": 666, "seek": 289162, "start": 2891.62, "end": 2898.18, "text": " We can turn 3 into E1, and then lambda x dot E1, we just use that second rule to turn", "tokens": [50364, 492, 393, 1261, 805, 666, 462, 16, 11, 293, 550, 13607, 2031, 5893, 462, 16, 11, 321, 445, 764, 300, 1150, 4978, 281, 1261, 50692], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 667, "seek": 289162, "start": 2898.18, "end": 2900.2999999999997, "text": " it back into E. Great.", "tokens": [50692, 309, 646, 666, 462, 13, 3769, 13, 50798], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 668, "seek": 289162, "start": 2900.2999999999997, "end": 2904.2599999999998, "text": " What about lambda x x of x?", "tokens": [50798, 708, 466, 13607, 2031, 2031, 295, 2031, 30, 50996], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 669, "seek": 289162, "start": 2904.2599999999998, "end": 2907.58, "text": " Valid, not valid?", "tokens": [50996, 7188, 327, 11, 406, 7363, 30, 51162], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 670, "seek": 289162, "start": 2907.58, "end": 2911.06, "text": " How many people say valid?", "tokens": [51162, 1012, 867, 561, 584, 7363, 30, 51336], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 671, "seek": 289162, "start": 2911.06, "end": 2912.62, "text": " How many people say not valid?", "tokens": [51336, 1012, 867, 561, 584, 406, 7363, 30, 51414], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 672, "seek": 289162, "start": 2912.62, "end": 2913.98, "text": " All right.", "tokens": [51414, 1057, 558, 13, 51482], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 673, "seek": 289162, "start": 2913.98, "end": 2915.74, "text": " A majority of valid.", "tokens": [51482, 316, 6286, 295, 7363, 13, 51570], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 674, "seek": 289162, "start": 2915.74, "end": 2917.2999999999997, "text": " Yeah, this one is fine.", "tokens": [51570, 865, 11, 341, 472, 307, 2489, 13, 51648], "temperature": 0.0, "avg_logprob": -0.30832641355453, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.003945391625165939}, {"id": 675, "seek": 291730, "start": 2917.3, "end": 2926.26, "text": " So we can turn xx, this inside part, into E1, E2, and then E1, E2 turns into E3, and", "tokens": [50364, 407, 321, 393, 1261, 2031, 87, 11, 341, 1854, 644, 11, 666, 462, 16, 11, 462, 17, 11, 293, 550, 462, 16, 11, 462, 17, 4523, 666, 462, 18, 11, 293, 50812], "temperature": 0.0, "avg_logprob": -0.22488073869185013, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.016914507374167442}, {"id": 676, "seek": 291730, "start": 2926.26, "end": 2931.42, "text": " then lambda x E3 turns into E4.", "tokens": [50812, 550, 13607, 2031, 462, 18, 4523, 666, 462, 19, 13, 51070], "temperature": 0.0, "avg_logprob": -0.22488073869185013, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.016914507374167442}, {"id": 677, "seek": 291730, "start": 2931.42, "end": 2934.1400000000003, "text": " How about this one?", "tokens": [51070, 1012, 466, 341, 472, 30, 51206], "temperature": 0.0, "avg_logprob": -0.22488073869185013, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.016914507374167442}, {"id": 678, "seek": 291730, "start": 2934.1400000000003, "end": 2936.5800000000004, "text": " Very similar, but we've replaced one of the x's with a y.", "tokens": [51206, 4372, 2531, 11, 457, 321, 600, 10772, 472, 295, 264, 2031, 311, 365, 257, 288, 13, 51328], "temperature": 0.0, "avg_logprob": -0.22488073869185013, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.016914507374167442}, {"id": 679, "seek": 291730, "start": 2936.5800000000004, "end": 2945.82, "text": " Valid?", "tokens": [51328, 7188, 327, 30, 51790], "temperature": 0.0, "avg_logprob": -0.22488073869185013, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.016914507374167442}, {"id": 680, "seek": 294582, "start": 2945.82, "end": 2947.26, "text": " Not valid.", "tokens": [50364, 1726, 7363, 13, 50436], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 681, "seek": 294582, "start": 2947.26, "end": 2949.54, "text": " All right.", "tokens": [50436, 1057, 558, 13, 50550], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 682, "seek": 294582, "start": 2949.54, "end": 2951.34, "text": " Most people are saying valid here.", "tokens": [50550, 4534, 561, 366, 1566, 7363, 510, 13, 50640], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 683, "seek": 294582, "start": 2951.34, "end": 2952.6600000000003, "text": " I'm in agreement.", "tokens": [50640, 286, 478, 294, 8106, 13, 50706], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 684, "seek": 294582, "start": 2952.6600000000003, "end": 2960.42, "text": " The one caveat being that I've said E goes to x, so long as x is the set of variables.", "tokens": [50706, 440, 472, 43012, 885, 300, 286, 600, 848, 462, 1709, 281, 2031, 11, 370, 938, 382, 2031, 307, 264, 992, 295, 9102, 13, 51094], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 685, "seek": 294582, "start": 2960.42, "end": 2963.88, "text": " So we can name our variables anything we want.", "tokens": [51094, 407, 321, 393, 1315, 527, 9102, 1340, 321, 528, 13, 51267], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 686, "seek": 294582, "start": 2963.88, "end": 2971.2200000000003, "text": " In this case, we're naming one of our variables y instead of x, which is fine.", "tokens": [51267, 682, 341, 1389, 11, 321, 434, 25290, 472, 295, 527, 9102, 288, 2602, 295, 2031, 11, 597, 307, 2489, 13, 51634], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 687, "seek": 294582, "start": 2971.2200000000003, "end": 2972.2200000000003, "text": " But we don't know what y is.", "tokens": [51634, 583, 321, 500, 380, 458, 437, 288, 307, 13, 51684], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 688, "seek": 294582, "start": 2972.2200000000003, "end": 2974.54, "text": " But that's also fine.", "tokens": [51684, 583, 300, 311, 611, 2489, 13, 51800], "temperature": 0.0, "avg_logprob": -0.2444003123157429, "compression_ratio": 1.5504587155963303, "no_speech_prob": 0.1602630466222763}, {"id": 689, "seek": 297454, "start": 2974.54, "end": 2977.38, "text": " Okay.", "tokens": [50364, 1033, 13, 50506], "temperature": 0.0, "avg_logprob": -0.23075477444395728, "compression_ratio": 1.335820895522388, "no_speech_prob": 0.0029810075648128986}, {"id": 690, "seek": 297454, "start": 2977.38, "end": 2991.7799999999997, "text": " Any questions on any of these problems here?", "tokens": [50506, 2639, 1651, 322, 604, 295, 613, 2740, 510, 30, 51226], "temperature": 0.0, "avg_logprob": -0.23075477444395728, "compression_ratio": 1.335820895522388, "no_speech_prob": 0.0029810075648128986}, {"id": 691, "seek": 297454, "start": 2991.7799999999997, "end": 2999.18, "text": " Since we're in PL, and PL people are mathematicians, and mathematicians are very tired of writing,", "tokens": [51226, 4162, 321, 434, 294, 6999, 11, 293, 6999, 561, 366, 32811, 2567, 11, 293, 32811, 2567, 366, 588, 5868, 295, 3579, 11, 51596], "temperature": 0.0, "avg_logprob": -0.23075477444395728, "compression_ratio": 1.335820895522388, "no_speech_prob": 0.0029810075648128986}, {"id": 692, "seek": 297454, "start": 2999.18, "end": 3003.02, "text": " there is more compact syntax.", "tokens": [51596, 456, 307, 544, 14679, 28431, 13, 51788], "temperature": 0.0, "avg_logprob": -0.23075477444395728, "compression_ratio": 1.335820895522388, "no_speech_prob": 0.0029810075648128986}, {"id": 693, "seek": 300302, "start": 3003.02, "end": 3009.9, "text": " So for example, function application, that is E1, E2, is left associative.", "tokens": [50364, 407, 337, 1365, 11, 2445, 3861, 11, 300, 307, 462, 16, 11, 462, 17, 11, 307, 1411, 4180, 1166, 13, 50708], "temperature": 0.0, "avg_logprob": -0.24274422905661844, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.03676852211356163}, {"id": 694, "seek": 300302, "start": 3009.9, "end": 3016.2, "text": " That means you perform the left application before the right-hand application.", "tokens": [50708, 663, 1355, 291, 2042, 264, 1411, 3861, 949, 264, 558, 12, 5543, 3861, 13, 51023], "temperature": 0.0, "avg_logprob": -0.24274422905661844, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.03676852211356163}, {"id": 695, "seek": 300302, "start": 3016.2, "end": 3024.62, "text": " So E1, E2, E3 is equivalent to E1 applied to E2, the result of that applied to E3.", "tokens": [51023, 407, 462, 16, 11, 462, 17, 11, 462, 18, 307, 10344, 281, 462, 16, 6456, 281, 462, 17, 11, 264, 1874, 295, 300, 6456, 281, 462, 18, 13, 51444], "temperature": 0.0, "avg_logprob": -0.24274422905661844, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.03676852211356163}, {"id": 696, "seek": 300302, "start": 3024.62, "end": 3029.86, "text": " So we don't need those parentheses if we don't want to use them.", "tokens": [51444, 407, 321, 500, 380, 643, 729, 34153, 498, 321, 500, 380, 528, 281, 764, 552, 13, 51706], "temperature": 0.0, "avg_logprob": -0.24274422905661844, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.03676852211356163}, {"id": 697, "seek": 302986, "start": 3030.06, "end": 3037.98, "text": " Lambdas, on the other hand, that is to say lambda abstraction or functions, bind all", "tokens": [50374, 18825, 65, 27476, 11, 322, 264, 661, 1011, 11, 300, 307, 281, 584, 13607, 37765, 420, 6828, 11, 14786, 439, 50770], "temperature": 0.0, "avg_logprob": -0.2748890195574079, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.003324389224871993}, {"id": 698, "seek": 302986, "start": 3037.98, "end": 3041.26, "text": " the way to the right.", "tokens": [50770, 264, 636, 281, 264, 558, 13, 50934], "temperature": 0.0, "avg_logprob": -0.2748890195574079, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.003324389224871993}, {"id": 699, "seek": 302986, "start": 3041.26, "end": 3050.26, "text": " What that means is that when we have lambda x dot lambda y dot lambda z dot E, this outside", "tokens": [50934, 708, 300, 1355, 307, 300, 562, 321, 362, 13607, 2031, 5893, 13607, 288, 5893, 13607, 710, 5893, 462, 11, 341, 2380, 51384], "temperature": 0.0, "avg_logprob": -0.2748890195574079, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.003324389224871993}, {"id": 700, "seek": 302986, "start": 3050.26, "end": 3056.2200000000003, "text": " lambda x goes all the way to the end of the E.", "tokens": [51384, 13607, 2031, 1709, 439, 264, 636, 281, 264, 917, 295, 264, 462, 13, 51682], "temperature": 0.0, "avg_logprob": -0.2748890195574079, "compression_ratio": 1.6896551724137931, "no_speech_prob": 0.003324389224871993}, {"id": 701, "seek": 305622, "start": 3056.22, "end": 3059.7, "text": " We're going to go into a lot of examples of how to use this rule.", "tokens": [50364, 492, 434, 516, 281, 352, 666, 257, 688, 295, 5110, 295, 577, 281, 764, 341, 4978, 13, 50538], "temperature": 0.0, "avg_logprob": -0.18573980620413116, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.020644713193178177}, {"id": 702, "seek": 305622, "start": 3059.7, "end": 3064.2599999999998, "text": " So I'm not going to get too far into it now.", "tokens": [50538, 407, 286, 478, 406, 516, 281, 483, 886, 1400, 666, 309, 586, 13, 50766], "temperature": 0.0, "avg_logprob": -0.18573980620413116, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.020644713193178177}, {"id": 703, "seek": 305622, "start": 3064.2599999999998, "end": 3071.74, "text": " But the trick is that you stop the, like, bounds of your lambda when you find an unmatched", "tokens": [50766, 583, 264, 4282, 307, 300, 291, 1590, 264, 11, 411, 11, 29905, 295, 428, 13607, 562, 291, 915, 364, 19334, 24102, 51140], "temperature": 0.0, "avg_logprob": -0.18573980620413116, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.020644713193178177}, {"id": 704, "seek": 305622, "start": 3071.74, "end": 3073.54, "text": " closing parentheses.", "tokens": [51140, 10377, 34153, 13, 51230], "temperature": 0.0, "avg_logprob": -0.18573980620413116, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.020644713193178177}, {"id": 705, "seek": 305622, "start": 3073.54, "end": 3078.5, "text": " You can think of this as the same algorithm with curly braces.", "tokens": [51230, 509, 393, 519, 295, 341, 382, 264, 912, 9284, 365, 32066, 41537, 13, 51478], "temperature": 0.0, "avg_logprob": -0.18573980620413116, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.020644713193178177}, {"id": 706, "seek": 305622, "start": 3078.5, "end": 3084.62, "text": " When you open a curly brace at the start of a function, that function contains the scope", "tokens": [51478, 1133, 291, 1269, 257, 32066, 38458, 412, 264, 722, 295, 257, 2445, 11, 300, 2445, 8306, 264, 11923, 51784], "temperature": 0.0, "avg_logprob": -0.18573980620413116, "compression_ratio": 1.6475770925110131, "no_speech_prob": 0.020644713193178177}, {"id": 707, "seek": 308462, "start": 3084.62, "end": 3092.74, "text": " of everything until you close the curly brace for it.", "tokens": [50364, 295, 1203, 1826, 291, 1998, 264, 32066, 38458, 337, 309, 13, 50770], "temperature": 0.0, "avg_logprob": -0.34095548972105366, "compression_ratio": 1.1574074074074074, "no_speech_prob": 0.10230164974927902}, {"id": 708, "seek": 308462, "start": 3092.74, "end": 3096.58, "text": " Okay.", "tokens": [50770, 1033, 13, 50962], "temperature": 0.0, "avg_logprob": -0.34095548972105366, "compression_ratio": 1.1574074074074074, "no_speech_prob": 0.10230164974927902}, {"id": 709, "seek": 308462, "start": 3096.58, "end": 3103.5, "text": " So where do parentheses go in this expression?", "tokens": [50962, 407, 689, 360, 34153, 352, 294, 341, 6114, 30, 51308], "temperature": 0.0, "avg_logprob": -0.34095548972105366, "compression_ratio": 1.1574074074074074, "no_speech_prob": 0.10230164974927902}, {"id": 710, "seek": 308462, "start": 3103.5, "end": 3107.06, "text": " Lambda x dot x, x.", "tokens": [51308, 45691, 2031, 5893, 2031, 11, 2031, 13, 51486], "temperature": 0.0, "avg_logprob": -0.34095548972105366, "compression_ratio": 1.1574074074074074, "no_speech_prob": 0.10230164974927902}, {"id": 711, "seek": 310706, "start": 3107.06, "end": 3116.7799999999997, "text": " Do they go around the body, the xx, or around the lambda abstraction?", "tokens": [50364, 1144, 436, 352, 926, 264, 1772, 11, 264, 2031, 87, 11, 420, 926, 264, 13607, 37765, 30, 50850], "temperature": 0.0, "avg_logprob": -0.3537674971989223, "compression_ratio": 1.123456790123457, "no_speech_prob": 0.11756233870983124}, {"id": 712, "seek": 310706, "start": 3116.7799999999997, "end": 3118.14, "text": " Chat with a neighbor.", "tokens": [50850, 27503, 365, 257, 5987, 13, 50918], "temperature": 0.0, "avg_logprob": -0.3537674971989223, "compression_ratio": 1.123456790123457, "no_speech_prob": 0.11756233870983124}, {"id": 713, "seek": 311814, "start": 3118.14, "end": 3119.3399999999997, "text": " Try and come up with an answer.", "tokens": [50364, 6526, 293, 808, 493, 365, 364, 1867, 13, 50424], "temperature": 0.0, "avg_logprob": -0.6143077047247636, "compression_ratio": 0.9245283018867925, "no_speech_prob": 0.9081161022186279}, {"id": 714, "seek": 311814, "start": 3119.3399999999997, "end": 3133.3399999999997, "text": " And a reason why.", "tokens": [50424, 400, 257, 1778, 983, 13, 51124], "temperature": 0.0, "avg_logprob": -0.6143077047247636, "compression_ratio": 0.9245283018867925, "no_speech_prob": 0.9081161022186279}, {"id": 715, "seek": 316334, "start": 3163.34, "end": 3178.86, "text": " How many people say A is correct?", "tokens": [50364, 1012, 867, 561, 584, 316, 307, 3006, 30, 51140], "temperature": 0.0, "avg_logprob": -0.38971213499705, "compression_ratio": 1.3870967741935485, "no_speech_prob": 0.007345779333263636}, {"id": 716, "seek": 316334, "start": 3178.86, "end": 3181.7400000000002, "text": " How many people say B is correct?", "tokens": [51140, 1012, 867, 561, 584, 363, 307, 3006, 30, 51284], "temperature": 0.0, "avg_logprob": -0.38971213499705, "compression_ratio": 1.3870967741935485, "no_speech_prob": 0.007345779333263636}, {"id": 717, "seek": 316334, "start": 3181.7400000000002, "end": 3183.42, "text": " All right.", "tokens": [51284, 1057, 558, 13, 51368], "temperature": 0.0, "avg_logprob": -0.38971213499705, "compression_ratio": 1.3870967741935485, "no_speech_prob": 0.007345779333263636}, {"id": 718, "seek": 316334, "start": 3183.42, "end": 3187.42, "text": " Why is A correct?", "tokens": [51368, 1545, 307, 316, 3006, 30, 51568], "temperature": 0.0, "avg_logprob": -0.38971213499705, "compression_ratio": 1.3870967741935485, "no_speech_prob": 0.007345779333263636}, {"id": 719, "seek": 316334, "start": 3187.42, "end": 3189.34, "text": " Who's got a reason for me?", "tokens": [51568, 2102, 311, 658, 257, 1778, 337, 385, 30, 51664], "temperature": 0.0, "avg_logprob": -0.38971213499705, "compression_ratio": 1.3870967741935485, "no_speech_prob": 0.007345779333263636}, {"id": 720, "seek": 316334, "start": 3189.34, "end": 3190.34, "text": " Yeah.", "tokens": [51664, 865, 13, 51714], "temperature": 0.0, "avg_logprob": -0.38971213499705, "compression_ratio": 1.3870967741935485, "no_speech_prob": 0.007345779333263636}, {"id": 721, "seek": 319034, "start": 3190.34, "end": 3195.5, "text": " Exactly.", "tokens": [50364, 7587, 13, 50622], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 722, "seek": 319034, "start": 3195.5, "end": 3199.96, "text": " So lambdas bind all the way to the right until an unmatched closing parentheses.", "tokens": [50622, 407, 10097, 27476, 14786, 439, 264, 636, 281, 264, 558, 1826, 364, 19334, 24102, 10377, 34153, 13, 50845], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 723, "seek": 319034, "start": 3199.96, "end": 3201.44, "text": " There are no parentheses.", "tokens": [50845, 821, 366, 572, 34153, 13, 50919], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 724, "seek": 319034, "start": 3201.44, "end": 3203.2000000000003, "text": " So lambdas go all the way.", "tokens": [50919, 407, 10097, 27476, 352, 439, 264, 636, 13, 51007], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 725, "seek": 319034, "start": 3203.2000000000003, "end": 3207.6600000000003, "text": " That means everything in the body is part of the lambda.", "tokens": [51007, 663, 1355, 1203, 294, 264, 1772, 307, 644, 295, 264, 13607, 13, 51230], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 726, "seek": 319034, "start": 3207.6600000000003, "end": 3208.7000000000003, "text": " Is this other...", "tokens": [51230, 1119, 341, 661, 485, 51282], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 727, "seek": 319034, "start": 3208.7000000000003, "end": 3212.38, "text": " Is B a valid expression in lambda calculus?", "tokens": [51282, 1119, 363, 257, 7363, 6114, 294, 13607, 33400, 30, 51466], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 728, "seek": 319034, "start": 3212.38, "end": 3213.82, "text": " Yes?", "tokens": [51466, 1079, 30, 51538], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 729, "seek": 319034, "start": 3213.82, "end": 3215.1400000000003, "text": " No.", "tokens": [51538, 883, 13, 51604], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 730, "seek": 319034, "start": 3215.1400000000003, "end": 3218.82, "text": " All right.", "tokens": [51604, 1057, 558, 13, 51788], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 731, "seek": 319034, "start": 3218.82, "end": 3219.82, "text": " Let's do it again.", "tokens": [51788, 961, 311, 360, 309, 797, 13, 51838], "temperature": 0.0, "avg_logprob": -0.3186761572005901, "compression_ratio": 1.5572916666666667, "no_speech_prob": 0.027584919705986977}, {"id": 732, "seek": 321982, "start": 3220.3, "end": 3223.3, "text": " Is B a valid term in lambda calculus?", "tokens": [50388, 1119, 363, 257, 7363, 1433, 294, 13607, 2104, 66, 26107, 30, 50538], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 733, "seek": 321982, "start": 3223.3, "end": 3224.3, "text": " Yes?", "tokens": [50538, 1079, 30, 50588], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 734, "seek": 321982, "start": 3224.3, "end": 3225.3, "text": " No.", "tokens": [50588, 883, 13, 50638], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 735, "seek": 321982, "start": 3225.3, "end": 3226.3, "text": " All right.", "tokens": [50638, 1057, 558, 13, 50688], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 736, "seek": 321982, "start": 3226.3, "end": 3227.3, "text": " It is.", "tokens": [50688, 467, 307, 13, 50738], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 737, "seek": 321982, "start": 3227.3, "end": 3229.46, "text": " It is valid.", "tokens": [50738, 467, 307, 7363, 13, 50846], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 738, "seek": 321982, "start": 3229.46, "end": 3236.42, "text": " We could replace lambda x dot x using the second rule into E and turn x into E as well.", "tokens": [50846, 492, 727, 7406, 13607, 2031, 5893, 2031, 1228, 264, 1150, 4978, 666, 462, 293, 1261, 2031, 666, 462, 382, 731, 13, 51194], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 739, "seek": 321982, "start": 3236.42, "end": 3237.54, "text": " E1, E2.", "tokens": [51194, 462, 16, 11, 462, 17, 13, 51250], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 740, "seek": 321982, "start": 3237.54, "end": 3238.54, "text": " So it's valid.", "tokens": [51250, 407, 309, 311, 7363, 13, 51300], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 741, "seek": 321982, "start": 3238.54, "end": 3240.46, "text": " It's just different.", "tokens": [51300, 467, 311, 445, 819, 13, 51396], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 742, "seek": 321982, "start": 3240.46, "end": 3243.3, "text": " It's not what we were saying when we wrote that top term.", "tokens": [51396, 467, 311, 406, 437, 321, 645, 1566, 562, 321, 4114, 300, 1192, 1433, 13, 51538], "temperature": 0.0, "avg_logprob": -0.2810978889465332, "compression_ratio": 1.459016393442623, "no_speech_prob": 0.01566353626549244}, {"id": 743, "seek": 324330, "start": 3243.3, "end": 3249.1400000000003, "text": " Yeah.", "tokens": [50364, 865, 13, 50656], "temperature": 0.0, "avg_logprob": -0.31992332656662187, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.004399250727146864}, {"id": 744, "seek": 324330, "start": 3249.1400000000003, "end": 3252.5, "text": " So if we didn't have...", "tokens": [50656, 407, 498, 321, 994, 380, 362, 485, 50824], "temperature": 0.0, "avg_logprob": -0.31992332656662187, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.004399250727146864}, {"id": 745, "seek": 324330, "start": 3252.5, "end": 3255.1800000000003, "text": " Oops.", "tokens": [50824, 21726, 13, 50958], "temperature": 0.0, "avg_logprob": -0.31992332656662187, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.004399250727146864}, {"id": 746, "seek": 324330, "start": 3255.1800000000003, "end": 3261.1000000000004, "text": " If we didn't have these two rules, it would be ambiguous to say...", "tokens": [50958, 759, 321, 994, 380, 362, 613, 732, 4474, 11, 309, 576, 312, 39465, 281, 584, 485, 51254], "temperature": 0.0, "avg_logprob": -0.31992332656662187, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.004399250727146864}, {"id": 747, "seek": 324330, "start": 3261.1000000000004, "end": 3262.86, "text": " To give that term up top.", "tokens": [51254, 1407, 976, 300, 1433, 493, 1192, 13, 51342], "temperature": 0.0, "avg_logprob": -0.31992332656662187, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.004399250727146864}, {"id": 748, "seek": 324330, "start": 3262.86, "end": 3266.54, "text": " We wouldn't know which one this is being represented by.", "tokens": [51342, 492, 2759, 380, 458, 597, 472, 341, 307, 885, 10379, 538, 13, 51526], "temperature": 0.0, "avg_logprob": -0.31992332656662187, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.004399250727146864}, {"id": 749, "seek": 324330, "start": 3266.54, "end": 3271.9, "text": " But because we have these two rules, we know what that term means.", "tokens": [51526, 583, 570, 321, 362, 613, 732, 4474, 11, 321, 458, 437, 300, 1433, 1355, 13, 51794], "temperature": 0.0, "avg_logprob": -0.31992332656662187, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.004399250727146864}, {"id": 750, "seek": 327190, "start": 3271.9, "end": 3272.9, "text": " Yeah.", "tokens": [50364, 865, 13, 50414], "temperature": 0.0, "avg_logprob": -0.22810904184977213, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.01566353067755699}, {"id": 751, "seek": 327190, "start": 3272.9, "end": 3273.9, "text": " All right.", "tokens": [50414, 1057, 558, 13, 50464], "temperature": 0.0, "avg_logprob": -0.22810904184977213, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.01566353067755699}, {"id": 752, "seek": 327190, "start": 3273.9, "end": 3276.86, "text": " What about this one?", "tokens": [50464, 708, 466, 341, 472, 30, 50612], "temperature": 0.0, "avg_logprob": -0.22810904184977213, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.01566353067755699}, {"id": 753, "seek": 327190, "start": 3276.86, "end": 3292.94, "text": " Lambda y dot lambda x, x, x.", "tokens": [50612, 45691, 288, 5893, 13607, 2031, 11, 2031, 11, 2031, 13, 51416], "temperature": 0.0, "avg_logprob": -0.22810904184977213, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.01566353067755699}, {"id": 754, "seek": 327190, "start": 3292.94, "end": 3295.94, "text": " How many people vote A?", "tokens": [51416, 1012, 867, 561, 4740, 316, 30, 51566], "temperature": 0.0, "avg_logprob": -0.22810904184977213, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.01566353067755699}, {"id": 755, "seek": 327190, "start": 3295.94, "end": 3298.1800000000003, "text": " How many people vote B?", "tokens": [51566, 1012, 867, 561, 4740, 363, 30, 51678], "temperature": 0.0, "avg_logprob": -0.22810904184977213, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.01566353067755699}, {"id": 756, "seek": 327190, "start": 3298.1800000000003, "end": 3300.5, "text": " How many people vote C?", "tokens": [51678, 1012, 867, 561, 4740, 383, 30, 51794], "temperature": 0.0, "avg_logprob": -0.22810904184977213, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.01566353067755699}, {"id": 757, "seek": 330050, "start": 3300.5, "end": 3301.5, "text": " How many people vote...", "tokens": [50364, 1012, 867, 561, 4740, 485, 50414], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 758, "seek": 330050, "start": 3301.5, "end": 3302.74, "text": " We've spent too much time on it.", "tokens": [50414, 492, 600, 4418, 886, 709, 565, 322, 309, 13, 50476], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 759, "seek": 330050, "start": 3302.74, "end": 3303.74, "text": " All right.", "tokens": [50476, 1057, 558, 13, 50526], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 760, "seek": 330050, "start": 3303.74, "end": 3304.74, "text": " I mean, you guys all got it.", "tokens": [50526, 286, 914, 11, 291, 1074, 439, 658, 309, 13, 50576], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 761, "seek": 330050, "start": 3304.74, "end": 3305.74, "text": " This is great.", "tokens": [50576, 639, 307, 869, 13, 50626], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 762, "seek": 330050, "start": 3305.74, "end": 3306.74, "text": " Yeah.", "tokens": [50626, 865, 13, 50676], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 763, "seek": 330050, "start": 3306.74, "end": 3312.42, "text": " So B here, by the same logic as the previous slide, lambdas go all the way until they find", "tokens": [50676, 407, 363, 510, 11, 538, 264, 912, 9952, 382, 264, 3894, 4137, 11, 10097, 27476, 352, 439, 264, 636, 1826, 436, 915, 50960], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 764, "seek": 330050, "start": 3312.42, "end": 3314.74, "text": " a nonmatched closing parenthesis.", "tokens": [50960, 257, 2107, 76, 24102, 10377, 23350, 9374, 13, 51076], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 765, "seek": 330050, "start": 3314.74, "end": 3317.18, "text": " All right.", "tokens": [51076, 1057, 558, 13, 51198], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 766, "seek": 330050, "start": 3317.18, "end": 3319.62, "text": " I think this is the last one of these.", "tokens": [51198, 286, 519, 341, 307, 264, 1036, 472, 295, 613, 13, 51320], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 767, "seek": 330050, "start": 3319.62, "end": 3325.62, "text": " Are these two equivalent?", "tokens": [51320, 2014, 613, 732, 10344, 30, 51620], "temperature": 0.0, "avg_logprob": -0.33159630115215594, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.05834534019231796}, {"id": 768, "seek": 332562, "start": 3326.62, "end": 3333.62, "text": " Yes.", "tokens": [50414, 1079, 13, 50764], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 769, "seek": 332562, "start": 3333.62, "end": 3334.62, "text": " They are equivalent.", "tokens": [50764, 814, 366, 10344, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 770, "seek": 332562, "start": 3334.62, "end": 3335.62, "text": " No.", "tokens": [50814, 883, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 771, "seek": 332562, "start": 3335.62, "end": 3336.62, "text": " They are not equivalent.", "tokens": [50864, 814, 366, 406, 10344, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 772, "seek": 332562, "start": 3336.62, "end": 3337.62, "text": " No.", "tokens": [50914, 883, 13, 50964], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 773, "seek": 332562, "start": 3337.62, "end": 3338.62, "text": " They are not equivalent.", "tokens": [50964, 814, 366, 406, 10344, 13, 51014], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 774, "seek": 332562, "start": 3338.62, "end": 3339.62, "text": " Great.", "tokens": [51014, 3769, 13, 51064], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 775, "seek": 332562, "start": 3339.62, "end": 3341.2999999999997, "text": " You guys seem to be getting it.", "tokens": [51064, 509, 1074, 1643, 281, 312, 1242, 309, 13, 51148], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 776, "seek": 332562, "start": 3341.2999999999997, "end": 3343.02, "text": " This is awesome.", "tokens": [51148, 639, 307, 3476, 13, 51234], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 777, "seek": 332562, "start": 3343.02, "end": 3346.5, "text": " So the summarized rules...", "tokens": [51234, 407, 264, 14611, 1602, 4474, 485, 51408], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 778, "seek": 332562, "start": 3346.5, "end": 3348.46, "text": " Applications are left associative.", "tokens": [51408, 26519, 763, 366, 1411, 4180, 1166, 13, 51506], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 779, "seek": 332562, "start": 3348.46, "end": 3352.46, "text": " And precedence-wise, application happens before lambda calculus.", "tokens": [51506, 400, 16969, 655, 12, 3711, 11, 3861, 2314, 949, 13607, 33400, 13, 51706], "temperature": 0.0, "avg_logprob": -0.3472153607536765, "compression_ratio": 1.592814371257485, "no_speech_prob": 0.007460582535713911}, {"id": 780, "seek": 335246, "start": 3352.98, "end": 3358.66, "text": " I mean, lambda abstractions, sorry.", "tokens": [50390, 286, 914, 11, 13607, 12649, 626, 11, 2597, 13, 50674], "temperature": 0.0, "avg_logprob": -0.26926204770110373, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.09400668740272522}, {"id": 781, "seek": 335246, "start": 3358.66, "end": 3363.94, "text": " One more way that we can make these things more compact is if we have lambda x dot lambda", "tokens": [50674, 1485, 544, 636, 300, 321, 393, 652, 613, 721, 544, 14679, 307, 498, 321, 362, 13607, 2031, 5893, 13607, 50938], "temperature": 0.0, "avg_logprob": -0.26926204770110373, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.09400668740272522}, {"id": 782, "seek": 335246, "start": 3363.94, "end": 3368.68, "text": " y dot lambda z dot e, we can just say lambda x, y, z.", "tokens": [50938, 288, 5893, 13607, 710, 5893, 308, 11, 321, 393, 445, 584, 13607, 2031, 11, 288, 11, 710, 13, 51175], "temperature": 0.0, "avg_logprob": -0.26926204770110373, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.09400668740272522}, {"id": 783, "seek": 335246, "start": 3368.68, "end": 3372.94, "text": " We aren't giving it one parameter called x, y, z.", "tokens": [51175, 492, 3212, 380, 2902, 309, 472, 13075, 1219, 2031, 11, 288, 11, 710, 13, 51388], "temperature": 0.0, "avg_logprob": -0.26926204770110373, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.09400668740272522}, {"id": 784, "seek": 335246, "start": 3372.94, "end": 3377.58, "text": " We're giving it three parameters, x, y, and z.", "tokens": [51388, 492, 434, 2902, 309, 1045, 9834, 11, 2031, 11, 288, 11, 293, 710, 13, 51620], "temperature": 0.0, "avg_logprob": -0.26926204770110373, "compression_ratio": 1.6727272727272726, "no_speech_prob": 0.09400668740272522}, {"id": 785, "seek": 337758, "start": 3377.58, "end": 3383.66, "text": " So it's kind of the difference between this function over here, where we have two parameters", "tokens": [50364, 407, 309, 311, 733, 295, 264, 2649, 1296, 341, 2445, 670, 510, 11, 689, 321, 362, 732, 9834, 50668], "temperature": 0.0, "avg_logprob": -0.36023367212173785, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.006589705590158701}, {"id": 786, "seek": 337758, "start": 3383.66, "end": 3384.9, "text": " at once.", "tokens": [50668, 412, 1564, 13, 50730], "temperature": 0.0, "avg_logprob": -0.36023367212173785, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.006589705590158701}, {"id": 787, "seek": 337758, "start": 3384.9, "end": 3388.5, "text": " And if we rewrote that to be taking f, then taking x.", "tokens": [50730, 400, 498, 321, 319, 7449, 1370, 300, 281, 312, 1940, 283, 11, 550, 1940, 2031, 13, 50910], "temperature": 0.0, "avg_logprob": -0.36023367212173785, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.006589705590158701}, {"id": 788, "seek": 337758, "start": 3388.5, "end": 3389.5, "text": " Yeah?", "tokens": [50910, 865, 30, 50960], "temperature": 0.0, "avg_logprob": -0.36023367212173785, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.006589705590158701}, {"id": 789, "seek": 337758, "start": 3389.5, "end": 3399.5, "text": " If you did just want one parameter called x, y, z, would you just, like, put a parenthesis", "tokens": [50960, 759, 291, 630, 445, 528, 472, 13075, 1219, 2031, 11, 288, 11, 710, 11, 576, 291, 445, 11, 411, 11, 829, 257, 23350, 9374, 51460], "temperature": 0.0, "avg_logprob": -0.36023367212173785, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.006589705590158701}, {"id": 790, "seek": 337758, "start": 3399.5, "end": 3400.5, "text": " around it?", "tokens": [51460, 926, 309, 30, 51510], "temperature": 0.0, "avg_logprob": -0.36023367212173785, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.006589705590158701}, {"id": 791, "seek": 337758, "start": 3400.5, "end": 3403.46, "text": " You wouldn't really be a mathematician then, would you?", "tokens": [51510, 509, 2759, 380, 534, 312, 257, 48281, 550, 11, 576, 291, 30, 51658], "temperature": 0.0, "avg_logprob": -0.36023367212173785, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.006589705590158701}, {"id": 792, "seek": 340346, "start": 3403.98, "end": 3406.38, "text": " Honestly, I don't know what the notation...", "tokens": [50390, 12348, 11, 286, 500, 380, 458, 437, 264, 24657, 485, 50510], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 793, "seek": 340346, "start": 3406.38, "end": 3409.3, "text": " Like, the standard thing to do there is.", "tokens": [50510, 1743, 11, 264, 3832, 551, 281, 360, 456, 307, 13, 50656], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 794, "seek": 340346, "start": 3409.3, "end": 3413.66, "text": " People just always use single-letter variable names.", "tokens": [50656, 3432, 445, 1009, 764, 2167, 12, 21248, 7006, 5288, 13, 50874], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 795, "seek": 340346, "start": 3413.66, "end": 3414.66, "text": " Which is horrible practice.", "tokens": [50874, 3013, 307, 9263, 3124, 13, 50924], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 796, "seek": 340346, "start": 3414.66, "end": 3418.14, "text": " It's, like, exactly what you learn not to do in intro programming.", "tokens": [50924, 467, 311, 11, 411, 11, 2293, 437, 291, 1466, 406, 281, 360, 294, 12897, 9410, 13, 51098], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 797, "seek": 340346, "start": 3418.14, "end": 3421.02, "text": " Like, give your variables descriptive names.", "tokens": [51098, 1743, 11, 976, 428, 9102, 42585, 5288, 13, 51242], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 798, "seek": 340346, "start": 3421.02, "end": 3423.7200000000003, "text": " But because it's kind of math, it's, like...", "tokens": [51242, 583, 570, 309, 311, 733, 295, 5221, 11, 309, 311, 11, 411, 485, 51377], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 799, "seek": 340346, "start": 3423.7200000000003, "end": 3427.02, "text": " We use x, y much more often.", "tokens": [51377, 492, 764, 2031, 11, 288, 709, 544, 2049, 13, 51542], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 800, "seek": 340346, "start": 3427.02, "end": 3429.38, "text": " I don't know.", "tokens": [51542, 286, 500, 380, 458, 13, 51660], "temperature": 0.0, "avg_logprob": -0.30723791302375075, "compression_ratio": 1.5665236051502145, "no_speech_prob": 0.00049553532153368}, {"id": 801, "seek": 342938, "start": 3429.38, "end": 3434.58, "text": " If you wanted, maybe, multi-character names, you could do...", "tokens": [50364, 759, 291, 1415, 11, 1310, 11, 4825, 12, 7374, 14125, 5288, 11, 291, 727, 360, 485, 50624], "temperature": 0.0, "avg_logprob": -0.2727493430083653, "compression_ratio": 1.3779527559055118, "no_speech_prob": 0.02442241460084915}, {"id": 802, "seek": 342938, "start": 3434.58, "end": 3435.82, "text": " Then you wouldn't do this.", "tokens": [50624, 1396, 291, 2759, 380, 360, 341, 13, 50686], "temperature": 0.0, "avg_logprob": -0.2727493430083653, "compression_ratio": 1.3779527559055118, "no_speech_prob": 0.02442241460084915}, {"id": 803, "seek": 342938, "start": 3435.82, "end": 3437.28, "text": " You would keep things all separate.", "tokens": [50686, 509, 576, 1066, 721, 439, 4994, 13, 50759], "temperature": 0.0, "avg_logprob": -0.2727493430083653, "compression_ratio": 1.3779527559055118, "no_speech_prob": 0.02442241460084915}, {"id": 804, "seek": 342938, "start": 3437.28, "end": 3446.42, "text": " You would keep it like the left-hand side, perhaps.", "tokens": [50759, 509, 576, 1066, 309, 411, 264, 1411, 12, 5543, 1252, 11, 4317, 13, 51216], "temperature": 0.0, "avg_logprob": -0.2727493430083653, "compression_ratio": 1.3779527559055118, "no_speech_prob": 0.02442241460084915}, {"id": 805, "seek": 344642, "start": 3446.42, "end": 3453.42, "text": " Further questions on syntax?", "tokens": [50364, 15364, 1651, 322, 28431, 30, 50714], "temperature": 0.0, "avg_logprob": -0.3116137841168572, "compression_ratio": 1.4859154929577465, "no_speech_prob": 0.014063481241464615}, {"id": 806, "seek": 344642, "start": 3453.42, "end": 3460.82, "text": " Great.", "tokens": [50714, 3769, 13, 51084], "temperature": 0.0, "avg_logprob": -0.3116137841168572, "compression_ratio": 1.4859154929577465, "no_speech_prob": 0.014063481241464615}, {"id": 807, "seek": 344642, "start": 3460.82, "end": 3461.82, "text": " We're done with syntax.", "tokens": [51084, 492, 434, 1096, 365, 28431, 13, 51134], "temperature": 0.0, "avg_logprob": -0.3116137841168572, "compression_ratio": 1.4859154929577465, "no_speech_prob": 0.014063481241464615}, {"id": 808, "seek": 344642, "start": 3461.82, "end": 3463.66, "text": " Let's get to the exciting thing.", "tokens": [51134, 961, 311, 483, 281, 264, 4670, 551, 13, 51226], "temperature": 0.0, "avg_logprob": -0.3116137841168572, "compression_ratio": 1.4859154929577465, "no_speech_prob": 0.014063481241464615}, {"id": 809, "seek": 344642, "start": 3463.66, "end": 3465.84, "text": " Let's actually evaluate this.", "tokens": [51226, 961, 311, 767, 13059, 341, 13, 51335], "temperature": 0.0, "avg_logprob": -0.3116137841168572, "compression_ratio": 1.4859154929577465, "no_speech_prob": 0.014063481241464615}, {"id": 810, "seek": 344642, "start": 3465.84, "end": 3469.1800000000003, "text": " Let's get to the semantics.", "tokens": [51335, 961, 311, 483, 281, 264, 4361, 45298, 13, 51502], "temperature": 0.0, "avg_logprob": -0.3116137841168572, "compression_ratio": 1.4859154929577465, "no_speech_prob": 0.014063481241464615}, {"id": 811, "seek": 344642, "start": 3469.1800000000003, "end": 3472.02, "text": " So the semantics of lambda calc.", "tokens": [51502, 407, 264, 4361, 45298, 295, 13607, 2104, 66, 13, 51644], "temperature": 0.0, "avg_logprob": -0.3116137841168572, "compression_ratio": 1.4859154929577465, "no_speech_prob": 0.014063481241464615}, {"id": 812, "seek": 344642, "start": 3472.02, "end": 3475.54, "text": " There's basically one rule.", "tokens": [51644, 821, 311, 1936, 472, 4978, 13, 51820], "temperature": 0.0, "avg_logprob": -0.3116137841168572, "compression_ratio": 1.4859154929577465, "no_speech_prob": 0.014063481241464615}, {"id": 813, "seek": 347554, "start": 3475.54, "end": 3483.18, "text": " We're going to try to reduce a term into another term as often as we can.", "tokens": [50364, 492, 434, 516, 281, 853, 281, 5407, 257, 1433, 666, 1071, 1433, 382, 2049, 382, 321, 393, 13, 50746], "temperature": 0.0, "avg_logprob": -0.1656903979144519, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.010818365029990673}, {"id": 814, "seek": 347554, "start": 3483.18, "end": 3488.66, "text": " Once we can't reduce it, we're done.", "tokens": [50746, 3443, 321, 393, 380, 5407, 309, 11, 321, 434, 1096, 13, 51020], "temperature": 0.0, "avg_logprob": -0.1656903979144519, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.010818365029990673}, {"id": 815, "seek": 347554, "start": 3488.66, "end": 3490.3, "text": " That's the one rule.", "tokens": [51020, 663, 311, 264, 472, 4978, 13, 51102], "temperature": 0.0, "avg_logprob": -0.1656903979144519, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.010818365029990673}, {"id": 816, "seek": 347554, "start": 3490.3, "end": 3496.02, "text": " We're going to reduce a term into another term.", "tokens": [51102, 492, 434, 516, 281, 5407, 257, 1433, 666, 1071, 1433, 13, 51388], "temperature": 0.0, "avg_logprob": -0.1656903979144519, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.010818365029990673}, {"id": 817, "seek": 347554, "start": 3496.02, "end": 3499.06, "text": " Once we're done, we're done.", "tokens": [51388, 3443, 321, 434, 1096, 11, 321, 434, 1096, 13, 51540], "temperature": 0.0, "avg_logprob": -0.1656903979144519, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.010818365029990673}, {"id": 818, "seek": 347554, "start": 3499.06, "end": 3505.14, "text": " The way we reduce is by rewriting terms.", "tokens": [51540, 440, 636, 321, 5407, 307, 538, 319, 19868, 2115, 13, 51844], "temperature": 0.0, "avg_logprob": -0.1656903979144519, "compression_ratio": 1.8444444444444446, "no_speech_prob": 0.010818365029990673}, {"id": 819, "seek": 350514, "start": 3505.14, "end": 3509.62, "text": " Rewriting terms means that we are doing substitution.", "tokens": [50364, 497, 1023, 81, 1748, 2115, 1355, 300, 321, 366, 884, 35827, 13, 50588], "temperature": 0.0, "avg_logprob": -0.24581396700155855, "compression_ratio": 1.6446700507614214, "no_speech_prob": 0.004399383906275034}, {"id": 820, "seek": 350514, "start": 3509.62, "end": 3512.22, "text": " Oops.", "tokens": [50588, 21726, 13, 50718], "temperature": 0.0, "avg_logprob": -0.24581396700155855, "compression_ratio": 1.6446700507614214, "no_speech_prob": 0.004399383906275034}, {"id": 821, "seek": 350514, "start": 3512.22, "end": 3519.06, "text": " So now what we're going to look at is what substitution means in lambda calculus.", "tokens": [50718, 407, 586, 437, 321, 434, 516, 281, 574, 412, 307, 437, 35827, 1355, 294, 13607, 33400, 13, 51060], "temperature": 0.0, "avg_logprob": -0.24581396700155855, "compression_ratio": 1.6446700507614214, "no_speech_prob": 0.004399383906275034}, {"id": 822, "seek": 350514, "start": 3519.06, "end": 3522.5, "text": " This is the one rule of lambda calc.", "tokens": [51060, 639, 307, 264, 472, 4978, 295, 13607, 2104, 66, 13, 51232], "temperature": 0.0, "avg_logprob": -0.24581396700155855, "compression_ratio": 1.6446700507614214, "no_speech_prob": 0.004399383906275034}, {"id": 823, "seek": 350514, "start": 3522.5, "end": 3526.5, "text": " It's the one way to do things.", "tokens": [51232, 467, 311, 264, 472, 636, 281, 360, 721, 13, 51432], "temperature": 0.0, "avg_logprob": -0.24581396700155855, "compression_ratio": 1.6446700507614214, "no_speech_prob": 0.004399383906275034}, {"id": 824, "seek": 350514, "start": 3526.5, "end": 3528.14, "text": " But there's a lot to it.", "tokens": [51432, 583, 456, 311, 257, 688, 281, 309, 13, 51514], "temperature": 0.0, "avg_logprob": -0.24581396700155855, "compression_ratio": 1.6446700507614214, "no_speech_prob": 0.004399383906275034}, {"id": 825, "seek": 350514, "start": 3528.14, "end": 3530.02, "text": " So let's go through.", "tokens": [51514, 407, 718, 311, 352, 807, 13, 51608], "temperature": 0.0, "avg_logprob": -0.24581396700155855, "compression_ratio": 1.6446700507614214, "no_speech_prob": 0.004399383906275034}, {"id": 826, "seek": 350514, "start": 3530.02, "end": 3534.74, "text": " So we can go back to our example over here that we had on the board.", "tokens": [51608, 407, 321, 393, 352, 646, 281, 527, 1365, 670, 510, 300, 321, 632, 322, 264, 3150, 13, 51844], "temperature": 0.0, "avg_logprob": -0.24581396700155855, "compression_ratio": 1.6446700507614214, "no_speech_prob": 0.004399383906275034}, {"id": 827, "seek": 353474, "start": 3534.74, "end": 3538.7799999999997, "text": " Lambda X dot 2 plus X of 5.", "tokens": [50364, 45691, 1783, 5893, 568, 1804, 1783, 295, 1025, 13, 50566], "temperature": 0.0, "avg_logprob": -0.2819575969989483, "compression_ratio": 1.3733333333333333, "no_speech_prob": 0.05419733375310898}, {"id": 828, "seek": 353474, "start": 3538.7799999999997, "end": 3541.3799999999997, "text": " We could rewrite that to JavaScript.", "tokens": [50566, 492, 727, 28132, 300, 281, 15778, 13, 50696], "temperature": 0.0, "avg_logprob": -0.2819575969989483, "compression_ratio": 1.3733333333333333, "no_speech_prob": 0.05419733375310898}, {"id": 829, "seek": 353474, "start": 3541.3799999999997, "end": 3544.9799999999996, "text": " And we would expect in JavaScript the answer to be what?", "tokens": [50696, 400, 321, 576, 2066, 294, 15778, 264, 1867, 281, 312, 437, 30, 50876], "temperature": 0.0, "avg_logprob": -0.2819575969989483, "compression_ratio": 1.3733333333333333, "no_speech_prob": 0.05419733375310898}, {"id": 830, "seek": 353474, "start": 3544.9799999999996, "end": 3552.9799999999996, "text": " The output of this expression to be what?", "tokens": [50876, 440, 5598, 295, 341, 6114, 281, 312, 437, 30, 51276], "temperature": 0.0, "avg_logprob": -0.2819575969989483, "compression_ratio": 1.3733333333333333, "no_speech_prob": 0.05419733375310898}, {"id": 831, "seek": 353474, "start": 3552.9799999999996, "end": 3553.9799999999996, "text": " Not a trick question.", "tokens": [51276, 1726, 257, 4282, 1168, 13, 51326], "temperature": 0.0, "avg_logprob": -0.2819575969989483, "compression_ratio": 1.3733333333333333, "no_speech_prob": 0.05419733375310898}, {"id": 832, "seek": 353474, "start": 3553.9799999999996, "end": 3554.9799999999996, "text": " 7.", "tokens": [51326, 1614, 13, 51376], "temperature": 0.0, "avg_logprob": -0.2819575969989483, "compression_ratio": 1.3733333333333333, "no_speech_prob": 0.05419733375310898}, {"id": 833, "seek": 353474, "start": 3554.9799999999996, "end": 3558.22, "text": " I heard muttered.", "tokens": [51376, 286, 2198, 5839, 40665, 13, 51538], "temperature": 0.0, "avg_logprob": -0.2819575969989483, "compression_ratio": 1.3733333333333333, "no_speech_prob": 0.05419733375310898}, {"id": 834, "seek": 355822, "start": 3558.22, "end": 3564.98, "text": " So we would get to 7 by substituting X, our parameter, with the value 5.", "tokens": [50364, 407, 321, 576, 483, 281, 1614, 538, 26441, 10861, 1783, 11, 527, 13075, 11, 365, 264, 2158, 1025, 13, 50702], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 835, "seek": 355822, "start": 3564.98, "end": 3568.8599999999997, "text": " Because we were calling the function with the value 5.", "tokens": [50702, 1436, 321, 645, 5141, 264, 2445, 365, 264, 2158, 1025, 13, 50896], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 836, "seek": 355822, "start": 3568.8599999999997, "end": 3571.14, "text": " The same thing is going to happen.", "tokens": [50896, 440, 912, 551, 307, 516, 281, 1051, 13, 51010], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 837, "seek": 355822, "start": 3571.14, "end": 3572.14, "text": " Or I guess...", "tokens": [51010, 1610, 286, 2041, 485, 51060], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 838, "seek": 355822, "start": 3572.14, "end": 3573.4599999999996, "text": " Actually, I think we...", "tokens": [51060, 5135, 11, 286, 519, 321, 485, 51126], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 839, "seek": 355822, "start": 3573.4599999999996, "end": 3574.9399999999996, "text": " Which one goes next?", "tokens": [51126, 3013, 472, 1709, 958, 30, 51200], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 840, "seek": 355822, "start": 3574.9399999999996, "end": 3575.9399999999996, "text": " Yeah.", "tokens": [51200, 865, 13, 51250], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 841, "seek": 355822, "start": 3575.9399999999996, "end": 3576.9399999999996, "text": " Okay.", "tokens": [51250, 1033, 13, 51300], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 842, "seek": 355822, "start": 3576.9399999999996, "end": 3579.2999999999997, "text": " So in lambda calc, the same thing is going to happen.", "tokens": [51300, 407, 294, 13607, 2104, 66, 11, 264, 912, 551, 307, 516, 281, 1051, 13, 51418], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 843, "seek": 355822, "start": 3579.2999999999997, "end": 3582.8999999999996, "text": " We're going to pass that 5 into the X.", "tokens": [51418, 492, 434, 516, 281, 1320, 300, 1025, 666, 264, 1783, 13, 51598], "temperature": 0.0, "avg_logprob": -0.25107693672180176, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.15816669166088104}, {"id": 844, "seek": 358290, "start": 3583.06, "end": 3588.86, "text": " And we're going to get 2 plus 5, which then reduces to 7.", "tokens": [50372, 400, 321, 434, 516, 281, 483, 568, 1804, 1025, 11, 597, 550, 18081, 281, 1614, 13, 50662], "temperature": 0.0, "avg_logprob": -0.16330898602803548, "compression_ratio": 1.3777777777777778, "no_speech_prob": 0.03409959003329277}, {"id": 845, "seek": 358290, "start": 3588.86, "end": 3607.9, "text": " So what we've done up above, which I can draw, is that we've passed 5 in for the value X.", "tokens": [50662, 407, 437, 321, 600, 1096, 493, 3673, 11, 597, 286, 393, 2642, 11, 307, 300, 321, 600, 4678, 1025, 294, 337, 264, 2158, 1783, 13, 51614], "temperature": 0.0, "avg_logprob": -0.16330898602803548, "compression_ratio": 1.3777777777777778, "no_speech_prob": 0.03409959003329277}, {"id": 846, "seek": 358290, "start": 3607.9, "end": 3612.7400000000002, "text": " So lambda X dot 2 plus X applied to 5.", "tokens": [51614, 407, 13607, 1783, 5893, 568, 1804, 1783, 6456, 281, 1025, 13, 51856], "temperature": 0.0, "avg_logprob": -0.16330898602803548, "compression_ratio": 1.3777777777777778, "no_speech_prob": 0.03409959003329277}, {"id": 847, "seek": 361274, "start": 3612.74, "end": 3613.8999999999996, "text": " This is a function.", "tokens": [50364, 639, 307, 257, 2445, 13, 50422], "temperature": 0.0, "avg_logprob": -0.21388071936530037, "compression_ratio": 1.4024390243902438, "no_speech_prob": 0.0036499600391834974}, {"id": 848, "seek": 361274, "start": 3613.8999999999996, "end": 3615.8999999999996, "text": " That's the parameter name.", "tokens": [50422, 663, 311, 264, 13075, 1315, 13, 50522], "temperature": 0.0, "avg_logprob": -0.21388071936530037, "compression_ratio": 1.4024390243902438, "no_speech_prob": 0.0036499600391834974}, {"id": 849, "seek": 361274, "start": 3615.8999999999996, "end": 3618.9799999999996, "text": " We're going to pass 5 in for X.", "tokens": [50522, 492, 434, 516, 281, 1320, 1025, 294, 337, 1783, 13, 50676], "temperature": 0.0, "avg_logprob": -0.21388071936530037, "compression_ratio": 1.4024390243902438, "no_speech_prob": 0.0036499600391834974}, {"id": 850, "seek": 361274, "start": 3618.9799999999996, "end": 3623.7999999999997, "text": " And we're gonna get 2 plus 5.", "tokens": [50676, 400, 321, 434, 799, 483, 568, 1804, 1025, 13, 50917], "temperature": 0.0, "avg_logprob": -0.21388071936530037, "compression_ratio": 1.4024390243902438, "no_speech_prob": 0.0036499600391834974}, {"id": 851, "seek": 361274, "start": 3623.7999999999997, "end": 3628.3399999999997, "text": " More specifically, what we would write, as an intermediate stage, is we would say we", "tokens": [50917, 5048, 4682, 11, 437, 321, 576, 2464, 11, 382, 364, 19376, 3233, 11, 307, 321, 576, 584, 321, 51144], "temperature": 0.0, "avg_logprob": -0.21388071936530037, "compression_ratio": 1.4024390243902438, "no_speech_prob": 0.0036499600391834974}, {"id": 852, "seek": 361274, "start": 3628.3399999999997, "end": 3634.8799999999997, "text": " get 2 plus X, where X is equal to 5.", "tokens": [51144, 483, 568, 1804, 1783, 11, 689, 1783, 307, 2681, 281, 1025, 13, 51471], "temperature": 0.0, "avg_logprob": -0.21388071936530037, "compression_ratio": 1.4024390243902438, "no_speech_prob": 0.0036499600391834974}, {"id": 853, "seek": 363488, "start": 3634.88, "end": 3644.32, "text": " Then we would get 2 plus 5, 7.", "tokens": [50364, 1396, 321, 576, 483, 568, 1804, 1025, 11, 1614, 13, 50836], "temperature": 0.0, "avg_logprob": -0.41617546081542967, "compression_ratio": 1.1271186440677967, "no_speech_prob": 0.03567717224359512}, {"id": 854, "seek": 363488, "start": 3644.32, "end": 3651.12, "text": " Okay.", "tokens": [50836, 1033, 13, 51176], "temperature": 0.0, "avg_logprob": -0.41617546081542967, "compression_ratio": 1.1271186440677967, "no_speech_prob": 0.03567717224359512}, {"id": 855, "seek": 363488, "start": 3651.12, "end": 3654.04, "text": " The more complicated expression.", "tokens": [51176, 440, 544, 6179, 6114, 13, 51322], "temperature": 0.0, "avg_logprob": -0.41617546081542967, "compression_ratio": 1.1271186440677967, "no_speech_prob": 0.03567717224359512}, {"id": 856, "seek": 363488, "start": 3654.04, "end": 3662.92, "text": " In JavaScript, we have our function here with an argument here.", "tokens": [51322, 682, 15778, 11, 321, 362, 527, 2445, 510, 365, 364, 6770, 510, 13, 51766], "temperature": 0.0, "avg_logprob": -0.41617546081542967, "compression_ratio": 1.1271186440677967, "no_speech_prob": 0.03567717224359512}, {"id": 857, "seek": 366292, "start": 3662.96, "end": 3670.92, "text": " What we would do is we would pass that function argument in for the value F. So we would replace", "tokens": [50366, 708, 321, 576, 360, 307, 321, 576, 1320, 300, 2445, 6770, 294, 337, 264, 2158, 479, 13, 407, 321, 576, 7406, 50764], "temperature": 0.0, "avg_logprob": -0.20630598522367932, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.15002240240573883}, {"id": 858, "seek": 366292, "start": 3670.92, "end": 3674.32, "text": " F with the function.", "tokens": [50764, 479, 365, 264, 2445, 13, 50934], "temperature": 0.0, "avg_logprob": -0.20630598522367932, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.15002240240573883}, {"id": 859, "seek": 366292, "start": 3674.32, "end": 3678.32, "text": " And then we would pass the 3 in for the X.", "tokens": [50934, 400, 550, 321, 576, 1320, 264, 805, 294, 337, 264, 1783, 13, 51134], "temperature": 0.0, "avg_logprob": -0.20630598522367932, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.15002240240573883}, {"id": 860, "seek": 366292, "start": 3678.32, "end": 3680.2000000000003, "text": " And we'd get an output of 4.", "tokens": [51134, 400, 321, 1116, 483, 364, 5598, 295, 1017, 13, 51228], "temperature": 0.0, "avg_logprob": -0.20630598522367932, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.15002240240573883}, {"id": 861, "seek": 366292, "start": 3680.2000000000003, "end": 3684.92, "text": " This is what we would do in JavaScript.", "tokens": [51228, 639, 307, 437, 321, 576, 360, 294, 15778, 13, 51464], "temperature": 0.0, "avg_logprob": -0.20630598522367932, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.15002240240573883}, {"id": 862, "seek": 366292, "start": 3684.92, "end": 3689.48, "text": " I hope I've convinced you at this point, lambda calculus, we aren't doing anything different.", "tokens": [51464, 286, 1454, 286, 600, 12561, 291, 412, 341, 935, 11, 13607, 33400, 11, 321, 3212, 380, 884, 1340, 819, 13, 51692], "temperature": 0.0, "avg_logprob": -0.20630598522367932, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.15002240240573883}, {"id": 863, "seek": 366292, "start": 3689.48, "end": 3692.46, "text": " It's the same thing as what we would do in JavaScript.", "tokens": [51692, 467, 311, 264, 912, 551, 382, 437, 321, 576, 360, 294, 15778, 13, 51841], "temperature": 0.0, "avg_logprob": -0.20630598522367932, "compression_ratio": 1.7746478873239437, "no_speech_prob": 0.15002240240573883}, {"id": 864, "seek": 369246, "start": 3692.5, "end": 3700.0, "text": " We will pass the function argument, lambda X dot X plus 1, in for F.", "tokens": [50366, 492, 486, 1320, 264, 2445, 6770, 11, 13607, 1783, 5893, 1783, 1804, 502, 11, 294, 337, 479, 13, 50741], "temperature": 0.0, "avg_logprob": -0.31835597270243876, "compression_ratio": 1.3421052631578947, "no_speech_prob": 0.020331725478172302}, {"id": 865, "seek": 369246, "start": 3700.0, "end": 3703.62, "text": " So we replace F with that value.", "tokens": [50741, 407, 321, 7406, 479, 365, 300, 2158, 13, 50922], "temperature": 0.0, "avg_logprob": -0.31835597270243876, "compression_ratio": 1.3421052631578947, "no_speech_prob": 0.020331725478172302}, {"id": 866, "seek": 369246, "start": 3703.62, "end": 3706.7, "text": " Then we pass in the 3 for the X.", "tokens": [50922, 1396, 321, 1320, 294, 264, 805, 337, 264, 1783, 13, 51076], "temperature": 0.0, "avg_logprob": -0.31835597270243876, "compression_ratio": 1.3421052631578947, "no_speech_prob": 0.020331725478172302}, {"id": 867, "seek": 369246, "start": 3706.7, "end": 3708.7400000000002, "text": " Replace X with 3.", "tokens": [51076, 1300, 6742, 1783, 365, 805, 13, 51178], "temperature": 0.0, "avg_logprob": -0.31835597270243876, "compression_ratio": 1.3421052631578947, "no_speech_prob": 0.020331725478172302}, {"id": 868, "seek": 369246, "start": 3708.7400000000002, "end": 3709.7400000000002, "text": " 3 plus 1.", "tokens": [51178, 805, 1804, 502, 13, 51228], "temperature": 0.0, "avg_logprob": -0.31835597270243876, "compression_ratio": 1.3421052631578947, "no_speech_prob": 0.020331725478172302}, {"id": 869, "seek": 369246, "start": 3709.7400000000002, "end": 3710.7400000000002, "text": " 4.", "tokens": [51228, 1017, 13, 51278], "temperature": 0.0, "avg_logprob": -0.31835597270243876, "compression_ratio": 1.3421052631578947, "no_speech_prob": 0.020331725478172302}, {"id": 870, "seek": 369246, "start": 3710.7400000000002, "end": 3721.7400000000002, "text": " I'll give you a second to digest that.", "tokens": [51278, 286, 603, 976, 291, 257, 1150, 281, 13884, 300, 13, 51828], "temperature": 0.0, "avg_logprob": -0.31835597270243876, "compression_ratio": 1.3421052631578947, "no_speech_prob": 0.020331725478172302}, {"id": 871, "seek": 372174, "start": 3722.4199999999996, "end": 3729.4199999999996, "text": " If you have any questions, feel free to ask.", "tokens": [50398, 759, 291, 362, 604, 1651, 11, 841, 1737, 281, 1029, 13, 50748], "temperature": 0.0, "avg_logprob": -0.5609615727474815, "compression_ratio": 0.8620689655172413, "no_speech_prob": 0.17993924021720886}, {"id": 872, "seek": 372174, "start": 3729.4199999999996, "end": 3736.4199999999996, "text": " Yeah?", "tokens": [50748, 865, 30, 51098], "temperature": 0.0, "avg_logprob": -0.5609615727474815, "compression_ratio": 0.8620689655172413, "no_speech_prob": 0.17993924021720886}, {"id": 873, "seek": 373642, "start": 3736.42, "end": 3754.14, "text": " It is not F multiplied by 3.", "tokens": [50364, 467, 307, 406, 479, 2120, 34442, 1091, 538, 805, 13, 51250], "temperature": 0.0, "avg_logprob": -0.3252304180248364, "compression_ratio": 1.0116279069767442, "no_speech_prob": 0.008847173303365707}, {"id": 874, "seek": 373642, "start": 3754.14, "end": 3755.14, "text": " No.", "tokens": [51250, 883, 13, 51300], "temperature": 0.0, "avg_logprob": -0.3252304180248364, "compression_ratio": 1.0116279069767442, "no_speech_prob": 0.008847173303365707}, {"id": 875, "seek": 373642, "start": 3755.14, "end": 3760.7000000000003, "text": " So F3, the F space 3 in the center of that body, is...", "tokens": [51300, 407, 479, 18, 11, 264, 479, 1901, 805, 294, 264, 3056, 295, 300, 1772, 11, 307, 485, 51578], "temperature": 0.0, "avg_logprob": -0.3252304180248364, "compression_ratio": 1.0116279069767442, "no_speech_prob": 0.008847173303365707}, {"id": 876, "seek": 376070, "start": 3760.74, "end": 3772.06, "text": " If we pattern matched it to our rule, we would be matching that to the E equals E1, E2 rule.", "tokens": [50366, 759, 321, 5102, 21447, 309, 281, 527, 4978, 11, 321, 576, 312, 14324, 300, 281, 264, 462, 6915, 462, 16, 11, 462, 17, 4978, 13, 50932], "temperature": 0.0, "avg_logprob": -0.24599910736083985, "compression_ratio": 1.3495934959349594, "no_speech_prob": 0.061871714890003204}, {"id": 877, "seek": 376070, "start": 3772.06, "end": 3778.5, "text": " And this is saying E1 is a function, E2 is the argument to that function.", "tokens": [50932, 400, 341, 307, 1566, 462, 16, 307, 257, 2445, 11, 462, 17, 307, 264, 6770, 281, 300, 2445, 13, 51254], "temperature": 0.0, "avg_logprob": -0.24599910736083985, "compression_ratio": 1.3495934959349594, "no_speech_prob": 0.061871714890003204}, {"id": 878, "seek": 377850, "start": 3778.5, "end": 3794.22, "text": " So we would be passing the argument 3 to the function F. Yeah.", "tokens": [50364, 407, 321, 576, 312, 8437, 264, 6770, 805, 281, 264, 2445, 479, 13, 865, 13, 51150], "temperature": 0.0, "avg_logprob": -0.3582184314727783, "compression_ratio": 1.204724409448819, "no_speech_prob": 0.0023596209939569235}, {"id": 879, "seek": 377850, "start": 3794.22, "end": 3798.94, "text": " Any other questions here?", "tokens": [51150, 2639, 661, 1651, 510, 30, 51386], "temperature": 0.0, "avg_logprob": -0.3582184314727783, "compression_ratio": 1.204724409448819, "no_speech_prob": 0.0023596209939569235}, {"id": 880, "seek": 377850, "start": 3798.94, "end": 3803.28, "text": " Okay.", "tokens": [51386, 1033, 13, 51603], "temperature": 0.0, "avg_logprob": -0.3582184314727783, "compression_ratio": 1.204724409448819, "no_speech_prob": 0.0023596209939569235}, {"id": 881, "seek": 377850, "start": 3803.28, "end": 3805.94, "text": " Let's keep getting into it.", "tokens": [51603, 961, 311, 1066, 1242, 666, 309, 13, 51736], "temperature": 0.0, "avg_logprob": -0.3582184314727783, "compression_ratio": 1.204724409448819, "no_speech_prob": 0.0023596209939569235}, {"id": 882, "seek": 377850, "start": 3805.94, "end": 3807.52, "text": " Maybe this looks easy for now.", "tokens": [51736, 2704, 341, 1542, 1858, 337, 586, 13, 51815], "temperature": 0.0, "avg_logprob": -0.3582184314727783, "compression_ratio": 1.204724409448819, "no_speech_prob": 0.0023596209939569235}, {"id": 883, "seek": 380752, "start": 3807.52, "end": 3808.8, "text": " Maybe it looks hard.", "tokens": [50364, 2704, 309, 1542, 1152, 13, 50428], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 884, "seek": 380752, "start": 3808.8, "end": 3810.52, "text": " If it looks hard, that's fine.", "tokens": [50428, 759, 309, 1542, 1152, 11, 300, 311, 2489, 13, 50514], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 885, "seek": 380752, "start": 3810.52, "end": 3812.12, "text": " If it looks easy, that's also fine.", "tokens": [50514, 759, 309, 1542, 1858, 11, 300, 311, 611, 2489, 13, 50594], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 886, "seek": 380752, "start": 3812.12, "end": 3815.24, "text": " We're gonna make it a little bit trickier, though.", "tokens": [50594, 492, 434, 799, 652, 309, 257, 707, 857, 4282, 811, 11, 1673, 13, 50750], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 887, "seek": 380752, "start": 3815.24, "end": 3821.6, "text": " But the idea that we've done here is we really just replaced the left-hand variable name", "tokens": [50750, 583, 264, 1558, 300, 321, 600, 1096, 510, 307, 321, 534, 445, 10772, 264, 1411, 12, 5543, 7006, 1315, 51068], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 888, "seek": 380752, "start": 3821.6, "end": 3825.88, "text": " F with the input argument.", "tokens": [51068, 479, 365, 264, 4846, 6770, 13, 51282], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 889, "seek": 380752, "start": 3825.88, "end": 3827.6, "text": " That's all that the substitution was.", "tokens": [51282, 663, 311, 439, 300, 264, 35827, 390, 13, 51368], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 890, "seek": 380752, "start": 3827.6, "end": 3834.34, "text": " So substitute the term you're applying to the function for the argument variable.", "tokens": [51368, 407, 15802, 264, 1433, 291, 434, 9275, 281, 264, 2445, 337, 264, 6770, 7006, 13, 51705], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 891, "seek": 380752, "start": 3834.34, "end": 3836.6, "text": " This isn't quite right, though.", "tokens": [51705, 639, 1943, 380, 1596, 558, 11, 1673, 13, 51818], "temperature": 0.0, "avg_logprob": -0.19038218945528554, "compression_ratio": 1.7203389830508475, "no_speech_prob": 0.048856474459171295}, {"id": 892, "seek": 383660, "start": 3836.68, "end": 3844.62, "text": " But if we wanted to use this as, like, a base, which is what we'll do, we could define E1", "tokens": [50368, 583, 498, 321, 1415, 281, 764, 341, 382, 11, 411, 11, 257, 3096, 11, 597, 307, 437, 321, 603, 360, 11, 321, 727, 6964, 462, 16, 50765], "temperature": 0.0, "avg_logprob": -0.19849597576052644, "compression_ratio": 1.463276836158192, "no_speech_prob": 0.010013491846621037}, {"id": 893, "seek": 383660, "start": 3844.62, "end": 3854.62, "text": " with the context X equals E2 to mean replace every occurrence of X in E1 with E2.", "tokens": [50765, 365, 264, 4319, 1783, 6915, 462, 17, 281, 914, 7406, 633, 36122, 295, 1783, 294, 462, 16, 365, 462, 17, 13, 51265], "temperature": 0.0, "avg_logprob": -0.19849597576052644, "compression_ratio": 1.463276836158192, "no_speech_prob": 0.010013491846621037}, {"id": 894, "seek": 383660, "start": 3854.62, "end": 3856.72, "text": " And this is what I've written over here.", "tokens": [51265, 400, 341, 307, 437, 286, 600, 3720, 670, 510, 13, 51370], "temperature": 0.0, "avg_logprob": -0.19849597576052644, "compression_ratio": 1.463276836158192, "no_speech_prob": 0.010013491846621037}, {"id": 895, "seek": 383660, "start": 3856.72, "end": 3859.74, "text": " E1 is 2 plus X.", "tokens": [51370, 462, 16, 307, 568, 1804, 1783, 13, 51521], "temperature": 0.0, "avg_logprob": -0.19849597576052644, "compression_ratio": 1.463276836158192, "no_speech_prob": 0.010013491846621037}, {"id": 896, "seek": 383660, "start": 3859.74, "end": 3863.48, "text": " X equals 5 is our X equals E2.", "tokens": [51521, 1783, 6915, 1025, 307, 527, 1783, 6915, 462, 17, 13, 51708], "temperature": 0.0, "avg_logprob": -0.19849597576052644, "compression_ratio": 1.463276836158192, "no_speech_prob": 0.010013491846621037}, {"id": 897, "seek": 386348, "start": 3863.48, "end": 3872.26, "text": " So what we're saying is replace every instance of X with the value 5.", "tokens": [50364, 407, 437, 321, 434, 1566, 307, 7406, 633, 5197, 295, 1783, 365, 264, 2158, 1025, 13, 50803], "temperature": 0.0, "avg_logprob": -0.1935087033172152, "compression_ratio": 1.3532934131736527, "no_speech_prob": 0.0004173141496721655}, {"id": 898, "seek": 386348, "start": 3872.26, "end": 3878.78, "text": " That's like the theory way of writing it.", "tokens": [50803, 663, 311, 411, 264, 5261, 636, 295, 3579, 309, 13, 51129], "temperature": 0.0, "avg_logprob": -0.1935087033172152, "compression_ratio": 1.3532934131736527, "no_speech_prob": 0.0004173141496721655}, {"id": 899, "seek": 386348, "start": 3878.78, "end": 3887.2400000000002, "text": " Our general rule of reduction, then, would be that lambdaX.E1 being applied to E2 reduces", "tokens": [51129, 2621, 2674, 4978, 295, 11004, 11, 550, 11, 576, 312, 300, 13607, 55, 13, 36, 16, 885, 6456, 281, 462, 17, 18081, 51552], "temperature": 0.0, "avg_logprob": -0.1935087033172152, "compression_ratio": 1.3532934131736527, "no_speech_prob": 0.0004173141496721655}, {"id": 900, "seek": 386348, "start": 3887.2400000000002, "end": 3891.68, "text": " to E1 where X equals E2.", "tokens": [51552, 281, 462, 16, 689, 1783, 6915, 462, 17, 13, 51774], "temperature": 0.0, "avg_logprob": -0.1935087033172152, "compression_ratio": 1.3532934131736527, "no_speech_prob": 0.0004173141496721655}, {"id": 901, "seek": 389168, "start": 3891.68, "end": 3897.12, "text": " So any time we have a function application, you take the parameter name, set it equal", "tokens": [50364, 407, 604, 565, 321, 362, 257, 2445, 3861, 11, 291, 747, 264, 13075, 1315, 11, 992, 309, 2681, 50636], "temperature": 0.0, "avg_logprob": -0.2366291840871175, "compression_ratio": 1.108695652173913, "no_speech_prob": 0.003824463812634349}, {"id": 902, "seek": 389168, "start": 3897.12, "end": 3905.4199999999996, "text": " to the value E2.", "tokens": [50636, 281, 264, 2158, 462, 17, 13, 51051], "temperature": 0.0, "avg_logprob": -0.2366291840871175, "compression_ratio": 1.108695652173913, "no_speech_prob": 0.003824463812634349}, {"id": 903, "seek": 390542, "start": 3905.42, "end": 3924.66, "text": " So function application means rewrite E1 with every instance of X replaced with E2.", "tokens": [50364, 407, 2445, 3861, 1355, 28132, 462, 16, 365, 633, 5197, 295, 1783, 10772, 365, 462, 17, 13, 51326], "temperature": 0.0, "avg_logprob": -0.22274408842387952, "compression_ratio": 1.3025210084033614, "no_speech_prob": 0.0019877455197274685}, {"id": 904, "seek": 390542, "start": 3924.66, "end": 3929.2200000000003, "text": " Questions here?", "tokens": [51326, 27738, 510, 30, 51554], "temperature": 0.0, "avg_logprob": -0.22274408842387952, "compression_ratio": 1.3025210084033614, "no_speech_prob": 0.0019877455197274685}, {"id": 905, "seek": 390542, "start": 3929.2200000000003, "end": 3933.82, "text": " It's just like function application in other languages.", "tokens": [51554, 467, 311, 445, 411, 2445, 3861, 294, 661, 8650, 13, 51784], "temperature": 0.0, "avg_logprob": -0.22274408842387952, "compression_ratio": 1.3025210084033614, "no_speech_prob": 0.0019877455197274685}, {"id": 906, "seek": 393382, "start": 3933.82, "end": 3941.86, "text": " And that's actually by design, because function applications all look the same, for the most", "tokens": [50364, 400, 300, 311, 767, 538, 1715, 11, 570, 2445, 5821, 439, 574, 264, 912, 11, 337, 264, 881, 50766], "temperature": 0.0, "avg_logprob": -0.37221339169670553, "compression_ratio": 1.3742331288343559, "no_speech_prob": 0.12420970946550369}, {"id": 907, "seek": 393382, "start": 3941.86, "end": 3942.86, "text": " part.", "tokens": [50766, 644, 13, 50816], "temperature": 0.0, "avg_logprob": -0.37221339169670553, "compression_ratio": 1.3742331288343559, "no_speech_prob": 0.12420970946550369}, {"id": 908, "seek": 393382, "start": 3942.86, "end": 3943.86, "text": " Okay.", "tokens": [50816, 1033, 13, 50866], "temperature": 0.0, "avg_logprob": -0.37221339169670553, "compression_ratio": 1.3742331288343559, "no_speech_prob": 0.12420970946550369}, {"id": 909, "seek": 393382, "start": 3943.86, "end": 3944.86, "text": " No questions.", "tokens": [50866, 883, 1651, 13, 50916], "temperature": 0.0, "avg_logprob": -0.37221339169670553, "compression_ratio": 1.3742331288343559, "no_speech_prob": 0.12420970946550369}, {"id": 910, "seek": 393382, "start": 3944.86, "end": 3949.98, "text": " That means you guys can do them.", "tokens": [50916, 663, 1355, 291, 1074, 393, 360, 552, 13, 51172], "temperature": 0.0, "avg_logprob": -0.37221339169670553, "compression_ratio": 1.3742331288343559, "no_speech_prob": 0.12420970946550369}, {"id": 911, "seek": 393382, "start": 3949.98, "end": 3950.98, "text": " Take a second.", "tokens": [51172, 3664, 257, 1150, 13, 51222], "temperature": 0.0, "avg_logprob": -0.37221339169670553, "compression_ratio": 1.3742331288343559, "no_speech_prob": 0.12420970946550369}, {"id": 912, "seek": 393382, "start": 3950.98, "end": 3952.4, "text": " Or take two minutes.", "tokens": [51222, 1610, 747, 732, 2077, 13, 51293], "temperature": 0.0, "avg_logprob": -0.37221339169670553, "compression_ratio": 1.3742331288343559, "no_speech_prob": 0.12420970946550369}, {"id": 913, "seek": 393382, "start": 3952.4, "end": 3954.6200000000003, "text": " Do both of these with your neighbor.", "tokens": [51293, 1144, 1293, 295, 613, 365, 428, 5987, 13, 51404], "temperature": 0.0, "avg_logprob": -0.37221339169670553, "compression_ratio": 1.3742331288343559, "no_speech_prob": 0.12420970946550369}, {"id": 914, "seek": 404462, "start": 4044.62, "end": 4059.5, "text": " Let's do the first one.", "tokens": [50364, 961, 311, 360, 264, 700, 472, 13, 51108], "temperature": 0.0, "avg_logprob": -0.3713783731265944, "compression_ratio": 1.287037037037037, "no_speech_prob": 0.003172623459249735}, {"id": 915, "seek": 404462, "start": 4059.5, "end": 4064.7799999999997, "text": " What do we get as our next step of evaluation over here?", "tokens": [51108, 708, 360, 321, 483, 382, 527, 958, 1823, 295, 13344, 670, 510, 30, 51372], "temperature": 0.0, "avg_logprob": -0.3713783731265944, "compression_ratio": 1.287037037037037, "no_speech_prob": 0.003172623459249735}, {"id": 916, "seek": 404462, "start": 4064.7799999999997, "end": 4066.74, "text": " With intermediate stages.", "tokens": [51372, 2022, 19376, 10232, 13, 51470], "temperature": 0.0, "avg_logprob": -0.3713783731265944, "compression_ratio": 1.287037037037037, "no_speech_prob": 0.003172623459249735}, {"id": 917, "seek": 404462, "start": 4066.74, "end": 4067.74, "text": " What do we get?", "tokens": [51470, 708, 360, 321, 483, 30, 51520], "temperature": 0.0, "avg_logprob": -0.3713783731265944, "compression_ratio": 1.287037037037037, "no_speech_prob": 0.003172623459249735}, {"id": 918, "seek": 404462, "start": 4067.74, "end": 4068.74, "text": " Yeah.", "tokens": [51520, 865, 13, 51570], "temperature": 0.0, "avg_logprob": -0.3713783731265944, "compression_ratio": 1.287037037037037, "no_speech_prob": 0.003172623459249735}, {"id": 919, "seek": 404462, "start": 4068.74, "end": 4069.74, "text": " Go for it.", "tokens": [51570, 1037, 337, 309, 13, 51620], "temperature": 0.0, "avg_logprob": -0.3713783731265944, "compression_ratio": 1.287037037037037, "no_speech_prob": 0.003172623459249735}, {"id": 920, "seek": 406974, "start": 4069.74, "end": 4078.7799999999997, "text": " That will be...", "tokens": [50364, 663, 486, 312, 485, 50816], "temperature": 0.0, "avg_logprob": -0.30909138255649143, "compression_ratio": 1.3485714285714285, "no_speech_prob": 0.0467221699655056}, {"id": 921, "seek": 406974, "start": 4078.7799999999997, "end": 4080.3799999999997, "text": " Give me the step right before that.", "tokens": [50816, 5303, 385, 264, 1823, 558, 949, 300, 13, 50896], "temperature": 0.0, "avg_logprob": -0.30909138255649143, "compression_ratio": 1.3485714285714285, "no_speech_prob": 0.0467221699655056}, {"id": 922, "seek": 406974, "start": 4080.3799999999997, "end": 4085.5, "text": " Like the intermediate representation, which I've kind of written over there already.", "tokens": [50896, 1743, 264, 19376, 10290, 11, 597, 286, 600, 733, 295, 3720, 670, 456, 1217, 13, 51152], "temperature": 0.0, "avg_logprob": -0.30909138255649143, "compression_ratio": 1.3485714285714285, "no_speech_prob": 0.0467221699655056}, {"id": 923, "seek": 406974, "start": 4085.5, "end": 4086.5, "text": " Yeah.", "tokens": [51152, 865, 13, 51202], "temperature": 0.0, "avg_logprob": -0.30909138255649143, "compression_ratio": 1.3485714285714285, "no_speech_prob": 0.0467221699655056}, {"id": 924, "seek": 406974, "start": 4086.5, "end": 4087.5, "text": " Right.", "tokens": [51202, 1779, 13, 51252], "temperature": 0.0, "avg_logprob": -0.30909138255649143, "compression_ratio": 1.3485714285714285, "no_speech_prob": 0.0467221699655056}, {"id": 925, "seek": 406974, "start": 4087.5, "end": 4088.5, "text": " So same idea.", "tokens": [51252, 407, 912, 1558, 13, 51302], "temperature": 0.0, "avg_logprob": -0.30909138255649143, "compression_ratio": 1.3485714285714285, "no_speech_prob": 0.0467221699655056}, {"id": 926, "seek": 406974, "start": 4088.5, "end": 4093.14, "text": " 2 plus X where X is equal to 5.", "tokens": [51302, 568, 1804, 1783, 689, 1783, 307, 2681, 281, 1025, 13, 51534], "temperature": 0.0, "avg_logprob": -0.30909138255649143, "compression_ratio": 1.3485714285714285, "no_speech_prob": 0.0467221699655056}, {"id": 927, "seek": 406974, "start": 4093.14, "end": 4096.54, "text": " And then that will reduce a second time.", "tokens": [51534, 400, 550, 300, 486, 5407, 257, 1150, 565, 13, 51704], "temperature": 0.0, "avg_logprob": -0.30909138255649143, "compression_ratio": 1.3485714285714285, "no_speech_prob": 0.0467221699655056}, {"id": 928, "seek": 409654, "start": 4096.54, "end": 4104.66, "text": " Where we can do this substitution, where we get 2 plus 5.", "tokens": [50364, 2305, 321, 393, 360, 341, 35827, 11, 689, 321, 483, 568, 1804, 1025, 13, 50770], "temperature": 0.0, "avg_logprob": -0.33662478820137354, "compression_ratio": 1.1981132075471699, "no_speech_prob": 0.06656678020954132}, {"id": 929, "seek": 409654, "start": 4104.66, "end": 4109.0199999999995, "text": " Done.", "tokens": [50770, 18658, 13, 50988], "temperature": 0.0, "avg_logprob": -0.33662478820137354, "compression_ratio": 1.1981132075471699, "no_speech_prob": 0.06656678020954132}, {"id": 930, "seek": 409654, "start": 4109.0199999999995, "end": 4111.54, "text": " Let's do the second one.", "tokens": [50988, 961, 311, 360, 264, 1150, 472, 13, 51114], "temperature": 0.0, "avg_logprob": -0.33662478820137354, "compression_ratio": 1.1981132075471699, "no_speech_prob": 0.06656678020954132}, {"id": 931, "seek": 409654, "start": 4111.54, "end": 4115.42, "text": " These are so fun.", "tokens": [51114, 1981, 366, 370, 1019, 13, 51308], "temperature": 0.0, "avg_logprob": -0.33662478820137354, "compression_ratio": 1.1981132075471699, "no_speech_prob": 0.06656678020954132}, {"id": 932, "seek": 409654, "start": 4115.42, "end": 4119.46, "text": " What can we do here?", "tokens": [51308, 708, 393, 321, 360, 510, 30, 51510], "temperature": 0.0, "avg_logprob": -0.33662478820137354, "compression_ratio": 1.1981132075471699, "no_speech_prob": 0.06656678020954132}, {"id": 933, "seek": 411946, "start": 4119.46, "end": 4123.26, "text": " First of all, what's the order...", "tokens": [50364, 2386, 295, 439, 11, 437, 311, 264, 1668, 485, 50554], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 934, "seek": 411946, "start": 4123.26, "end": 4127.7, "text": " Like, which one of these goes first?", "tokens": [50554, 1743, 11, 597, 472, 295, 613, 1709, 700, 30, 50776], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 935, "seek": 411946, "start": 4127.7, "end": 4130.46, "text": " We got 4, 5, and 6.", "tokens": [50776, 492, 658, 1017, 11, 1025, 11, 293, 1386, 13, 50914], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 936, "seek": 411946, "start": 4130.46, "end": 4131.46, "text": " How many people...", "tokens": [50914, 1012, 867, 561, 485, 50964], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 937, "seek": 411946, "start": 4131.46, "end": 4133.66, "text": " Well, so I guess...", "tokens": [50964, 1042, 11, 370, 286, 2041, 485, 51074], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 938, "seek": 411946, "start": 4133.66, "end": 4136.94, "text": " We want to figure out what goes into X.", "tokens": [51074, 492, 528, 281, 2573, 484, 437, 1709, 666, 1783, 13, 51238], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 939, "seek": 411946, "start": 4136.94, "end": 4140.34, "text": " That's our outermost function variable.", "tokens": [51238, 663, 311, 527, 484, 966, 555, 2445, 7006, 13, 51408], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 940, "seek": 411946, "start": 4140.34, "end": 4142.94, "text": " We have three options.", "tokens": [51408, 492, 362, 1045, 3956, 13, 51538], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 941, "seek": 411946, "start": 4142.94, "end": 4145.86, "text": " How many people are gonna vote that it's 4?", "tokens": [51538, 1012, 867, 561, 366, 799, 4740, 300, 309, 311, 1017, 30, 51684], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 942, "seek": 411946, "start": 4145.86, "end": 4148.2, "text": " How many people are voting it's 5?", "tokens": [51684, 1012, 867, 561, 366, 10419, 309, 311, 1025, 30, 51801], "temperature": 0.0, "avg_logprob": -0.20734040714004665, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.0503300242125988}, {"id": 943, "seek": 414820, "start": 4148.2, "end": 4150.5599999999995, "text": " How many people are voting it's 6?", "tokens": [50364, 1012, 867, 561, 366, 10419, 309, 311, 1386, 30, 50482], "temperature": 0.0, "avg_logprob": -0.3516837193415715, "compression_ratio": 1.2820512820512822, "no_speech_prob": 0.10087582468986511}, {"id": 944, "seek": 414820, "start": 4150.5599999999995, "end": 4151.5599999999995, "text": " Okay.", "tokens": [50482, 1033, 13, 50532], "temperature": 0.0, "avg_logprob": -0.3516837193415715, "compression_ratio": 1.2820512820512822, "no_speech_prob": 0.10087582468986511}, {"id": 945, "seek": 414820, "start": 4151.5599999999995, "end": 4155.599999999999, "text": " So we have mostly 4 with a little bit of 6.", "tokens": [50532, 407, 321, 362, 5240, 1017, 365, 257, 707, 857, 295, 1386, 13, 50734], "temperature": 0.0, "avg_logprob": -0.3516837193415715, "compression_ratio": 1.2820512820512822, "no_speech_prob": 0.10087582468986511}, {"id": 946, "seek": 414820, "start": 4155.599999999999, "end": 4158.04, "text": " Why would it be 4?", "tokens": [50734, 1545, 576, 309, 312, 1017, 30, 50856], "temperature": 0.0, "avg_logprob": -0.3516837193415715, "compression_ratio": 1.2820512820512822, "no_speech_prob": 0.10087582468986511}, {"id": 947, "seek": 414820, "start": 4158.04, "end": 4159.44, "text": " Yeah.", "tokens": [50856, 865, 13, 50926], "temperature": 0.0, "avg_logprob": -0.3516837193415715, "compression_ratio": 1.2820512820512822, "no_speech_prob": 0.10087582468986511}, {"id": 948, "seek": 414820, "start": 4159.44, "end": 4166.92, "text": " Outside of parentheses, things go left to right.", "tokens": [50926, 28218, 295, 34153, 11, 721, 352, 1411, 281, 558, 13, 51300], "temperature": 0.0, "avg_logprob": -0.3516837193415715, "compression_ratio": 1.2820512820512822, "no_speech_prob": 0.10087582468986511}, {"id": 949, "seek": 414820, "start": 4166.92, "end": 4170.32, "text": " Function application is left associative.", "tokens": [51300, 11166, 882, 3861, 307, 1411, 4180, 1166, 13, 51470], "temperature": 0.0, "avg_logprob": -0.3516837193415715, "compression_ratio": 1.2820512820512822, "no_speech_prob": 0.10087582468986511}, {"id": 950, "seek": 417032, "start": 4170.32, "end": 4181.639999999999, "text": " So that means E1, E2, E3 is equivalent to E1, E2 first, then the result of that with", "tokens": [50364, 407, 300, 1355, 462, 16, 11, 462, 17, 11, 462, 18, 307, 10344, 281, 462, 16, 11, 462, 17, 700, 11, 550, 264, 1874, 295, 300, 365, 50930], "temperature": 0.0, "avg_logprob": -0.1776248308328482, "compression_ratio": 1.2758620689655173, "no_speech_prob": 0.0888107493519783}, {"id": 951, "seek": 417032, "start": 4181.639999999999, "end": 4183.799999999999, "text": " E3.", "tokens": [50930, 462, 18, 13, 51038], "temperature": 0.0, "avg_logprob": -0.1776248308328482, "compression_ratio": 1.2758620689655173, "no_speech_prob": 0.0888107493519783}, {"id": 952, "seek": 417032, "start": 4183.799999999999, "end": 4189.219999999999, "text": " So if we wanted to draw parentheses in here, we would do...", "tokens": [51038, 407, 498, 321, 1415, 281, 2642, 34153, 294, 510, 11, 321, 576, 360, 485, 51309], "temperature": 0.0, "avg_logprob": -0.1776248308328482, "compression_ratio": 1.2758620689655173, "no_speech_prob": 0.0888107493519783}, {"id": 953, "seek": 418922, "start": 4189.22, "end": 4202.780000000001, "text": " If we call all of this E1, 4, 5, 6, it would be E1, 4, the result of that, 5, the result", "tokens": [50364, 759, 321, 818, 439, 295, 341, 462, 16, 11, 1017, 11, 1025, 11, 1386, 11, 309, 576, 312, 462, 16, 11, 1017, 11, 264, 1874, 295, 300, 11, 1025, 11, 264, 1874, 51042], "temperature": 0.0, "avg_logprob": -0.2403081325774497, "compression_ratio": 1.325, "no_speech_prob": 0.024422209709882736}, {"id": 954, "seek": 418922, "start": 4202.780000000001, "end": 4207.820000000001, "text": " of that, 6.", "tokens": [51042, 295, 300, 11, 1386, 13, 51294], "temperature": 0.0, "avg_logprob": -0.2403081325774497, "compression_ratio": 1.325, "no_speech_prob": 0.024422209709882736}, {"id": 955, "seek": 418922, "start": 4207.820000000001, "end": 4210.280000000001, "text": " Okay?", "tokens": [51294, 1033, 30, 51417], "temperature": 0.0, "avg_logprob": -0.2403081325774497, "compression_ratio": 1.325, "no_speech_prob": 0.024422209709882736}, {"id": 956, "seek": 421028, "start": 4210.28, "end": 4222.0, "text": " With that knowledge ahead of us, what can we do?", "tokens": [50364, 2022, 300, 3601, 2286, 295, 505, 11, 437, 393, 321, 360, 30, 50950], "temperature": 0.0, "avg_logprob": -0.3853340446949005, "compression_ratio": 1.3443708609271523, "no_speech_prob": 0.038465715944767}, {"id": 957, "seek": 421028, "start": 4222.0, "end": 4223.48, "text": " How can we reduce this?", "tokens": [50950, 1012, 393, 321, 5407, 341, 30, 51024], "temperature": 0.0, "avg_logprob": -0.3853340446949005, "compression_ratio": 1.3443708609271523, "no_speech_prob": 0.038465715944767}, {"id": 958, "seek": 421028, "start": 4223.48, "end": 4231.48, "text": " Can you just do 1 plus 3 and then...", "tokens": [51024, 1664, 291, 445, 360, 502, 1804, 805, 293, 550, 485, 51424], "temperature": 0.0, "avg_logprob": -0.3853340446949005, "compression_ratio": 1.3443708609271523, "no_speech_prob": 0.038465715944767}, {"id": 959, "seek": 421028, "start": 4231.48, "end": 4233.5199999999995, "text": " You're skipping ahead a little bit.", "tokens": [51424, 509, 434, 31533, 2286, 257, 707, 857, 13, 51526], "temperature": 0.0, "avg_logprob": -0.3853340446949005, "compression_ratio": 1.3443708609271523, "no_speech_prob": 0.038465715944767}, {"id": 960, "seek": 421028, "start": 4233.5199999999995, "end": 4237.5199999999995, "text": " Give me all the simple steps in between.", "tokens": [51526, 5303, 385, 439, 264, 2199, 4439, 294, 1296, 13, 51726], "temperature": 0.0, "avg_logprob": -0.3853340446949005, "compression_ratio": 1.3443708609271523, "no_speech_prob": 0.038465715944767}, {"id": 961, "seek": 421028, "start": 4237.5199999999995, "end": 4238.5199999999995, "text": " You got an idea?", "tokens": [51726, 509, 658, 364, 1558, 30, 51776], "temperature": 0.0, "avg_logprob": -0.3853340446949005, "compression_ratio": 1.3443708609271523, "no_speech_prob": 0.038465715944767}, {"id": 962, "seek": 423852, "start": 4238.52, "end": 4247.72, "text": " I don't know if it's just simple steps, but the...", "tokens": [50364, 286, 500, 380, 458, 498, 309, 311, 445, 2199, 4439, 11, 457, 264, 485, 50824], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 963, "seek": 423852, "start": 4247.72, "end": 4250.040000000001, "text": " That's what it is.", "tokens": [50824, 663, 311, 437, 309, 307, 13, 50940], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 964, "seek": 423852, "start": 4250.040000000001, "end": 4251.040000000001, "text": " What do you mean?", "tokens": [50940, 708, 360, 291, 914, 30, 50990], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 965, "seek": 423852, "start": 4251.040000000001, "end": 4252.040000000001, "text": " I mean...", "tokens": [50990, 286, 914, 485, 51040], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 966, "seek": 423852, "start": 4252.040000000001, "end": 4254.040000000001, "text": " I might be misunderstanding.", "tokens": [51040, 286, 1062, 312, 29227, 13, 51140], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 967, "seek": 423852, "start": 4254.040000000001, "end": 4256.120000000001, "text": " Oh, yeah, yeah.", "tokens": [51140, 876, 11, 1338, 11, 1338, 13, 51244], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 968, "seek": 423852, "start": 4256.120000000001, "end": 4261.0, "text": " So we could rewrite this X, Y, Z, dot Y plus 3.", "tokens": [51244, 407, 321, 727, 28132, 341, 1783, 11, 398, 11, 1176, 11, 5893, 398, 1804, 805, 13, 51488], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 969, "seek": 423852, "start": 4261.0, "end": 4264.52, "text": " 4, 5, 6.", "tokens": [51488, 1017, 11, 1025, 11, 1386, 13, 51664], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 970, "seek": 423852, "start": 4264.52, "end": 4266.120000000001, "text": " These are equivalent.", "tokens": [51664, 1981, 366, 10344, 13, 51744], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 971, "seek": 423852, "start": 4266.120000000001, "end": 4267.92, "text": " They're just different notation.", "tokens": [51744, 814, 434, 445, 819, 24657, 13, 51834], "temperature": 0.0, "avg_logprob": -0.41352528397754956, "compression_ratio": 1.358288770053476, "no_speech_prob": 0.13660266995429993}, {"id": 972, "seek": 426792, "start": 4267.92, "end": 4272.52, "text": " We'll stick with the top one so that we can go one parameter at a time.", "tokens": [50364, 492, 603, 2897, 365, 264, 1192, 472, 370, 300, 321, 393, 352, 472, 13075, 412, 257, 565, 13, 50594], "temperature": 0.2, "avg_logprob": -0.39077772096145985, "compression_ratio": 1.404494382022472, "no_speech_prob": 0.057492446154356}, {"id": 973, "seek": 426792, "start": 4272.52, "end": 4273.96, "text": " Very clearly.", "tokens": [50594, 4372, 4448, 13, 50666], "temperature": 0.2, "avg_logprob": -0.39077772096145985, "compression_ratio": 1.404494382022472, "no_speech_prob": 0.057492446154356}, {"id": 974, "seek": 426792, "start": 4273.96, "end": 4274.96, "text": " But those are equivalent.", "tokens": [50666, 583, 729, 366, 10344, 13, 50716], "temperature": 0.2, "avg_logprob": -0.39077772096145985, "compression_ratio": 1.404494382022472, "no_speech_prob": 0.057492446154356}, {"id": 975, "seek": 426792, "start": 4274.96, "end": 4275.96, "text": " Yeah?", "tokens": [50716, 865, 30, 50766], "temperature": 0.2, "avg_logprob": -0.39077772096145985, "compression_ratio": 1.404494382022472, "no_speech_prob": 0.057492446154356}, {"id": 976, "seek": 426792, "start": 4275.96, "end": 4292.24, "text": " If you do Y, Y, dot Y plus 3, dot Y plus 3, where X is equal to 4, and 5, 6...", "tokens": [50766, 759, 291, 360, 398, 11, 398, 11, 5893, 398, 1804, 805, 11, 5893, 398, 1804, 805, 11, 689, 1783, 307, 2681, 281, 1017, 11, 293, 1025, 11, 1386, 485, 51580], "temperature": 0.2, "avg_logprob": -0.39077772096145985, "compression_ratio": 1.404494382022472, "no_speech_prob": 0.057492446154356}, {"id": 977, "seek": 426792, "start": 4292.24, "end": 4293.24, "text": " Exactly.", "tokens": [51580, 7587, 13, 51630], "temperature": 0.2, "avg_logprob": -0.39077772096145985, "compression_ratio": 1.404494382022472, "no_speech_prob": 0.057492446154356}, {"id": 978, "seek": 426792, "start": 4293.24, "end": 4296.6, "text": " So we can pass just the 4 into our function.", "tokens": [51630, 407, 321, 393, 1320, 445, 264, 1017, 666, 527, 2445, 13, 51798], "temperature": 0.2, "avg_logprob": -0.39077772096145985, "compression_ratio": 1.404494382022472, "no_speech_prob": 0.057492446154356}, {"id": 979, "seek": 429660, "start": 4296.6, "end": 4300.160000000001, "text": " And what that means is that X is gonna take on the value 4.", "tokens": [50364, 400, 437, 300, 1355, 307, 300, 1783, 307, 799, 747, 322, 264, 2158, 1017, 13, 50542], "temperature": 0.0, "avg_logprob": -0.27790431762009526, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.016914544627070427}, {"id": 980, "seek": 429660, "start": 4300.160000000001, "end": 4306.6, "text": " We're gonna be left with still a function, lambda Y, dot lambda Z, dot Y plus 3, with", "tokens": [50542, 492, 434, 799, 312, 1411, 365, 920, 257, 2445, 11, 13607, 398, 11, 5893, 13607, 1176, 11, 5893, 398, 1804, 805, 11, 365, 50864], "temperature": 0.0, "avg_logprob": -0.27790431762009526, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.016914544627070427}, {"id": 981, "seek": 429660, "start": 4306.6, "end": 4309.160000000001, "text": " the two parameters still being passed in.", "tokens": [50864, 264, 732, 9834, 920, 885, 4678, 294, 13, 50992], "temperature": 0.0, "avg_logprob": -0.27790431762009526, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.016914544627070427}, {"id": 982, "seek": 429660, "start": 4309.160000000001, "end": 4311.88, "text": " And now we have some state that we've tacked on.", "tokens": [50992, 400, 586, 321, 362, 512, 1785, 300, 321, 600, 9426, 292, 322, 13, 51128], "temperature": 0.0, "avg_logprob": -0.27790431762009526, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.016914544627070427}, {"id": 983, "seek": 429660, "start": 4311.88, "end": 4313.6, "text": " X is equal to 4.", "tokens": [51128, 1783, 307, 2681, 281, 1017, 13, 51214], "temperature": 0.0, "avg_logprob": -0.27790431762009526, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.016914544627070427}, {"id": 984, "seek": 429660, "start": 4313.6, "end": 4317.6, "text": " What would we do next?", "tokens": [51214, 708, 576, 321, 360, 958, 30, 51414], "temperature": 0.0, "avg_logprob": -0.27790431762009526, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.016914544627070427}, {"id": 985, "seek": 429660, "start": 4317.6, "end": 4320.6, "text": " Yeah?", "tokens": [51414, 865, 30, 51564], "temperature": 0.0, "avg_logprob": -0.27790431762009526, "compression_ratio": 1.5243243243243243, "no_speech_prob": 0.016914544627070427}, {"id": 986, "seek": 432060, "start": 4320.6, "end": 4328.6, "text": " And what are we left with over here?", "tokens": [50364, 400, 437, 366, 321, 1411, 365, 670, 510, 30, 50764], "temperature": 0.0, "avg_logprob": -0.36949596405029295, "compression_ratio": 1.2459016393442623, "no_speech_prob": 0.010986804962158203}, {"id": 987, "seek": 432060, "start": 4328.6, "end": 4332.120000000001, "text": " Yep.", "tokens": [50764, 7010, 13, 50940], "temperature": 0.0, "avg_logprob": -0.36949596405029295, "compression_ratio": 1.2459016393442623, "no_speech_prob": 0.010986804962158203}, {"id": 988, "seek": 432060, "start": 4332.120000000001, "end": 4336.0, "text": " So we'll keep lambda Z, dot Y plus 3 of 6.", "tokens": [50940, 407, 321, 603, 1066, 13607, 1176, 11, 5893, 398, 1804, 805, 295, 1386, 13, 51134], "temperature": 0.0, "avg_logprob": -0.36949596405029295, "compression_ratio": 1.2459016393442623, "no_speech_prob": 0.010986804962158203}, {"id": 989, "seek": 432060, "start": 4336.0, "end": 4338.88, "text": " And now we have a state X is equal to 4.", "tokens": [51134, 400, 586, 321, 362, 257, 1785, 1783, 307, 2681, 281, 1017, 13, 51278], "temperature": 0.0, "avg_logprob": -0.36949596405029295, "compression_ratio": 1.2459016393442623, "no_speech_prob": 0.010986804962158203}, {"id": 990, "seek": 432060, "start": 4338.88, "end": 4342.6, "text": " And Y is equal to 5.", "tokens": [51278, 400, 398, 307, 2681, 281, 1025, 13, 51464], "temperature": 0.0, "avg_logprob": -0.36949596405029295, "compression_ratio": 1.2459016393442623, "no_speech_prob": 0.010986804962158203}, {"id": 991, "seek": 432060, "start": 4342.6, "end": 4345.84, "text": " Okay?", "tokens": [51464, 1033, 30, 51626], "temperature": 0.0, "avg_logprob": -0.36949596405029295, "compression_ratio": 1.2459016393442623, "no_speech_prob": 0.010986804962158203}, {"id": 992, "seek": 434584, "start": 4345.84, "end": 4357.56, "text": " Last piece here.", "tokens": [50364, 5264, 2522, 510, 13, 50950], "temperature": 0.0, "avg_logprob": -0.3253321214155717, "compression_ratio": 1.146788990825688, "no_speech_prob": 0.1480228751897812}, {"id": 993, "seek": 434584, "start": 4357.56, "end": 4358.56, "text": " I know you guys know it.", "tokens": [50950, 286, 458, 291, 1074, 458, 309, 13, 51000], "temperature": 0.0, "avg_logprob": -0.3253321214155717, "compression_ratio": 1.146788990825688, "no_speech_prob": 0.1480228751897812}, {"id": 994, "seek": 434584, "start": 4358.56, "end": 4359.56, "text": " Oh!", "tokens": [51000, 876, 0, 51050], "temperature": 0.0, "avg_logprob": -0.3253321214155717, "compression_ratio": 1.146788990825688, "no_speech_prob": 0.1480228751897812}, {"id": 995, "seek": 434584, "start": 4359.56, "end": 4360.56, "text": " Yeah.", "tokens": [51050, 865, 13, 51100], "temperature": 0.0, "avg_logprob": -0.3253321214155717, "compression_ratio": 1.146788990825688, "no_speech_prob": 0.1480228751897812}, {"id": 996, "seek": 434584, "start": 4360.56, "end": 4365.32, "text": " Yep.", "tokens": [51100, 7010, 13, 51338], "temperature": 0.0, "avg_logprob": -0.3253321214155717, "compression_ratio": 1.146788990825688, "no_speech_prob": 0.1480228751897812}, {"id": 997, "seek": 434584, "start": 4365.32, "end": 4367.32, "text": " So Y plus 3 is left.", "tokens": [51338, 407, 398, 1804, 805, 307, 1411, 13, 51438], "temperature": 0.0, "avg_logprob": -0.3253321214155717, "compression_ratio": 1.146788990825688, "no_speech_prob": 0.1480228751897812}, {"id": 998, "seek": 434584, "start": 4367.32, "end": 4373.360000000001, "text": " We have X equals 4, Y equals 5, and Z equals 6.", "tokens": [51438, 492, 362, 1783, 6915, 1017, 11, 398, 6915, 1025, 11, 293, 1176, 6915, 1386, 13, 51740], "temperature": 0.0, "avg_logprob": -0.3253321214155717, "compression_ratio": 1.146788990825688, "no_speech_prob": 0.1480228751897812}, {"id": 999, "seek": 437336, "start": 4373.36, "end": 4381.2, "text": " We can do the last little step of 5 plus 3, because we know Y is 5.", "tokens": [50364, 492, 393, 360, 264, 1036, 707, 1823, 295, 1025, 1804, 805, 11, 570, 321, 458, 398, 307, 1025, 13, 50756], "temperature": 0.0, "avg_logprob": -0.26353692419735003, "compression_ratio": 1.4195402298850575, "no_speech_prob": 0.036768991500139236}, {"id": 1000, "seek": 437336, "start": 4381.2, "end": 4386.32, "text": " And we're done.", "tokens": [50756, 400, 321, 434, 1096, 13, 51012], "temperature": 0.0, "avg_logprob": -0.26353692419735003, "compression_ratio": 1.4195402298850575, "no_speech_prob": 0.036768991500139236}, {"id": 1001, "seek": 437336, "start": 4386.32, "end": 4387.599999999999, "text": " That's what's on the slides.", "tokens": [51012, 663, 311, 437, 311, 322, 264, 9788, 13, 51076], "temperature": 0.0, "avg_logprob": -0.26353692419735003, "compression_ratio": 1.4195402298850575, "no_speech_prob": 0.036768991500139236}, {"id": 1002, "seek": 437336, "start": 4387.599999999999, "end": 4389.7, "text": " We've just done the same exact thing.", "tokens": [51076, 492, 600, 445, 1096, 264, 912, 1900, 551, 13, 51181], "temperature": 0.0, "avg_logprob": -0.26353692419735003, "compression_ratio": 1.4195402298850575, "no_speech_prob": 0.036768991500139236}, {"id": 1003, "seek": 437336, "start": 4389.7, "end": 4395.44, "text": " And I've left off the state, but that's not too important.", "tokens": [51181, 400, 286, 600, 1411, 766, 264, 1785, 11, 457, 300, 311, 406, 886, 1021, 13, 51468], "temperature": 0.0, "avg_logprob": -0.26353692419735003, "compression_ratio": 1.4195402298850575, "no_speech_prob": 0.036768991500139236}, {"id": 1004, "seek": 437336, "start": 4395.44, "end": 4397.639999999999, "text": " All right.", "tokens": [51468, 1057, 558, 13, 51578], "temperature": 0.0, "avg_logprob": -0.26353692419735003, "compression_ratio": 1.4195402298850575, "no_speech_prob": 0.036768991500139236}, {"id": 1005, "seek": 437336, "start": 4397.639999999999, "end": 4400.639999999999, "text": " One more before we finish.", "tokens": [51578, 1485, 544, 949, 321, 2413, 13, 51728], "temperature": 0.0, "avg_logprob": -0.26353692419735003, "compression_ratio": 1.4195402298850575, "no_speech_prob": 0.036768991500139236}, {"id": 1006, "seek": 440064, "start": 4400.92, "end": 4406.200000000001, "text": " Actually, we probably don't have time before we finish.", "tokens": [50378, 5135, 11, 321, 1391, 500, 380, 362, 565, 949, 321, 2413, 13, 50642], "temperature": 0.0, "avg_logprob": -0.29169946835364824, "compression_ratio": 1.6294416243654823, "no_speech_prob": 0.007011705078184605}, {"id": 1007, "seek": 440064, "start": 4406.200000000001, "end": 4413.26, "text": " So we are going to continue on Wednesday doing more semantics of lambda calc.", "tokens": [50642, 407, 321, 366, 516, 281, 2354, 322, 10579, 884, 544, 4361, 45298, 295, 13607, 2104, 66, 13, 50995], "temperature": 0.0, "avg_logprob": -0.29169946835364824, "compression_ratio": 1.6294416243654823, "no_speech_prob": 0.007011705078184605}, {"id": 1008, "seek": 440064, "start": 4413.26, "end": 4417.160000000001, "text": " This is exactly what you're gonna be doing on the homework, where I will give you lambda", "tokens": [50995, 639, 307, 2293, 437, 291, 434, 799, 312, 884, 322, 264, 14578, 11, 689, 286, 486, 976, 291, 13607, 51190], "temperature": 0.0, "avg_logprob": -0.29169946835364824, "compression_ratio": 1.6294416243654823, "no_speech_prob": 0.007011705078184605}, {"id": 1009, "seek": 440064, "start": 4417.160000000001, "end": 4422.52, "text": " calculus, you turn it into JavaScript, or I give you JavaScript, you turn it into lambda", "tokens": [51190, 33400, 11, 291, 1261, 309, 666, 15778, 11, 420, 286, 976, 291, 15778, 11, 291, 1261, 309, 666, 13607, 51458], "temperature": 0.0, "avg_logprob": -0.29169946835364824, "compression_ratio": 1.6294416243654823, "no_speech_prob": 0.007011705078184605}, {"id": 1010, "seek": 440064, "start": 4422.52, "end": 4425.52, "text": " calculus.", "tokens": [51458, 33400, 13, 51608], "temperature": 0.0, "avg_logprob": -0.29169946835364824, "compression_ratio": 1.6294416243654823, "no_speech_prob": 0.007011705078184605}, {"id": 1011, "seek": 442552, "start": 4425.52, "end": 4428.6, "text": " Yeah?", "tokens": [50364, 865, 30, 50518], "temperature": 0.0, "avg_logprob": -0.5420012967339878, "compression_ratio": 1.105263157894737, "no_speech_prob": 0.5111744999885559}, {"id": 1012, "seek": 442552, "start": 4428.6, "end": 4450.120000000001, "text": " So I wonder how can we go from here to this expression?", "tokens": [50518, 407, 286, 2441, 577, 393, 321, 352, 490, 510, 281, 341, 6114, 30, 51594], "temperature": 0.0, "avg_logprob": -0.5420012967339878, "compression_ratio": 1.105263157894737, "no_speech_prob": 0.5111744999885559}, {"id": 1013, "seek": 442552, "start": 4450.120000000001, "end": 4452.4400000000005, "text": " So which one was this?", "tokens": [51594, 407, 597, 472, 390, 341, 30, 51710], "temperature": 0.0, "avg_logprob": -0.5420012967339878, "compression_ratio": 1.105263157894737, "no_speech_prob": 0.5111744999885559}, {"id": 1014, "seek": 445244, "start": 4452.44, "end": 4457.08, "text": " Where we can go...", "tokens": [50364, 2305, 321, 393, 352, 485, 50596], "temperature": 0.0, "avg_logprob": -0.3099067415509905, "compression_ratio": 1.2847222222222223, "no_speech_prob": 0.11277846992015839}, {"id": 1015, "seek": 445244, "start": 4457.08, "end": 4458.08, "text": " So we have...", "tokens": [50596, 407, 321, 362, 485, 50646], "temperature": 0.0, "avg_logprob": -0.3099067415509905, "compression_ratio": 1.2847222222222223, "no_speech_prob": 0.11277846992015839}, {"id": 1016, "seek": 445244, "start": 4458.08, "end": 4461.96, "text": " What are we starting with?", "tokens": [50646, 708, 366, 321, 2891, 365, 30, 50840], "temperature": 0.0, "avg_logprob": -0.3099067415509905, "compression_ratio": 1.2847222222222223, "no_speech_prob": 0.11277846992015839}, {"id": 1017, "seek": 445244, "start": 4461.96, "end": 4470.5199999999995, "text": " Lambda F dot F of 3 being applied to lambda X dot X plus 1.", "tokens": [50840, 45691, 479, 5893, 479, 295, 805, 885, 6456, 281, 13607, 1783, 5893, 1783, 1804, 502, 13, 51268], "temperature": 0.0, "avg_logprob": -0.3099067415509905, "compression_ratio": 1.2847222222222223, "no_speech_prob": 0.11277846992015839}, {"id": 1018, "seek": 445244, "start": 4470.5199999999995, "end": 4471.5199999999995, "text": " Right?", "tokens": [51268, 1779, 30, 51318], "temperature": 0.0, "avg_logprob": -0.3099067415509905, "compression_ratio": 1.2847222222222223, "no_speech_prob": 0.11277846992015839}, {"id": 1019, "seek": 445244, "start": 4471.5199999999995, "end": 4472.5199999999995, "text": " Yeah.", "tokens": [51318, 865, 13, 51368], "temperature": 0.0, "avg_logprob": -0.3099067415509905, "compression_ratio": 1.2847222222222223, "no_speech_prob": 0.11277846992015839}, {"id": 1020, "seek": 445244, "start": 4472.5199999999995, "end": 4473.5199999999995, "text": " So...", "tokens": [51368, 407, 485, 51418], "temperature": 0.0, "avg_logprob": -0.3099067415509905, "compression_ratio": 1.2847222222222223, "no_speech_prob": 0.11277846992015839}, {"id": 1021, "seek": 445244, "start": 4473.5199999999995, "end": 4476.719999999999, "text": " And we're turning them into our E1, E2, right?", "tokens": [51418, 400, 321, 434, 6246, 552, 666, 527, 462, 16, 11, 462, 17, 11, 558, 30, 51578], "temperature": 0.0, "avg_logprob": -0.3099067415509905, "compression_ratio": 1.2847222222222223, "no_speech_prob": 0.11277846992015839}, {"id": 1022, "seek": 447672, "start": 4476.72, "end": 4481.68, "text": " So we can turn 3 into an expression.", "tokens": [50364, 407, 321, 393, 1261, 805, 666, 364, 6114, 13, 50612], "temperature": 0.0, "avg_logprob": -0.20940825057356324, "compression_ratio": 1.452054794520548, "no_speech_prob": 0.15607304871082306}, {"id": 1023, "seek": 447672, "start": 4481.68, "end": 4483.84, "text": " Because that's just a complex expression.", "tokens": [50612, 1436, 300, 311, 445, 257, 3997, 6114, 13, 50720], "temperature": 0.0, "avg_logprob": -0.20940825057356324, "compression_ratio": 1.452054794520548, "no_speech_prob": 0.15607304871082306}, {"id": 1024, "seek": 447672, "start": 4483.84, "end": 4488.360000000001, "text": " So we can say lambda F dot F of E1.", "tokens": [50720, 407, 321, 393, 584, 13607, 479, 5893, 479, 295, 462, 16, 13, 50946], "temperature": 0.0, "avg_logprob": -0.20940825057356324, "compression_ratio": 1.452054794520548, "no_speech_prob": 0.15607304871082306}, {"id": 1025, "seek": 447672, "start": 4488.360000000001, "end": 4491.8, "text": " Lambda X dot X plus 1.", "tokens": [50946, 45691, 1783, 5893, 1783, 1804, 502, 13, 51118], "temperature": 0.0, "avg_logprob": -0.20940825057356324, "compression_ratio": 1.452054794520548, "no_speech_prob": 0.15607304871082306}, {"id": 1026, "seek": 447672, "start": 4491.8, "end": 4502.92, "text": " And then because of this rule here, E1, E2, we can turn these into E2, E1.", "tokens": [51118, 400, 550, 570, 295, 341, 4978, 510, 11, 462, 16, 11, 462, 17, 11, 321, 393, 1261, 613, 666, 462, 17, 11, 462, 16, 13, 51674], "temperature": 0.0, "avg_logprob": -0.20940825057356324, "compression_ratio": 1.452054794520548, "no_speech_prob": 0.15607304871082306}, {"id": 1027, "seek": 450292, "start": 4502.92, "end": 4505.84, "text": " Lambda F dot...", "tokens": [50364, 45691, 479, 5893, 485, 50510], "temperature": 0.0, "avg_logprob": -0.36810060531374006, "compression_ratio": 1.392, "no_speech_prob": 0.4918400049209595}, {"id": 1028, "seek": 450292, "start": 4505.84, "end": 4509.04, "text": " Well, okay.", "tokens": [50510, 1042, 11, 1392, 13, 50670], "temperature": 0.0, "avg_logprob": -0.36810060531374006, "compression_ratio": 1.392, "no_speech_prob": 0.4918400049209595}, {"id": 1029, "seek": 450292, "start": 4509.04, "end": 4512.8, "text": " I guess we're using this rule to turn F into E.", "tokens": [50670, 286, 2041, 321, 434, 1228, 341, 4978, 281, 1261, 479, 666, 462, 13, 50858], "temperature": 0.0, "avg_logprob": -0.36810060531374006, "compression_ratio": 1.392, "no_speech_prob": 0.4918400049209595}, {"id": 1030, "seek": 450292, "start": 4512.8, "end": 4519.92, "text": " Then we use that rule to turn E2, E1 into E3.", "tokens": [50858, 1396, 321, 764, 300, 4978, 281, 1261, 462, 17, 11, 462, 16, 666, 462, 18, 13, 51214], "temperature": 0.0, "avg_logprob": -0.36810060531374006, "compression_ratio": 1.392, "no_speech_prob": 0.4918400049209595}, {"id": 1031, "seek": 450292, "start": 4519.92, "end": 4524.92, "text": " And now we use the middle rule to turn that into E4.", "tokens": [51214, 400, 586, 321, 764, 264, 2808, 4978, 281, 1261, 300, 666, 462, 19, 13, 51464], "temperature": 0.0, "avg_logprob": -0.36810060531374006, "compression_ratio": 1.392, "no_speech_prob": 0.4918400049209595}, {"id": 1032, "seek": 452492, "start": 4524.92, "end": 4535.12, "text": " Yeah, that's right.", "tokens": [50364, 865, 11, 300, 311, 558, 13, 50874], "temperature": 0.0, "avg_logprob": -0.24940145932711089, "compression_ratio": 1.8243243243243243, "no_speech_prob": 0.0726330503821373}, {"id": 1033, "seek": 452492, "start": 4535.12, "end": 4539.9400000000005, "text": " So lambdas bind until they find an unmatched closed parenthesis.", "tokens": [50874, 407, 10097, 27476, 14786, 1826, 436, 915, 364, 19334, 24102, 5395, 23350, 9374, 13, 51115], "temperature": 0.0, "avg_logprob": -0.24940145932711089, "compression_ratio": 1.8243243243243243, "no_speech_prob": 0.0726330503821373}, {"id": 1034, "seek": 452492, "start": 4539.9400000000005, "end": 4546.64, "text": " So this lambda here, if we take these out, this lambda here goes until it finds an unmatched", "tokens": [51115, 407, 341, 13607, 510, 11, 498, 321, 747, 613, 484, 11, 341, 13607, 510, 1709, 1826, 309, 10704, 364, 19334, 24102, 51450], "temperature": 0.0, "avg_logprob": -0.24940145932711089, "compression_ratio": 1.8243243243243243, "no_speech_prob": 0.0726330503821373}, {"id": 1035, "seek": 452492, "start": 4546.64, "end": 4547.88, "text": " closed parenthesis.", "tokens": [51450, 5395, 23350, 9374, 13, 51512], "temperature": 0.0, "avg_logprob": -0.24940145932711089, "compression_ratio": 1.8243243243243243, "no_speech_prob": 0.0726330503821373}, {"id": 1036, "seek": 452492, "start": 4547.88, "end": 4549.92, "text": " So it's going...", "tokens": [51512, 407, 309, 311, 516, 485, 51614], "temperature": 0.0, "avg_logprob": -0.24940145932711089, "compression_ratio": 1.8243243243243243, "no_speech_prob": 0.0726330503821373}, {"id": 1037, "seek": 452492, "start": 4549.92, "end": 4550.92, "text": " Unmatched closed parenthesis.", "tokens": [51614, 1156, 76, 24102, 5395, 23350, 9374, 13, 51664], "temperature": 0.0, "avg_logprob": -0.24940145932711089, "compression_ratio": 1.8243243243243243, "no_speech_prob": 0.0726330503821373}, {"id": 1038, "seek": 452492, "start": 4550.92, "end": 4552.64, "text": " Because it binds outside.", "tokens": [51664, 1436, 309, 41515, 2380, 13, 51750], "temperature": 0.0, "avg_logprob": -0.24940145932711089, "compression_ratio": 1.8243243243243243, "no_speech_prob": 0.0726330503821373}, {"id": 1039, "seek": 455264, "start": 4552.64, "end": 4556.0, "text": " So from here, goes and stops here.", "tokens": [50364, 407, 490, 510, 11, 1709, 293, 10094, 510, 13, 50532], "temperature": 0.0, "avg_logprob": -0.4161982763381231, "compression_ratio": 1.34, "no_speech_prob": 0.3208044767379761}, {"id": 1040, "seek": 455264, "start": 4556.0, "end": 4559.92, "text": " That means this is the body of the lambda.", "tokens": [50532, 663, 1355, 341, 307, 264, 1772, 295, 264, 13607, 13, 50728], "temperature": 0.0, "avg_logprob": -0.4161982763381231, "compression_ratio": 1.34, "no_speech_prob": 0.3208044767379761}, {"id": 1041, "seek": 455264, "start": 4559.92, "end": 4574.68, "text": " So that, like, this here goes all the way to that point.", "tokens": [50728, 407, 300, 11, 411, 11, 341, 510, 1709, 439, 264, 636, 281, 300, 935, 13, 51466], "temperature": 0.0, "avg_logprob": -0.4161982763381231, "compression_ratio": 1.34, "no_speech_prob": 0.3208044767379761}, {"id": 1042, "seek": 457468, "start": 4574.68, "end": 4604.08, "text": " Which means we're allowed to then put in these parentheses if we want.", "tokens": [50364, 3013, 1355, 321, 434, 4350, 281, 550, 829, 294, 613, 34153, 498, 321, 528, 13, 51834], "temperature": 0.0, "avg_logprob": -0.4478007366782741, "compression_ratio": 1.0144927536231885, "no_speech_prob": 0.4725366532802582}, {"id": 1043, "seek": 460408, "start": 4604.08, "end": 4606.32, "text": " Make sure you include the dot there.", "tokens": [50364, 4387, 988, 291, 4090, 264, 5893, 456, 13, 50476], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1044, "seek": 460408, "start": 4606.32, "end": 4607.32, "text": " Yes.", "tokens": [50476, 1079, 13, 50526], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1045, "seek": 460408, "start": 4607.32, "end": 4608.32, "text": " Yeah.", "tokens": [50526, 865, 13, 50576], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1046, "seek": 460408, "start": 4608.32, "end": 4613.5199999999995, "text": " I think it's...", "tokens": [50576, 286, 519, 309, 311, 485, 50836], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1047, "seek": 460408, "start": 4613.5199999999995, "end": 4614.5199999999995, "text": " It's kind of faint there.", "tokens": [50836, 467, 311, 733, 295, 21104, 456, 13, 50886], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1048, "seek": 460408, "start": 4614.5199999999995, "end": 4615.5599999999995, "text": " I might have been...", "tokens": [50886, 286, 1062, 362, 668, 485, 50938], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1049, "seek": 460408, "start": 4615.5599999999995, "end": 4618.6, "text": " I might have forgotten it, but it needs to have a dot.", "tokens": [50938, 286, 1062, 362, 11832, 309, 11, 457, 309, 2203, 281, 362, 257, 5893, 13, 51090], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1050, "seek": 460408, "start": 4618.6, "end": 4619.6, "text": " Yeah.", "tokens": [51090, 865, 13, 51140], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1051, "seek": 460408, "start": 4619.6, "end": 4620.6, "text": " The dot needs to stick around.", "tokens": [51140, 440, 5893, 2203, 281, 2897, 926, 13, 51190], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1052, "seek": 460408, "start": 4620.6, "end": 4621.6, "text": " Yeah.", "tokens": [51190, 865, 13, 51240], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1053, "seek": 460408, "start": 4621.6, "end": 4622.6, "text": " Yep.", "tokens": [51240, 7010, 13, 51290], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1054, "seek": 460408, "start": 4622.6, "end": 4623.6, "text": " Yep.", "tokens": [51290, 7010, 13, 51340], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1055, "seek": 460408, "start": 4623.6, "end": 4632.72, "text": " So, like, I did this how I think it should be based on the load.json file.", "tokens": [51340, 407, 11, 411, 11, 286, 630, 341, 577, 286, 519, 309, 820, 312, 2361, 322, 264, 3677, 13, 73, 3015, 3991, 13, 51796], "temperature": 0.0, "avg_logprob": -0.3586701640376338, "compression_ratio": 1.6277777777777778, "no_speech_prob": 0.8916988372802734}, {"id": 1056, "seek": 463272, "start": 4632.72, "end": 4638.280000000001, "text": " But it keeps only giving me a 2 out of 5, so I'm not sure if it's the cache being...", "tokens": [50364, 583, 309, 5965, 787, 2902, 385, 257, 568, 484, 295, 1025, 11, 370, 286, 478, 406, 988, 498, 309, 311, 264, 19459, 885, 485, 50642], "temperature": 0.0, "avg_logprob": -0.29957633182920257, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.9228910207748413}, {"id": 1057, "seek": 463272, "start": 4638.280000000001, "end": 4639.280000000001, "text": " Yeah.", "tokens": [50642, 865, 13, 50692], "temperature": 0.0, "avg_logprob": -0.29957633182920257, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.9228910207748413}, {"id": 1058, "seek": 463272, "start": 4639.280000000001, "end": 4640.280000000001, "text": " It looks like...", "tokens": [50692, 467, 1542, 411, 485, 50742], "temperature": 0.0, "avg_logprob": -0.29957633182920257, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.9228910207748413}, {"id": 1059, "seek": 463272, "start": 4640.280000000001, "end": 4644.08, "text": " So you need to create your own cache.", "tokens": [50742, 407, 291, 643, 281, 1884, 428, 1065, 19459, 13, 50932], "temperature": 0.0, "avg_logprob": -0.29957633182920257, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.9228910207748413}, {"id": 1060, "seek": 463272, "start": 4644.08, "end": 4650.4800000000005, "text": " So you want to check, like, after you do work, save that work to the cache so that the next", "tokens": [50932, 407, 291, 528, 281, 1520, 11, 411, 11, 934, 291, 360, 589, 11, 3155, 300, 589, 281, 264, 19459, 370, 300, 264, 958, 51252], "temperature": 0.0, "avg_logprob": -0.29957633182920257, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.9228910207748413}, {"id": 1061, "seek": 463272, "start": 4650.4800000000005, "end": 4656.16, "text": " time you then check to say if this work is already done in the cache, return whatever", "tokens": [51252, 565, 291, 550, 1520, 281, 584, 498, 341, 589, 307, 1217, 1096, 294, 264, 19459, 11, 2736, 2035, 51536], "temperature": 0.0, "avg_logprob": -0.29957633182920257, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.9228910207748413}, {"id": 1062, "seek": 463272, "start": 4656.16, "end": 4658.56, "text": " is in the cache.", "tokens": [51536, 307, 294, 264, 19459, 13, 51656], "temperature": 0.0, "avg_logprob": -0.29957633182920257, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.9228910207748413}, {"id": 1063, "seek": 463272, "start": 4658.56, "end": 4661.360000000001, "text": " So you're setting cache, but you aren't checking cache.", "tokens": [51656, 407, 291, 434, 3287, 19459, 11, 457, 291, 3212, 380, 8568, 19459, 13, 51796], "temperature": 0.0, "avg_logprob": -0.29957633182920257, "compression_ratio": 1.7217391304347827, "no_speech_prob": 0.9228910207748413}, {"id": 1064, "seek": 466136, "start": 4661.36, "end": 4666.0, "text": " I think is one way to think of it.", "tokens": [50364, 286, 519, 307, 472, 636, 281, 519, 295, 309, 13, 50596], "temperature": 0.0, "avg_logprob": -0.3428329120982777, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.48823949694633484}, {"id": 1065, "seek": 466136, "start": 4666.0, "end": 4670.719999999999, "text": " So if I have some...", "tokens": [50596, 407, 498, 286, 362, 512, 485, 50832], "temperature": 0.0, "avg_logprob": -0.3428329120982777, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.48823949694633484}, {"id": 1066, "seek": 466136, "start": 4670.719999999999, "end": 4674.04, "text": " I'll just write Python, because that's, you know...", "tokens": [50832, 286, 603, 445, 2464, 15329, 11, 570, 300, 311, 11, 291, 458, 485, 50998], "temperature": 0.0, "avg_logprob": -0.3428329120982777, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.48823949694633484}, {"id": 1067, "seek": 466136, "start": 4674.04, "end": 4683.0, "text": " Then what I can do is I can say if x in cache, return cache at x.", "tokens": [50998, 1396, 437, 286, 393, 360, 307, 286, 393, 584, 498, 2031, 294, 19459, 11, 2736, 19459, 412, 2031, 13, 51446], "temperature": 0.0, "avg_logprob": -0.3428329120982777, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.48823949694633484}, {"id": 1068, "seek": 466136, "start": 4683.0, "end": 4684.0, "text": " Right?", "tokens": [51446, 1779, 30, 51496], "temperature": 0.0, "avg_logprob": -0.3428329120982777, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.48823949694633484}, {"id": 1069, "seek": 466136, "start": 4684.0, "end": 4689.16, "text": " So all you need to do is check if obj is already in cache, and then just pass obj back.", "tokens": [51496, 407, 439, 291, 643, 281, 360, 307, 1520, 498, 1111, 73, 307, 1217, 294, 19459, 11, 293, 550, 445, 1320, 1111, 73, 646, 13, 51754], "temperature": 0.0, "avg_logprob": -0.3428329120982777, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.48823949694633484}, {"id": 1070, "seek": 468916, "start": 4689.16, "end": 4699.4, "text": " But then the important thing is also how we store that cache at x is equal to...", "tokens": [50364, 583, 550, 264, 1021, 551, 307, 611, 577, 321, 3531, 300, 19459, 412, 2031, 307, 2681, 281, 485, 50876], "temperature": 0.0, "avg_logprob": -0.39179420471191406, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.32079198956489563}, {"id": 1071, "seek": 468916, "start": 4699.4, "end": 4700.4, "text": " Right.", "tokens": [50876, 1779, 13, 50926], "temperature": 0.0, "avg_logprob": -0.39179420471191406, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.32079198956489563}, {"id": 1072, "seek": 468916, "start": 4700.4, "end": 4701.4, "text": " But yeah.", "tokens": [50926, 583, 1338, 13, 50976], "temperature": 0.0, "avg_logprob": -0.39179420471191406, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.32079198956489563}, {"id": 1073, "seek": 468916, "start": 4701.4, "end": 4705.96, "text": " So these are, like, the important before and after steps of the compute.", "tokens": [50976, 407, 613, 366, 11, 411, 11, 264, 1021, 949, 293, 934, 4439, 295, 264, 14722, 13, 51204], "temperature": 0.0, "avg_logprob": -0.39179420471191406, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.32079198956489563}, {"id": 1074, "seek": 468916, "start": 4705.96, "end": 4709.04, "text": " But I just check first if obj is already in that.", "tokens": [51204, 583, 286, 445, 1520, 700, 498, 1111, 73, 307, 1217, 294, 300, 13, 51358], "temperature": 0.0, "avg_logprob": -0.39179420471191406, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.32079198956489563}, {"id": 1075, "seek": 468916, "start": 4709.04, "end": 4711.2, "text": " My hunch is that should resolve your issues.", "tokens": [51358, 1222, 47630, 307, 300, 820, 14151, 428, 2663, 13, 51466], "temperature": 0.0, "avg_logprob": -0.39179420471191406, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.32079198956489563}, {"id": 1076, "seek": 471120, "start": 4711.2, "end": 4715.76, "text": " And then my other thing is it says that I have to use load.js file, but it's not...", "tokens": [50364, 400, 550, 452, 661, 551, 307, 309, 1619, 300, 286, 362, 281, 764, 3677, 13, 25530, 3991, 11, 457, 309, 311, 406, 485, 50592], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1077, "seek": 471120, "start": 4715.76, "end": 4716.76, "text": " It doesn't believe that it exists.", "tokens": [50592, 467, 1177, 380, 1697, 300, 309, 8198, 13, 50642], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1078, "seek": 471120, "start": 4716.76, "end": 4726.32, "text": " Like, any time I do load.js file, it says that function doesn't exist.", "tokens": [50642, 1743, 11, 604, 565, 286, 360, 3677, 13, 25530, 3991, 11, 309, 1619, 300, 2445, 1177, 380, 2514, 13, 51120], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1079, "seek": 471120, "start": 4726.32, "end": 4727.92, "text": " Is it on...", "tokens": [51120, 1119, 309, 322, 485, 51200], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1080, "seek": 471120, "start": 4727.92, "end": 4730.24, "text": " Is it, like, exported or something?", "tokens": [51200, 1119, 309, 11, 411, 11, 42055, 420, 746, 30, 51316], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1081, "seek": 471120, "start": 4730.24, "end": 4734.36, "text": " No, because I'm just doing it like this, and it just says that's not...", "tokens": [51316, 883, 11, 570, 286, 478, 445, 884, 309, 411, 341, 11, 293, 309, 445, 1619, 300, 311, 406, 485, 51522], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1082, "seek": 471120, "start": 4734.36, "end": 4735.36, "text": " So have you...", "tokens": [51522, 407, 362, 291, 485, 51572], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1083, "seek": 471120, "start": 4735.36, "end": 4736.36, "text": " Wait.", "tokens": [51572, 3802, 13, 51622], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1084, "seek": 471120, "start": 4736.36, "end": 4740.5199999999995, "text": " So you have a...", "tokens": [51622, 407, 291, 362, 257, 485, 51830], "temperature": 0.0, "avg_logprob": -0.38540375971161156, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.5077117681503296}, {"id": 1085, "seek": 474052, "start": 4740.52, "end": 4750.52, "text": " So I believe with this one, you need to be giving it the information that it needs.", "tokens": [50364, 407, 286, 1697, 365, 341, 472, 11, 291, 643, 281, 312, 2902, 309, 264, 1589, 300, 309, 2203, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3480997669453524, "compression_ratio": 1.4764150943396226, "no_speech_prob": 0.059206683188676834}, {"id": 1086, "seek": 474052, "start": 4750.52, "end": 4755.320000000001, "text": " So let me double-check on that.", "tokens": [50864, 407, 718, 385, 3834, 12, 15723, 322, 300, 13, 51104], "temperature": 0.0, "avg_logprob": -0.3480997669453524, "compression_ratio": 1.4764150943396226, "no_speech_prob": 0.059206683188676834}, {"id": 1087, "seek": 474052, "start": 4755.320000000001, "end": 4756.68, "text": " But yeah, my...", "tokens": [51104, 583, 1338, 11, 452, 485, 51172], "temperature": 0.0, "avg_logprob": -0.3480997669453524, "compression_ratio": 1.4764150943396226, "no_speech_prob": 0.059206683188676834}, {"id": 1088, "seek": 474052, "start": 4756.68, "end": 4757.68, "text": " So do we define...", "tokens": [51172, 407, 360, 321, 6964, 485, 51222], "temperature": 0.0, "avg_logprob": -0.3480997669453524, "compression_ratio": 1.4764150943396226, "no_speech_prob": 0.059206683188676834}, {"id": 1089, "seek": 474052, "start": 4757.68, "end": 4760.84, "text": " Load.js file is defined in require.", "tokens": [51222, 48408, 13, 25530, 3991, 307, 7642, 294, 3651, 13, 51380], "temperature": 0.0, "avg_logprob": -0.3480997669453524, "compression_ratio": 1.4764150943396226, "no_speech_prob": 0.059206683188676834}, {"id": 1090, "seek": 474052, "start": 4760.84, "end": 4763.4400000000005, "text": " And it's not exported for you to use somehow?", "tokens": [51380, 400, 309, 311, 406, 42055, 337, 291, 281, 764, 6063, 30, 51510], "temperature": 0.0, "avg_logprob": -0.3480997669453524, "compression_ratio": 1.4764150943396226, "no_speech_prob": 0.059206683188676834}, {"id": 1091, "seek": 474052, "start": 4763.4400000000005, "end": 4767.56, "text": " Well, we have require saved, but even if I, like, require is as an object.", "tokens": [51510, 1042, 11, 321, 362, 3651, 6624, 11, 457, 754, 498, 286, 11, 411, 11, 3651, 307, 382, 364, 2657, 13, 51716], "temperature": 0.0, "avg_logprob": -0.3480997669453524, "compression_ratio": 1.4764150943396226, "no_speech_prob": 0.059206683188676834}, {"id": 1092, "seek": 474052, "start": 4767.56, "end": 4768.56, "text": " Yeah.", "tokens": [51716, 865, 13, 51766], "temperature": 0.0, "avg_logprob": -0.3480997669453524, "compression_ratio": 1.4764150943396226, "no_speech_prob": 0.059206683188676834}, {"id": 1093, "seek": 476856, "start": 4768.56, "end": 4770.88, "text": " So if I use require, it doesn't exist.", "tokens": [50364, 407, 498, 286, 764, 3651, 11, 309, 1177, 380, 2514, 13, 50480], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1094, "seek": 476856, "start": 4770.88, "end": 4771.88, "text": " But it's exported on require.", "tokens": [50480, 583, 309, 311, 42055, 322, 3651, 13, 50530], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1095, "seek": 476856, "start": 4771.88, "end": 4772.88, "text": " Like...", "tokens": [50530, 1743, 485, 50580], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1096, "seek": 476856, "start": 4772.88, "end": 4773.88, "text": " You mean this?", "tokens": [50580, 509, 914, 341, 30, 50630], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1097, "seek": 476856, "start": 4773.88, "end": 4774.88, "text": " Yeah.", "tokens": [50630, 865, 13, 50680], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1098, "seek": 476856, "start": 4774.88, "end": 4775.88, "text": " Yeah.", "tokens": [50680, 865, 13, 50730], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1099, "seek": 476856, "start": 4775.88, "end": 4776.88, "text": " So you can't require underscore...", "tokens": [50730, 407, 291, 393, 380, 3651, 37556, 485, 50780], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1100, "seek": 476856, "start": 4776.88, "end": 4777.88, "text": " Oh.", "tokens": [50780, 876, 13, 50830], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1101, "seek": 476856, "start": 4777.88, "end": 4778.88, "text": " Is load.js exported?", "tokens": [50830, 1119, 3677, 13, 25530, 42055, 30, 50880], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1102, "seek": 476856, "start": 4778.88, "end": 4779.88, "text": " No, it is not.", "tokens": [50880, 883, 11, 309, 307, 406, 13, 50930], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1103, "seek": 476856, "start": 4779.88, "end": 4780.88, "text": " I don't think so.", "tokens": [50930, 286, 500, 380, 519, 370, 13, 50980], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1104, "seek": 476856, "start": 4780.88, "end": 4781.88, "text": " Yeah.", "tokens": [50980, 865, 13, 51030], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1105, "seek": 476856, "start": 4781.88, "end": 4784.400000000001, "text": " So I think...", "tokens": [51030, 407, 286, 519, 485, 51156], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1106, "seek": 476856, "start": 4784.400000000001, "end": 4786.080000000001, "text": " But it's on the loader.", "tokens": [51156, 583, 309, 311, 322, 264, 3677, 260, 13, 51240], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1107, "seek": 476856, "start": 4786.080000000001, "end": 4796.52, "text": " So the idea is we have some before where we have the normal, like, load function that", "tokens": [51240, 407, 264, 1558, 307, 321, 362, 512, 949, 689, 321, 362, 264, 2710, 11, 411, 11, 3677, 2445, 300, 51762], "temperature": 0.0, "avg_logprob": -0.2841880162556966, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.055821336805820465}, {"id": 1108, "seek": 479652, "start": 4796.52, "end": 4797.52, "text": " we're running.", "tokens": [50364, 321, 434, 2614, 13, 50414], "temperature": 0.0, "avg_logprob": -0.2770669356636379, "compression_ratio": 0.9402985074626866, "no_speech_prob": 0.9992071986198425}, {"id": 1109, "seek": 479652, "start": 4797.52, "end": 4798.72, "text": " Or loader function.", "tokens": [50414, 1610, 3677, 260, 2445, 13, 50474], "temperature": 0.0, "avg_logprob": -0.2770669356636379, "compression_ratio": 0.9402985074626866, "no_speech_prob": 0.9992071986198425}, {"id": 1110, "seek": 479652, "start": 4798.72, "end": 4799.72, "text": " And then the goal is that...", "tokens": [50474, 400, 550, 264, 3387, 307, 300, 485, 50524], "temperature": 0.0, "avg_logprob": -0.2770669356636379, "compression_ratio": 0.9402985074626866, "no_speech_prob": 0.9992071986198425}], "language": "en"}